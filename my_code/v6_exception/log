
./system:     file format elf64-x86-64


Disassembly of section .text:

ffff800000100000 <_start>:
ffff800000100000:	66 8c d0             	mov    ax,ss
ffff800000100003:	8e d8                	mov    ds,eax
ffff800000100005:	8e c0                	mov    es,eax
ffff800000100007:	8e e0                	mov    fs,eax
ffff800000100009:	8e d0                	mov    ss,eax
ffff80000010000b:	bc 00 7e 00 00       	mov    esp,0x7e00
ffff800000100010:	48 c7 c0 00 10 10 00 	mov    rax,0x101000
ffff800000100017:	0f 22 d8             	mov    cr3,rax
ffff80000010001a:	0f 01 15 17 86 00 00 	lgdt   [rip+0x8617]        # ffff800000108638 <GDT_END>
ffff800000100021:	0f 01 1d 1a 96 00 00 	lidt   [rip+0x961a]        # ffff800000109642 <IDT_END>
ffff800000100028:	66 b8 10 00          	mov    ax,0x10
ffff80000010002c:	8e d8                	mov    ds,eax
ffff80000010002e:	8e c0                	mov    es,eax
ffff800000100030:	8e e0                	mov    fs,eax
ffff800000100032:	8e e8                	mov    gs,eax
ffff800000100034:	8e d0                	mov    ss,eax
ffff800000100036:	48 8b 05 05 00 00 00 	mov    rax,QWORD PTR [rip+0x5]        # ffff800000100042 <switch_seg>
ffff80000010003d:	6a 08                	push   0x8
ffff80000010003f:	50                   	push   rax
ffff800000100040:	48 cb                	rex.W retf 

ffff800000100042 <switch_seg>:
ffff800000100042:	4a 00 10             	rex.WX add BYTE PTR [rax],dl
ffff800000100045:	00 00                	add    BYTE PTR [rax],al
ffff800000100047:	80 ff ff             	cmp    bh,0xff

ffff80000010004a <entry64>:
ffff80000010004a:	48 c7 c0 10 00 00 00 	mov    rax,0x10
ffff800000100051:	48 8e d8             	mov    ds,rax
ffff800000100054:	48 8e c0             	mov    es,rax
ffff800000100057:	48 8e e8             	mov    gs,rax
ffff80000010005a:	48 8e d0             	mov    ss,rax
ffff80000010005d:	48 bc 00 7e 00 00 00 	movabs rsp,0xffff800000007e00
ffff800000100064:	80 ff ff 

ffff800000100067 <setup_IDT>:
ffff800000100067:	48 8d 15 a6 00 00 00 	lea    rdx,[rip+0xa6]        # ffff800000100114 <ignore_int>
ffff80000010006e:	48 c7 c0 00 00 08 00 	mov    rax,0x80000
ffff800000100075:	66 89 d0             	mov    ax,dx
ffff800000100078:	48 b9 00 00 00 00 00 	movabs rcx,0x8e0000000000
ffff80000010007f:	8e 00 00 
ffff800000100082:	48 01 c8             	add    rax,rcx
ffff800000100085:	89 d1                	mov    ecx,edx
ffff800000100087:	c1 e9 10             	shr    ecx,0x10
ffff80000010008a:	48 c1 e1 30          	shl    rcx,0x30
ffff80000010008e:	48 01 c8             	add    rax,rcx
ffff800000100091:	48 c1 ea 20          	shr    rdx,0x20
ffff800000100095:	48 8d 3d a6 85 00 00 	lea    rdi,[rip+0x85a6]        # ffff800000108642 <IDT_Table>
ffff80000010009c:	48 c7 c1 00 01 00 00 	mov    rcx,0x100

ffff8000001000a3 <rp_sidt>:
ffff8000001000a3:	48 89 07             	mov    QWORD PTR [rdi],rax
ffff8000001000a6:	48 89 57 08          	mov    QWORD PTR [rdi+0x8],rdx
ffff8000001000aa:	48 83 c7 10          	add    rdi,0x10
ffff8000001000ae:	48 ff c9             	dec    rcx
ffff8000001000b1:	75 f0                	jne    ffff8000001000a3 <rp_sidt>

ffff8000001000b3 <setup_TSS64>:
ffff8000001000b3:	48 8d 15 92 95 00 00 	lea    rdx,[rip+0x9592]        # ffff80000010964c <TSS64_Table>
ffff8000001000ba:	48 31 c0             	xor    rax,rax
ffff8000001000bd:	48 31 c9             	xor    rcx,rcx
ffff8000001000c0:	48 c7 c0 89 00 00 00 	mov    rax,0x89
ffff8000001000c7:	48 c1 e0 28          	shl    rax,0x28
ffff8000001000cb:	89 d1                	mov    ecx,edx
ffff8000001000cd:	c1 e9 18             	shr    ecx,0x18
ffff8000001000d0:	48 c1 e1 38          	shl    rcx,0x38
ffff8000001000d4:	48 01 c8             	add    rax,rcx
ffff8000001000d7:	48 31 c9             	xor    rcx,rcx
ffff8000001000da:	89 d1                	mov    ecx,edx
ffff8000001000dc:	81 e1 ff ff ff 00    	and    ecx,0xffffff
ffff8000001000e2:	48 c1 e1 10          	shl    rcx,0x10
ffff8000001000e6:	48 01 c8             	add    rax,rcx
ffff8000001000e9:	48 83 c0 67          	add    rax,0x67
ffff8000001000ed:	48 8d 3d ac 84 00 00 	lea    rdi,[rip+0x84ac]        # ffff8000001085a0 <GDT_Table>
ffff8000001000f4:	48 89 47 50          	mov    QWORD PTR [rdi+0x50],rax
ffff8000001000f8:	48 c1 ea 20          	shr    rdx,0x20
ffff8000001000fc:	48 89 57 58          	mov    QWORD PTR [rdi+0x58],rdx
ffff800000100100:	48 8b 05 05 00 00 00 	mov    rax,QWORD PTR [rip+0x5]        # ffff80000010010c <go_to_kernel>
ffff800000100107:	6a 08                	push   0x8
ffff800000100109:	50                   	push   rax
ffff80000010010a:	48 cb                	rex.W retf 

ffff80000010010c <go_to_kernel>:
ffff80000010010c:	09 44 10 00          	or     DWORD PTR [rax+rdx*1+0x0],eax
ffff800000100110:	00 80 ff ff      	add    BYTE PTR [rax+0x50fcffff],al

ffff800000100114 <ignore_int>:
ffff800000100114:	fc                   	cld    
ffff800000100115:	50                   	push   rax
ffff800000100116:	53                   	push   rbx
ffff800000100117:	51                   	push   rcx
ffff800000100118:	52                   	push   rdx
ffff800000100119:	55                   	push   rbp
ffff80000010011a:	57                   	push   rdi
ffff80000010011b:	56                   	push   rsi
ffff80000010011c:	41 50                	push   r8
ffff80000010011e:	41 51                	push   r9
ffff800000100120:	41 52                	push   r10
ffff800000100122:	41 53                	push   r11
ffff800000100124:	41 54                	push   r12
ffff800000100126:	41 55                	push   r13
ffff800000100128:	41 56                	push   r14
ffff80000010012a:	41 57                	push   r15
ffff80000010012c:	48 8c c0             	mov    rax,es
ffff80000010012f:	50                   	push   rax
ffff800000100130:	48 8c d8             	mov    rax,ds
ffff800000100133:	50                   	push   rax
ffff800000100134:	48 c7 c0 10 00 00 00 	mov    rax,0x10
ffff80000010013b:	48 8e d8             	mov    ds,rax
ffff80000010013e:	48 8e c0             	mov    es,rax
ffff800000100141:	48 8d 05 45 00 00 00 	lea    rax,[rip+0x45]        # ffff80000010018d <int_msg>
ffff800000100148:	50                   	push   rax
ffff800000100149:	48 89 c2             	mov    rdx,rax
ffff80000010014c:	48 c7 c6 00 00 00 00 	mov    rsi,0x0
ffff800000100153:	48 c7 c7 00 00 ff 00 	mov    rdi,0xff0000
ffff80000010015a:	48 c7 c0 00 00 00 00 	mov    rax,0x0
ffff800000100161:	e8 cb 5a 00 00       	call   ffff800000105c31 <color_printk>
ffff800000100166:	48 83 c4 08          	add    rsp,0x8

ffff80000010016a <Loop>:
ffff80000010016a:	eb fe                	jmp    ffff80000010016a <Loop>
ffff80000010016c:	58                   	pop    rax
ffff80000010016d:	48 8e d8             	mov    ds,rax
ffff800000100170:	58                   	pop    rax
ffff800000100171:	48 8e c0             	mov    es,rax
ffff800000100174:	41 5f                	pop    r15
ffff800000100176:	41 5e                	pop    r14
ffff800000100178:	41 5d                	pop    r13
ffff80000010017a:	41 5c                	pop    r12
ffff80000010017c:	41 5b                	pop    r11
ffff80000010017e:	41 5a                	pop    r10
ffff800000100180:	41 59                	pop    r9
ffff800000100182:	41 58                	pop    r8
ffff800000100184:	5e                   	pop    rsi
ffff800000100185:	5f                   	pop    rdi
ffff800000100186:	5d                   	pop    rbp
ffff800000100187:	5a                   	pop    rdx
ffff800000100188:	59                   	pop    rcx
ffff800000100189:	5b                   	pop    rbx
ffff80000010018a:	58                   	pop    rax
ffff80000010018b:	48 cf                	iretq  

ffff80000010018d <int_msg>:
ffff80000010018d:	55                   	push   rbp
ffff80000010018e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010018f:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
ffff800000100193:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff800000100194:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
ffff800000100197:	74 65                	je     ffff8000001001fe <int_msg+0x71>
ffff800000100199:	72 72                	jb     ffff80000010020d <int_msg+0x80>
ffff80000010019b:	75 70                	jne    ffff80000010020d <int_msg+0x80>
ffff80000010019d:	74 20                	je     ffff8000001001bf <int_msg+0x32>
ffff80000010019f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff8000001001a0:	72 20                	jb     ffff8000001001c2 <int_msg+0x35>
ffff8000001001a2:	66 61                	data16 (bad) 
ffff8000001001a4:	75 6c                	jne    ffff800000100212 <int_msg+0x85>
ffff8000001001a6:	74 20                	je     ffff8000001001c8 <int_msg+0x3b>
ffff8000001001a8:	61                   	(bad)  
ffff8000001001a9:	74 20                	je     ffff8000001001cb <int_msg+0x3e>
ffff8000001001ab:	52                   	push   rdx
ffff8000001001ac:	49 50                	rex.WB push r8
ffff8000001001ae:	0a 00                	or     al,BYTE PTR [rax]
	...

ffff800000101000 <__PML4E>:
ffff800000101000:	07                   	(bad)  
ffff800000101001:	20 10                	and    BYTE PTR [rax],dl
	...
ffff8000001017ff:	00 07                	add    BYTE PTR [rdi],al
ffff800000101801:	20 10                	and    BYTE PTR [rax],dl
	...

ffff800000102000 <__PDPTE>:
ffff800000102000:	07                   	(bad)  
ffff800000102001:	30 10                	xor    BYTE PTR [rax],dl
	...

ffff800000103000 <__PDE>:
ffff800000103000:	87 00                	xchg   DWORD PTR [rax],eax
ffff800000103002:	00 00                	add    BYTE PTR [rax],al
ffff800000103004:	00 00                	add    BYTE PTR [rax],al
ffff800000103006:	00 00                	add    BYTE PTR [rax],al
ffff800000103008:	87 00                	xchg   DWORD PTR [rax],eax
ffff80000010300a:	20 00                	and    BYTE PTR [rax],al
ffff80000010300c:	00 00                	add    BYTE PTR [rax],al
ffff80000010300e:	00 00                	add    BYTE PTR [rax],al
ffff800000103010:	87 00                	xchg   DWORD PTR [rax],eax
ffff800000103012:	40 00 00             	add    BYTE PTR [rax],al
ffff800000103015:	00 00                	add    BYTE PTR [rax],al
ffff800000103017:	00 87 00 60 00 00    	add    BYTE PTR [rdi+0x6000],al
ffff80000010301d:	00 00                	add    BYTE PTR [rax],al
ffff80000010301f:	00 87 00 80 00 00    	add    BYTE PTR [rdi+0x8000],al
ffff800000103025:	00 00                	add    BYTE PTR [rax],al
ffff800000103027:	00 87 00 a0 00 00    	add    BYTE PTR [rdi+0xa000],al
ffff80000010302d:	00 00                	add    BYTE PTR [rax],al
ffff80000010302f:	00 87 00 c0 00 00    	add    BYTE PTR [rdi+0xc000],al
ffff800000103035:	00 00                	add    BYTE PTR [rax],al
ffff800000103037:	00 87 00 e0 00 00    	add    BYTE PTR [rdi+0xe000],al
ffff80000010303d:	00 00                	add    BYTE PTR [rax],al
ffff80000010303f:	00 87 00 00 01 00    	add    BYTE PTR [rdi+0x10000],al
ffff800000103045:	00 00                	add    BYTE PTR [rax],al
ffff800000103047:	00 87 00 20 01 00    	add    BYTE PTR [rdi+0x12000],al
ffff80000010304d:	00 00                	add    BYTE PTR [rax],al
ffff80000010304f:	00 87 00 40 01 00    	add    BYTE PTR [rdi+0x14000],al
ffff800000103055:	00 00                	add    BYTE PTR [rax],al
ffff800000103057:	00 87 00 60 01 00    	add    BYTE PTR [rdi+0x16000],al
ffff80000010305d:	00 00                	add    BYTE PTR [rax],al
ffff80000010305f:	00 87 00 80 01 00    	add    BYTE PTR [rdi+0x18000],al
	...

ffff800000104000 <set_intr_gate>:
ffff800000104000:	f3 0f 1e fa          	endbr64 
ffff800000104004:	55                   	push   rbp
ffff800000104005:	48 89 e5             	mov    rbp,rsp
ffff800000104008:	f3 0f 1e fa          	endbr64 
ffff80000010400c:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104008 <set_intr_gate+0x8>
ffff800000104013:	49 bb 68 87 00 00 00 	movabs r11,0x8768
ffff80000010401a:	00 00 00 
ffff80000010401d:	4c 01 d8             	add    rax,r11
ffff800000104020:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
ffff800000104023:	89 f1                	mov    ecx,esi
ffff800000104025:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff800000104029:	89 ca                	mov    edx,ecx
ffff80000010402b:	88 55 e8             	mov    BYTE PTR [rbp-0x18],dl
ffff80000010402e:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff800000104031:	48 89 d1             	mov    rcx,rdx
ffff800000104034:	48 c1 e1 04          	shl    rcx,0x4
ffff800000104038:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff80000010403f:	ff ff ff 
ffff800000104042:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff800000104046:	48 8d 34 11          	lea    rsi,[rcx+rdx*1]
ffff80000010404a:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff80000010404d:	48 c1 e2 04          	shl    rdx,0x4
ffff800000104051:	48 8d 4a 08          	lea    rcx,[rdx+0x8]
ffff800000104055:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff80000010405c:	ff ff ff 
ffff80000010405f:	48 8b 04 10          	mov    rax,QWORD PTR [rax+rdx*1]
ffff800000104063:	48 8d 3c 01          	lea    rdi,[rcx+rax*1]
ffff800000104067:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
ffff80000010406b:	41 b8 00 00 08 00    	mov    r8d,0x80000
ffff800000104071:	0f b6 4d e8          	movzx  ecx,BYTE PTR [rbp-0x18]
ffff800000104075:	48 89 c2             	mov    rdx,rax
ffff800000104078:	44 89 c0             	mov    eax,r8d
ffff80000010407b:	66 89 d0             	mov    ax,dx
ffff80000010407e:	48 83 e1 07          	and    rcx,0x7
ffff800000104082:	48 81 c1 00 8e 00 00 	add    rcx,0x8e00
ffff800000104089:	48 c1 e1 20          	shl    rcx,0x20
ffff80000010408d:	48 01 c8             	add    rax,rcx
ffff800000104090:	48 31 c9             	xor    rcx,rcx
ffff800000104093:	89 d1                	mov    ecx,edx
ffff800000104095:	48 c1 e9 10          	shr    rcx,0x10
ffff800000104099:	48 c1 e1 30          	shl    rcx,0x30
ffff80000010409d:	48 01 c8             	add    rax,rcx
ffff8000001040a0:	48 89 06             	mov    QWORD PTR [rsi],rax
ffff8000001040a3:	48 c1 ea 20          	shr    rdx,0x20
ffff8000001040a7:	48 89 17             	mov    QWORD PTR [rdi],rdx
ffff8000001040aa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
ffff8000001040ae:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff8000001040b2:	90                   	nop
ffff8000001040b3:	5d                   	pop    rbp
ffff8000001040b4:	c3                   	ret    

ffff8000001040b5 <set_trap_gate>:
ffff8000001040b5:	f3 0f 1e fa          	endbr64 
ffff8000001040b9:	55                   	push   rbp
ffff8000001040ba:	48 89 e5             	mov    rbp,rsp
ffff8000001040bd:	f3 0f 1e fa          	endbr64 
ffff8000001040c1:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001040bd <set_trap_gate+0x8>
ffff8000001040c8:	49 bb b3 86 00 00 00 	movabs r11,0x86b3
ffff8000001040cf:	00 00 00 
ffff8000001040d2:	4c 01 d8             	add    rax,r11
ffff8000001040d5:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
ffff8000001040d8:	89 f1                	mov    ecx,esi
ffff8000001040da:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff8000001040de:	89 ca                	mov    edx,ecx
ffff8000001040e0:	88 55 e8             	mov    BYTE PTR [rbp-0x18],dl
ffff8000001040e3:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff8000001040e6:	48 89 d1             	mov    rcx,rdx
ffff8000001040e9:	48 c1 e1 04          	shl    rcx,0x4
ffff8000001040ed:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff8000001040f4:	ff ff ff 
ffff8000001040f7:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff8000001040fb:	48 8d 34 11          	lea    rsi,[rcx+rdx*1]
ffff8000001040ff:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff800000104102:	48 c1 e2 04          	shl    rdx,0x4
ffff800000104106:	48 8d 4a 08          	lea    rcx,[rdx+0x8]
ffff80000010410a:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff800000104111:	ff ff ff 
ffff800000104114:	48 8b 04 10          	mov    rax,QWORD PTR [rax+rdx*1]
ffff800000104118:	48 8d 3c 01          	lea    rdi,[rcx+rax*1]
ffff80000010411c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
ffff800000104120:	41 b8 00 00 08 00    	mov    r8d,0x80000
ffff800000104126:	0f b6 4d e8          	movzx  ecx,BYTE PTR [rbp-0x18]
ffff80000010412a:	48 89 c2             	mov    rdx,rax
ffff80000010412d:	44 89 c0             	mov    eax,r8d
ffff800000104130:	66 89 d0             	mov    ax,dx
ffff800000104133:	48 83 e1 07          	and    rcx,0x7
ffff800000104137:	48 81 c1 00 8f 00 00 	add    rcx,0x8f00
ffff80000010413e:	48 c1 e1 20          	shl    rcx,0x20
ffff800000104142:	48 01 c8             	add    rax,rcx
ffff800000104145:	48 31 c9             	xor    rcx,rcx
ffff800000104148:	89 d1                	mov    ecx,edx
ffff80000010414a:	48 c1 e9 10          	shr    rcx,0x10
ffff80000010414e:	48 c1 e1 30          	shl    rcx,0x30
ffff800000104152:	48 01 c8             	add    rax,rcx
ffff800000104155:	48 89 06             	mov    QWORD PTR [rsi],rax
ffff800000104158:	48 c1 ea 20          	shr    rdx,0x20
ffff80000010415c:	48 89 17             	mov    QWORD PTR [rdi],rdx
ffff80000010415f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
ffff800000104163:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff800000104167:	90                   	nop
ffff800000104168:	5d                   	pop    rbp
ffff800000104169:	c3                   	ret    

ffff80000010416a <set_system_gate>:
ffff80000010416a:	f3 0f 1e fa          	endbr64 
ffff80000010416e:	55                   	push   rbp
ffff80000010416f:	48 89 e5             	mov    rbp,rsp
ffff800000104172:	f3 0f 1e fa          	endbr64 
ffff800000104176:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104172 <set_system_gate+0x8>
ffff80000010417d:	49 bb fe 85 00 00 00 	movabs r11,0x85fe
ffff800000104184:	00 00 00 
ffff800000104187:	4c 01 d8             	add    rax,r11
ffff80000010418a:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
ffff80000010418d:	89 f1                	mov    ecx,esi
ffff80000010418f:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff800000104193:	89 ca                	mov    edx,ecx
ffff800000104195:	88 55 e8             	mov    BYTE PTR [rbp-0x18],dl
ffff800000104198:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff80000010419b:	48 89 d1             	mov    rcx,rdx
ffff80000010419e:	48 c1 e1 04          	shl    rcx,0x4
ffff8000001041a2:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff8000001041a9:	ff ff ff 
ffff8000001041ac:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff8000001041b0:	48 8d 34 11          	lea    rsi,[rcx+rdx*1]
ffff8000001041b4:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff8000001041b7:	48 c1 e2 04          	shl    rdx,0x4
ffff8000001041bb:	48 8d 4a 08          	lea    rcx,[rdx+0x8]
ffff8000001041bf:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff8000001041c6:	ff ff ff 
ffff8000001041c9:	48 8b 04 10          	mov    rax,QWORD PTR [rax+rdx*1]
ffff8000001041cd:	48 8d 3c 01          	lea    rdi,[rcx+rax*1]
ffff8000001041d1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
ffff8000001041d5:	41 b8 00 00 08 00    	mov    r8d,0x80000
ffff8000001041db:	0f b6 4d e8          	movzx  ecx,BYTE PTR [rbp-0x18]
ffff8000001041df:	48 89 c2             	mov    rdx,rax
ffff8000001041e2:	44 89 c0             	mov    eax,r8d
ffff8000001041e5:	66 89 d0             	mov    ax,dx
ffff8000001041e8:	48 83 e1 07          	and    rcx,0x7
ffff8000001041ec:	48 81 c1 00 ef 00 00 	add    rcx,0xef00
ffff8000001041f3:	48 c1 e1 20          	shl    rcx,0x20
ffff8000001041f7:	48 01 c8             	add    rax,rcx
ffff8000001041fa:	48 31 c9             	xor    rcx,rcx
ffff8000001041fd:	89 d1                	mov    ecx,edx
ffff8000001041ff:	48 c1 e9 10          	shr    rcx,0x10
ffff800000104203:	48 c1 e1 30          	shl    rcx,0x30
ffff800000104207:	48 01 c8             	add    rax,rcx
ffff80000010420a:	48 89 06             	mov    QWORD PTR [rsi],rax
ffff80000010420d:	48 c1 ea 20          	shr    rdx,0x20
ffff800000104211:	48 89 17             	mov    QWORD PTR [rdi],rdx
ffff800000104214:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
ffff800000104218:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff80000010421c:	90                   	nop
ffff80000010421d:	5d                   	pop    rbp
ffff80000010421e:	c3                   	ret    

ffff80000010421f <set_system_intr_gate>:
ffff80000010421f:	f3 0f 1e fa          	endbr64 
ffff800000104223:	55                   	push   rbp
ffff800000104224:	48 89 e5             	mov    rbp,rsp
ffff800000104227:	f3 0f 1e fa          	endbr64 
ffff80000010422b:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104227 <set_system_intr_gate+0x8>
ffff800000104232:	49 bb 49 85 00 00 00 	movabs r11,0x8549
ffff800000104239:	00 00 00 
ffff80000010423c:	4c 01 d8             	add    rax,r11
ffff80000010423f:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
ffff800000104242:	89 f1                	mov    ecx,esi
ffff800000104244:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff800000104248:	89 ca                	mov    edx,ecx
ffff80000010424a:	88 55 e8             	mov    BYTE PTR [rbp-0x18],dl
ffff80000010424d:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff800000104250:	48 89 d1             	mov    rcx,rdx
ffff800000104253:	48 c1 e1 04          	shl    rcx,0x4
ffff800000104257:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff80000010425e:	ff ff ff 
ffff800000104261:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff800000104265:	48 8d 34 11          	lea    rsi,[rcx+rdx*1]
ffff800000104269:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff80000010426c:	48 c1 e2 04          	shl    rdx,0x4
ffff800000104270:	48 8d 4a 08          	lea    rcx,[rdx+0x8]
ffff800000104274:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff80000010427b:	ff ff ff 
ffff80000010427e:	48 8b 04 10          	mov    rax,QWORD PTR [rax+rdx*1]
ffff800000104282:	48 8d 3c 01          	lea    rdi,[rcx+rax*1]
ffff800000104286:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
ffff80000010428a:	41 b8 00 00 08 00    	mov    r8d,0x80000
ffff800000104290:	0f b6 4d e8          	movzx  ecx,BYTE PTR [rbp-0x18]
ffff800000104294:	48 89 c2             	mov    rdx,rax
ffff800000104297:	44 89 c0             	mov    eax,r8d
ffff80000010429a:	66 89 d0             	mov    ax,dx
ffff80000010429d:	48 83 e1 07          	and    rcx,0x7
ffff8000001042a1:	48 81 c1 00 ee 00 00 	add    rcx,0xee00
ffff8000001042a8:	48 c1 e1 20          	shl    rcx,0x20
ffff8000001042ac:	48 01 c8             	add    rax,rcx
ffff8000001042af:	48 31 c9             	xor    rcx,rcx
ffff8000001042b2:	89 d1                	mov    ecx,edx
ffff8000001042b4:	48 c1 e9 10          	shr    rcx,0x10
ffff8000001042b8:	48 c1 e1 30          	shl    rcx,0x30
ffff8000001042bc:	48 01 c8             	add    rax,rcx
ffff8000001042bf:	48 89 06             	mov    QWORD PTR [rsi],rax
ffff8000001042c2:	48 c1 ea 20          	shr    rdx,0x20
ffff8000001042c6:	48 89 17             	mov    QWORD PTR [rdi],rdx
ffff8000001042c9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
ffff8000001042cd:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff8000001042d1:	90                   	nop
ffff8000001042d2:	5d                   	pop    rbp
ffff8000001042d3:	c3                   	ret    

ffff8000001042d4 <set_tss64>:
ffff8000001042d4:	f3 0f 1e fa          	endbr64 
ffff8000001042d8:	55                   	push   rbp
ffff8000001042d9:	48 89 e5             	mov    rbp,rsp
ffff8000001042dc:	f3 0f 1e fa          	endbr64 
ffff8000001042e0:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001042dc <set_tss64+0x8>
ffff8000001042e7:	49 bb 94 84 00 00 00 	movabs r11,0x8494
ffff8000001042ee:	00 00 00 
ffff8000001042f1:	4c 01 d8             	add    rax,r11
ffff8000001042f4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff8000001042f8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff8000001042fc:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
ffff800000104300:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
ffff800000104304:	4c 89 45 d8          	mov    QWORD PTR [rbp-0x28],r8
ffff800000104308:	4c 89 4d d0          	mov    QWORD PTR [rbp-0x30],r9
ffff80000010430c:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff800000104313:	ff ff ff 
ffff800000104316:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff80000010431a:	48 8d 52 04          	lea    rdx,[rdx+0x4]
ffff80000010431e:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
ffff800000104322:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff800000104325:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff80000010432c:	ff ff ff 
ffff80000010432f:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff800000104333:	48 8d 52 0c          	lea    rdx,[rdx+0xc]
ffff800000104337:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
ffff80000010433b:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff80000010433e:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff800000104345:	ff ff ff 
ffff800000104348:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff80000010434c:	48 8d 52 14          	lea    rdx,[rdx+0x14]
ffff800000104350:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
ffff800000104354:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff800000104357:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff80000010435e:	ff ff ff 
ffff800000104361:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff800000104365:	48 8d 52 24          	lea    rdx,[rdx+0x24]
ffff800000104369:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
ffff80000010436d:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff800000104370:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff800000104377:	ff ff ff 
ffff80000010437a:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff80000010437e:	48 8d 52 2c          	lea    rdx,[rdx+0x2c]
ffff800000104382:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
ffff800000104386:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff800000104389:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff800000104390:	ff ff ff 
ffff800000104393:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff800000104397:	48 8d 52 34          	lea    rdx,[rdx+0x34]
ffff80000010439b:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
ffff80000010439f:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff8000001043a2:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff8000001043a9:	ff ff ff 
ffff8000001043ac:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff8000001043b0:	48 8d 52 3c          	lea    rdx,[rdx+0x3c]
ffff8000001043b4:	48 8b 4d 10          	mov    rcx,QWORD PTR [rbp+0x10]
ffff8000001043b8:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff8000001043bb:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff8000001043c2:	ff ff ff 
ffff8000001043c5:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff8000001043c9:	48 8d 52 44          	lea    rdx,[rdx+0x44]
ffff8000001043cd:	48 8b 4d 18          	mov    rcx,QWORD PTR [rbp+0x18]
ffff8000001043d1:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff8000001043d4:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff8000001043db:	ff ff ff 
ffff8000001043de:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff8000001043e2:	48 8d 52 4c          	lea    rdx,[rdx+0x4c]
ffff8000001043e6:	48 8b 4d 20          	mov    rcx,QWORD PTR [rbp+0x20]
ffff8000001043ea:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff8000001043ed:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff8000001043f4:	ff ff ff 
ffff8000001043f7:	48 8b 04 10          	mov    rax,QWORD PTR [rax+rdx*1]
ffff8000001043fb:	48 8d 40 54          	lea    rax,[rax+0x54]
ffff8000001043ff:	48 8b 55 28          	mov    rdx,QWORD PTR [rbp+0x28]
ffff800000104403:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff800000104406:	90                   	nop
ffff800000104407:	5d                   	pop    rbp
ffff800000104408:	c3                   	ret    

ffff800000104409 <Start_Kernel>:
ffff800000104409:	f3 0f 1e fa          	endbr64 
ffff80000010440d:	55                   	push   rbp
ffff80000010440e:	48 89 e5             	mov    rbp,rsp
ffff800000104411:	41 57                	push   r15
ffff800000104413:	53                   	push   rbx
ffff800000104414:	48 83 ec 10          	sub    rsp,0x10
ffff800000104418:	f3 0f 1e fa          	endbr64 
ffff80000010441c:	48 8d 1d f5 ff ff ff 	lea    rbx,[rip+0xfffffffffffffff5]        # ffff800000104418 <Start_Kernel+0xf>
ffff800000104423:	49 bb 58 83 00 00 00 	movabs r11,0x8358
ffff80000010442a:	00 00 00 
ffff80000010442d:	4c 01 db             	add    rbx,r11
ffff800000104430:	48 b8 00 00 00 03 00 	movabs rax,0xffff800003000000
ffff800000104437:	80 ff ff 
ffff80000010443a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff80000010443e:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
ffff800000104445:	eb 31                	jmp    ffff800000104478 <Start_Kernel+0x6f>
ffff800000104447:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff80000010444b:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffff80000010444e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000104452:	48 83 c0 01          	add    rax,0x1
ffff800000104456:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffff800000104459:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff80000010445d:	48 83 c0 02          	add    rax,0x2
ffff800000104461:	c6 00 ff             	mov    BYTE PTR [rax],0xff
ffff800000104464:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000104468:	48 83 c0 03          	add    rax,0x3
ffff80000010446c:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffff80000010446f:	48 83 45 e8 04       	add    QWORD PTR [rbp-0x18],0x4
ffff800000104474:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
ffff800000104478:	81 7d e4 ff 4f 00 00 	cmp    DWORD PTR [rbp-0x1c],0x4fff
ffff80000010447f:	7e c6                	jle    ffff800000104447 <Start_Kernel+0x3e>
ffff800000104481:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
ffff800000104488:	eb 31                	jmp    ffff8000001044bb <Start_Kernel+0xb2>
ffff80000010448a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff80000010448e:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffff800000104491:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000104495:	48 83 c0 01          	add    rax,0x1
ffff800000104499:	c6 00 ff             	mov    BYTE PTR [rax],0xff
ffff80000010449c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff8000001044a0:	48 83 c0 02          	add    rax,0x2
ffff8000001044a4:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffff8000001044a7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff8000001044ab:	48 83 c0 03          	add    rax,0x3
ffff8000001044af:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffff8000001044b2:	48 83 45 e8 04       	add    QWORD PTR [rbp-0x18],0x4
ffff8000001044b7:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
ffff8000001044bb:	81 7d e4 ff 4f 00 00 	cmp    DWORD PTR [rbp-0x1c],0x4fff
ffff8000001044c2:	7e c6                	jle    ffff80000010448a <Start_Kernel+0x81>
ffff8000001044c4:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
ffff8000001044cb:	eb 31                	jmp    ffff8000001044fe <Start_Kernel+0xf5>
ffff8000001044cd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff8000001044d1:	c6 00 ff             	mov    BYTE PTR [rax],0xff
ffff8000001044d4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff8000001044d8:	48 83 c0 01          	add    rax,0x1
ffff8000001044dc:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffff8000001044df:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff8000001044e3:	48 83 c0 02          	add    rax,0x2
ffff8000001044e7:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffff8000001044ea:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff8000001044ee:	48 83 c0 03          	add    rax,0x3
ffff8000001044f2:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffff8000001044f5:	48 83 45 e8 04       	add    QWORD PTR [rbp-0x18],0x4
ffff8000001044fa:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
ffff8000001044fe:	81 7d e4 ff 4f 00 00 	cmp    DWORD PTR [rbp-0x1c],0x4fff
ffff800000104505:	7e c6                	jle    ffff8000001044cd <Start_Kernel+0xc4>
ffff800000104507:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
ffff80000010450e:	eb 31                	jmp    ffff800000104541 <Start_Kernel+0x138>
ffff800000104510:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000104514:	c6 00 ff             	mov    BYTE PTR [rax],0xff
ffff800000104517:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff80000010451b:	48 83 c0 01          	add    rax,0x1
ffff80000010451f:	c6 00 ff             	mov    BYTE PTR [rax],0xff
ffff800000104522:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000104526:	48 83 c0 02          	add    rax,0x2
ffff80000010452a:	c6 00 ff             	mov    BYTE PTR [rax],0xff
ffff80000010452d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000104531:	48 83 c0 03          	add    rax,0x3
ffff800000104535:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffff800000104538:	48 83 45 e8 04       	add    QWORD PTR [rbp-0x18],0x4
ffff80000010453d:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
ffff800000104541:	81 7d e4 ff 4f 00 00 	cmp    DWORD PTR [rbp-0x1c],0x4fff
ffff800000104548:	7e c6                	jle    ffff800000104510 <Start_Kernel+0x107>
ffff80000010454a:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000104551:	00 00 00 
ffff800000104554:	c7 04 03 00 04 00 00 	mov    DWORD PTR [rbx+rax*1],0x400
ffff80000010455b:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000104562:	00 00 00 
ffff800000104565:	c7 44 03 04 00 03 00 	mov    DWORD PTR [rbx+rax*1+0x4],0x300
ffff80000010456c:	00 
ffff80000010456d:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000104574:	00 00 00 
ffff800000104577:	c7 44 03 08 00 00 00 	mov    DWORD PTR [rbx+rax*1+0x8],0x0
ffff80000010457e:	00 
ffff80000010457f:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000104586:	00 00 00 
ffff800000104589:	c7 44 03 0c 00 00 00 	mov    DWORD PTR [rbx+rax*1+0xc],0x0
ffff800000104590:	00 
ffff800000104591:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000104598:	00 00 00 
ffff80000010459b:	c7 44 03 10 08 00 00 	mov    DWORD PTR [rbx+rax*1+0x10],0x8
ffff8000001045a2:	00 
ffff8000001045a3:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff8000001045aa:	00 00 00 
ffff8000001045ad:	c7 44 03 14 10 00 00 	mov    DWORD PTR [rbx+rax*1+0x14],0x10
ffff8000001045b4:	00 
ffff8000001045b5:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff8000001045bc:	00 00 00 
ffff8000001045bf:	48 b9 00 00 00 03 00 	movabs rcx,0xffff800003000000
ffff8000001045c6:	80 ff ff 
ffff8000001045c9:	48 89 4c 03 18       	mov    QWORD PTR [rbx+rax*1+0x18],rcx
ffff8000001045ce:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff8000001045d5:	00 00 00 
ffff8000001045d8:	8b 14 03             	mov    edx,DWORD PTR [rbx+rax*1]
ffff8000001045db:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff8000001045e2:	00 00 00 
ffff8000001045e5:	8b 44 03 04          	mov    eax,DWORD PTR [rbx+rax*1+0x4]
ffff8000001045e9:	0f af c2             	imul   eax,edx
ffff8000001045ec:	c1 e0 02             	shl    eax,0x2
ffff8000001045ef:	48 98                	cdqe   
ffff8000001045f1:	48 05 ff 0f 00 00    	add    rax,0xfff
ffff8000001045f7:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
ffff8000001045fd:	48 89 c2             	mov    rdx,rax
ffff800000104600:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000104607:	00 00 00 
ffff80000010460a:	48 89 54 03 20       	mov    QWORD PTR [rbx+rax*1+0x20],rdx
ffff80000010460f:	48 b8 18 00 00 00 00 	movabs rax,0x18
ffff800000104616:	00 00 00 
ffff800000104619:	48 8d 0c 03          	lea    rcx,[rbx+rax*1]
ffff80000010461d:	48 b8 22 00 00 00 00 	movabs rax,0x22
ffff800000104624:	00 00 00 
ffff800000104627:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff80000010462b:	be 00 00 00 00       	mov    esi,0x0
ffff800000104630:	bf ff ff ff 00       	mov    edi,0xffffff
ffff800000104635:	49 89 df             	mov    r15,rbx
ffff800000104638:	b8 00 00 00 00       	mov    eax,0x0
ffff80000010463d:	49 b8 c1 94 ff ff ff 	movabs r8,0xffffffffffff94c1
ffff800000104644:	ff ff ff 
ffff800000104647:	49 01 d8             	add    r8,rbx
ffff80000010464a:	41 ff d0             	call   r8
ffff80000010464d:	b8 50 00 00 00       	mov    eax,0x50
ffff800000104652:	0f 00 d8             	ltr    ax
ffff800000104655:	68 00 7c 00 00       	push   0x7c00
ffff80000010465a:	c7 44 24 04 00 80 ff 	mov    DWORD PTR [rsp+0x4],0xffff8000
ffff800000104661:	ff 
ffff800000104662:	68 00 7c 00 00       	push   0x7c00
ffff800000104667:	c7 44 24 04 00 80 ff 	mov    DWORD PTR [rsp+0x4],0xffff8000
ffff80000010466e:	ff 
ffff80000010466f:	68 00 7c 00 00       	push   0x7c00
ffff800000104674:	c7 44 24 04 00 80 ff 	mov    DWORD PTR [rsp+0x4],0xffff8000
ffff80000010467b:	ff 
ffff80000010467c:	68 00 7c 00 00       	push   0x7c00
ffff800000104681:	c7 44 24 04 00 80 ff 	mov    DWORD PTR [rsp+0x4],0xffff8000
ffff800000104688:	ff 
ffff800000104689:	49 b9 00 7c 00 00 00 	movabs r9,0xffff800000007c00
ffff800000104690:	80 ff ff 
ffff800000104693:	49 b8 00 7c 00 00 00 	movabs r8,0xffff800000007c00
ffff80000010469a:	80 ff ff 
ffff80000010469d:	48 b9 00 7c 00 00 00 	movabs rcx,0xffff800000007c00
ffff8000001046a4:	80 ff ff 
ffff8000001046a7:	48 ba 00 7c 00 00 00 	movabs rdx,0xffff800000007c00
ffff8000001046ae:	80 ff ff 
ffff8000001046b1:	48 be 00 7c 00 00 00 	movabs rsi,0xffff800000007c00
ffff8000001046b8:	80 ff ff 
ffff8000001046bb:	48 bf 00 7c 00 00 00 	movabs rdi,0xffff800000007c00
ffff8000001046c2:	80 ff ff 
ffff8000001046c5:	48 b8 64 7b ff ff ff 	movabs rax,0xffffffffffff7b64
ffff8000001046cc:	ff ff ff 
ffff8000001046cf:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001046d3:	ff d0                	call   rax
ffff8000001046d5:	48 83 c4 20          	add    rsp,0x20
ffff8000001046d9:	49 89 df             	mov    r15,rbx
ffff8000001046dc:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001046e1:	48 ba a7 b8 ff ff ff 	movabs rdx,0xffffffffffffb8a7
ffff8000001046e8:	ff ff ff 
ffff8000001046eb:	48 01 da             	add    rdx,rbx
ffff8000001046ee:	ff d2                	call   rdx
ffff8000001046f0:	b8 01 00 00 00       	mov    eax,0x1
ffff8000001046f5:	be 00 00 00 00       	mov    esi,0x0
ffff8000001046fa:	99                   	cdq    
ffff8000001046fb:	f7 fe                	idiv   esi
ffff8000001046fd:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
ffff800000104700:	eb fe                	jmp    ffff800000104700 <Start_Kernel+0x2f7>

ffff800000104702 <list_init>:
ffff800000104702:	f3 0f 1e fa          	endbr64 
ffff800000104706:	55                   	push   rbp
ffff800000104707:	48 89 e5             	mov    rbp,rsp
ffff80000010470a:	f3 0f 1e fa          	endbr64 
ffff80000010470e:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff80000010470a <list_init+0x8>
ffff800000104715:	49 bb 66 80 00 00 00 	movabs r11,0x8066
ffff80000010471c:	00 00 00 
ffff80000010471f:	4c 01 d8             	add    rax,r11
ffff800000104722:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000104726:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff80000010472a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff80000010472e:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff800000104731:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104735:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff800000104739:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff80000010473d:	90                   	nop
ffff80000010473e:	5d                   	pop    rbp
ffff80000010473f:	c3                   	ret    

ffff800000104740 <list_add_to_behind>:
ffff800000104740:	f3 0f 1e fa          	endbr64 
ffff800000104744:	55                   	push   rbp
ffff800000104745:	48 89 e5             	mov    rbp,rsp
ffff800000104748:	f3 0f 1e fa          	endbr64 
ffff80000010474c:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104748 <list_add_to_behind+0x8>
ffff800000104753:	49 bb 28 80 00 00 00 	movabs r11,0x8028
ffff80000010475a:	00 00 00 
ffff80000010475d:	4c 01 d8             	add    rax,r11
ffff800000104760:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000104764:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000104768:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff80000010476c:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
ffff800000104770:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000104774:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff800000104778:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff80000010477c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff800000104780:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff800000104783:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000104787:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff80000010478b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff80000010478f:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff800000104792:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104796:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff80000010479a:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff80000010479e:	90                   	nop
ffff80000010479f:	5d                   	pop    rbp
ffff8000001047a0:	c3                   	ret    

ffff8000001047a1 <list_add_to_before>:
ffff8000001047a1:	f3 0f 1e fa          	endbr64 
ffff8000001047a5:	55                   	push   rbp
ffff8000001047a6:	48 89 e5             	mov    rbp,rsp
ffff8000001047a9:	f3 0f 1e fa          	endbr64 
ffff8000001047ad:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001047a9 <list_add_to_before+0x8>
ffff8000001047b4:	49 bb c7 7f 00 00 00 	movabs r11,0x7fc7
ffff8000001047bb:	00 00 00 
ffff8000001047be:	4c 01 d8             	add    rax,r11
ffff8000001047c1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff8000001047c5:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff8000001047c9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff8000001047cd:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff8000001047d1:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff8000001047d5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001047d9:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff8000001047dc:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff8000001047e0:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff8000001047e4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001047e8:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffff8000001047eb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff8000001047ef:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff8000001047f2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001047f6:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff8000001047fa:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff8000001047fd:	90                   	nop
ffff8000001047fe:	5d                   	pop    rbp
ffff8000001047ff:	c3                   	ret    

ffff800000104800 <list_del>:
ffff800000104800:	f3 0f 1e fa          	endbr64 
ffff800000104804:	55                   	push   rbp
ffff800000104805:	48 89 e5             	mov    rbp,rsp
ffff800000104808:	f3 0f 1e fa          	endbr64 
ffff80000010480c:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104808 <list_del+0x8>
ffff800000104813:	49 bb 68 7f 00 00 00 	movabs r11,0x7f68
ffff80000010481a:	00 00 00 
ffff80000010481d:	4c 01 d8             	add    rax,r11
ffff800000104820:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000104824:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104828:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff80000010482c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff800000104830:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
ffff800000104833:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff800000104836:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff80000010483a:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff80000010483d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff800000104841:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
ffff800000104845:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff800000104849:	90                   	nop
ffff80000010484a:	5d                   	pop    rbp
ffff80000010484b:	c3                   	ret    

ffff80000010484c <list_is_empty>:
ffff80000010484c:	f3 0f 1e fa          	endbr64 
ffff800000104850:	55                   	push   rbp
ffff800000104851:	48 89 e5             	mov    rbp,rsp
ffff800000104854:	f3 0f 1e fa          	endbr64 
ffff800000104858:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104854 <list_is_empty+0x8>
ffff80000010485f:	49 bb 1c 7f 00 00 00 	movabs r11,0x7f1c
ffff800000104866:	00 00 00 
ffff800000104869:	4c 01 d8             	add    rax,r11
ffff80000010486c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000104870:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104874:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000104878:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
ffff80000010487c:	75 14                	jne    ffff800000104892 <list_is_empty+0x46>
ffff80000010487e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104882:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000104885:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
ffff800000104889:	75 07                	jne    ffff800000104892 <list_is_empty+0x46>
ffff80000010488b:	b8 01 00 00 00       	mov    eax,0x1
ffff800000104890:	eb 05                	jmp    ffff800000104897 <list_is_empty+0x4b>
ffff800000104892:	b8 00 00 00 00       	mov    eax,0x0
ffff800000104897:	5d                   	pop    rbp
ffff800000104898:	c3                   	ret    

ffff800000104899 <list_prev>:
ffff800000104899:	f3 0f 1e fa          	endbr64 
ffff80000010489d:	55                   	push   rbp
ffff80000010489e:	48 89 e5             	mov    rbp,rsp
ffff8000001048a1:	f3 0f 1e fa          	endbr64 
ffff8000001048a5:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001048a1 <list_prev+0x8>
ffff8000001048ac:	49 bb cf 7e 00 00 00 	movabs r11,0x7ecf
ffff8000001048b3:	00 00 00 
ffff8000001048b6:	4c 01 d8             	add    rax,r11
ffff8000001048b9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff8000001048bd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001048c1:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff8000001048c4:	48 85 c0             	test   rax,rax
ffff8000001048c7:	74 09                	je     ffff8000001048d2 <list_prev+0x39>
ffff8000001048c9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001048cd:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff8000001048d0:	eb 05                	jmp    ffff8000001048d7 <list_prev+0x3e>
ffff8000001048d2:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001048d7:	5d                   	pop    rbp
ffff8000001048d8:	c3                   	ret    

ffff8000001048d9 <list_next>:
ffff8000001048d9:	f3 0f 1e fa          	endbr64 
ffff8000001048dd:	55                   	push   rbp
ffff8000001048de:	48 89 e5             	mov    rbp,rsp
ffff8000001048e1:	f3 0f 1e fa          	endbr64 
ffff8000001048e5:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001048e1 <list_next+0x8>
ffff8000001048ec:	49 bb 8f 7e 00 00 00 	movabs r11,0x7e8f
ffff8000001048f3:	00 00 00 
ffff8000001048f6:	4c 01 d8             	add    rax,r11
ffff8000001048f9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff8000001048fd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104901:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000104905:	48 85 c0             	test   rax,rax
ffff800000104908:	74 0a                	je     ffff800000104914 <list_next+0x3b>
ffff80000010490a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff80000010490e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000104912:	eb 05                	jmp    ffff800000104919 <list_next+0x40>
ffff800000104914:	b8 00 00 00 00       	mov    eax,0x0
ffff800000104919:	5d                   	pop    rbp
ffff80000010491a:	c3                   	ret    

ffff80000010491b <memcpy>:
ffff80000010491b:	f3 0f 1e fa          	endbr64 
ffff80000010491f:	55                   	push   rbp
ffff800000104920:	48 89 e5             	mov    rbp,rsp
ffff800000104923:	f3 0f 1e fa          	endbr64 
ffff800000104927:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104923 <memcpy+0x8>
ffff80000010492e:	49 bb 4d 7e 00 00 00 	movabs r11,0x7e4d
ffff800000104935:	00 00 00 
ffff800000104938:	4c 01 d8             	add    rax,r11
ffff80000010493b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
ffff80000010493f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
ffff800000104943:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
ffff800000104947:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff80000010494b:	48 8d 50 07          	lea    rdx,[rax+0x7]
ffff80000010494f:	48 85 c0             	test   rax,rax
ffff800000104952:	48 0f 48 c2          	cmovs  rax,rdx
ffff800000104956:	48 c1 f8 03          	sar    rax,0x3
ffff80000010495a:	48 89 c1             	mov    rcx,rax
ffff80000010495d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000104961:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
ffff800000104965:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
ffff800000104969:	48 89 d7             	mov    rdi,rdx
ffff80000010496c:	fc                   	cld    
ffff80000010496d:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
ffff800000104970:	a8 04                	test   al,0x4
ffff800000104972:	74 01                	je     ffff800000104975 <memcpy+0x5a>
ffff800000104974:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
ffff800000104975:	a8 02                	test   al,0x2
ffff800000104977:	74 02                	je     ffff80000010497b <memcpy+0x60>
ffff800000104979:	66 a5                	movs   WORD PTR es:[rdi],WORD PTR ds:[rsi]
ffff80000010497b:	a8 01                	test   al,0x1
ffff80000010497d:	74 01                	je     ffff800000104980 <memcpy+0x65>
ffff80000010497f:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
ffff800000104980:	89 f2                	mov    edx,esi
ffff800000104982:	89 4d fc             	mov    DWORD PTR [rbp-0x4],ecx
ffff800000104985:	89 7d f8             	mov    DWORD PTR [rbp-0x8],edi
ffff800000104988:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
ffff80000010498b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
ffff80000010498f:	5d                   	pop    rbp
ffff800000104990:	c3                   	ret    

ffff800000104991 <memcmp>:
ffff800000104991:	f3 0f 1e fa          	endbr64 
ffff800000104995:	55                   	push   rbp
ffff800000104996:	48 89 e5             	mov    rbp,rsp
ffff800000104999:	53                   	push   rbx
ffff80000010499a:	f3 0f 1e fa          	endbr64 
ffff80000010499e:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff80000010499a <memcmp+0x9>
ffff8000001049a5:	49 bb d6 7d 00 00 00 	movabs r11,0x7dd6
ffff8000001049ac:	00 00 00 
ffff8000001049af:	4c 01 d8             	add    rax,r11
ffff8000001049b2:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
ffff8000001049b6:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
ffff8000001049ba:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff8000001049be:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001049c3:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff8000001049c7:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
ffff8000001049cb:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
ffff8000001049cf:	48 89 d7             	mov    rdi,rdx
ffff8000001049d2:	fc                   	cld    
ffff8000001049d3:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
ffff8000001049d5:	74 09                	je     ffff8000001049e0 <memcmp+0x4f>
ffff8000001049d7:	b8 01 00 00 00       	mov    eax,0x1
ffff8000001049dc:	7c 02                	jl     ffff8000001049e0 <memcmp+0x4f>
ffff8000001049de:	f7 d8                	neg    eax
ffff8000001049e0:	89 c3                	mov    ebx,eax
ffff8000001049e2:	89 d8                	mov    eax,ebx
ffff8000001049e4:	5b                   	pop    rbx
ffff8000001049e5:	5d                   	pop    rbp
ffff8000001049e6:	c3                   	ret    

ffff8000001049e7 <memset>:
ffff8000001049e7:	f3 0f 1e fa          	endbr64 
ffff8000001049eb:	55                   	push   rbp
ffff8000001049ec:	48 89 e5             	mov    rbp,rsp
ffff8000001049ef:	f3 0f 1e fa          	endbr64 
ffff8000001049f3:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001049ef <memset+0x8>
ffff8000001049fa:	49 bb 81 7d 00 00 00 	movabs r11,0x7d81
ffff800000104a01:	00 00 00 
ffff800000104a04:	4c 01 d8             	add    rax,r11
ffff800000104a07:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
ffff800000104a0b:	89 f0                	mov    eax,esi
ffff800000104a0d:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
ffff800000104a11:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
ffff800000104a14:	0f b6 45 e4          	movzx  eax,BYTE PTR [rbp-0x1c]
ffff800000104a18:	48 ba 01 01 01 01 01 	movabs rdx,0x101010101010101
ffff800000104a1f:	01 01 01 
ffff800000104a22:	48 0f af c2          	imul   rax,rdx
ffff800000104a26:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
ffff800000104a2a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000104a2e:	48 8d 50 07          	lea    rdx,[rax+0x7]
ffff800000104a32:	48 85 c0             	test   rax,rax
ffff800000104a35:	48 0f 48 c2          	cmovs  rax,rdx
ffff800000104a39:	48 c1 f8 03          	sar    rax,0x3
ffff800000104a3d:	48 89 c1             	mov    rcx,rax
ffff800000104a40:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104a44:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
ffff800000104a48:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
ffff800000104a4c:	48 89 d7             	mov    rdi,rdx
ffff800000104a4f:	fc                   	cld    
ffff800000104a50:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
ffff800000104a53:	40 f6 c6 04          	test   sil,0x4
ffff800000104a57:	74 01                	je     ffff800000104a5a <memset+0x73>
ffff800000104a59:	ab                   	stos   DWORD PTR es:[rdi],eax
ffff800000104a5a:	40 f6 c6 02          	test   sil,0x2
ffff800000104a5e:	74 02                	je     ffff800000104a62 <memset+0x7b>
ffff800000104a60:	66 ab                	stos   WORD PTR es:[rdi],ax
ffff800000104a62:	40 f6 c6 01          	test   sil,0x1
ffff800000104a66:	74 01                	je     ffff800000104a69 <memset+0x82>
ffff800000104a68:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000104a69:	89 f8                	mov    eax,edi
ffff800000104a6b:	89 ca                	mov    edx,ecx
ffff800000104a6d:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
ffff800000104a70:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
ffff800000104a73:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000104a77:	5d                   	pop    rbp
ffff800000104a78:	c3                   	ret    

ffff800000104a79 <strcpy>:
ffff800000104a79:	f3 0f 1e fa          	endbr64 
ffff800000104a7d:	55                   	push   rbp
ffff800000104a7e:	48 89 e5             	mov    rbp,rsp
ffff800000104a81:	f3 0f 1e fa          	endbr64 
ffff800000104a85:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104a81 <strcpy+0x8>
ffff800000104a8c:	49 bb ef 7c 00 00 00 	movabs r11,0x7cef
ffff800000104a93:	00 00 00 
ffff800000104a96:	4c 01 d8             	add    rax,r11
ffff800000104a99:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000104a9d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000104aa1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000104aa5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff800000104aa9:	48 89 c6             	mov    rsi,rax
ffff800000104aac:	48 89 d7             	mov    rdi,rdx
ffff800000104aaf:	fc                   	cld    
ffff800000104ab0:	ac                   	lods   al,BYTE PTR ds:[rsi]
ffff800000104ab1:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000104ab2:	84 c0                	test   al,al
ffff800000104ab4:	75 fa                	jne    ffff800000104ab0 <strcpy+0x37>
ffff800000104ab6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104aba:	5d                   	pop    rbp
ffff800000104abb:	c3                   	ret    

ffff800000104abc <strncpy>:
ffff800000104abc:	f3 0f 1e fa          	endbr64 
ffff800000104ac0:	55                   	push   rbp
ffff800000104ac1:	48 89 e5             	mov    rbp,rsp
ffff800000104ac4:	f3 0f 1e fa          	endbr64 
ffff800000104ac8:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104ac4 <strncpy+0x8>
ffff800000104acf:	49 bb ac 7c 00 00 00 	movabs r11,0x7cac
ffff800000104ad6:	00 00 00 
ffff800000104ad9:	4c 01 d8             	add    rax,r11
ffff800000104adc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000104ae0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000104ae4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
ffff800000104ae8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000104aec:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff800000104af0:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
ffff800000104af4:	48 89 c6             	mov    rsi,rax
ffff800000104af7:	48 89 d7             	mov    rdi,rdx
ffff800000104afa:	fc                   	cld    
ffff800000104afb:	48 ff c9             	dec    rcx
ffff800000104afe:	78 08                	js     ffff800000104b08 <strncpy+0x4c>
ffff800000104b00:	ac                   	lods   al,BYTE PTR ds:[rsi]
ffff800000104b01:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000104b02:	84 c0                	test   al,al
ffff800000104b04:	75 f5                	jne    ffff800000104afb <strncpy+0x3f>
ffff800000104b06:	f3 aa                	rep stos BYTE PTR es:[rdi],al
ffff800000104b08:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104b0c:	5d                   	pop    rbp
ffff800000104b0d:	c3                   	ret    

ffff800000104b0e <strcat>:
ffff800000104b0e:	f3 0f 1e fa          	endbr64 
ffff800000104b12:	55                   	push   rbp
ffff800000104b13:	48 89 e5             	mov    rbp,rsp
ffff800000104b16:	f3 0f 1e fa          	endbr64 
ffff800000104b1a:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104b16 <strcat+0x8>
ffff800000104b21:	49 bb 5a 7c 00 00 00 	movabs r11,0x7c5a
ffff800000104b28:	00 00 00 
ffff800000104b2b:	4c 01 d8             	add    rax,r11
ffff800000104b2e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000104b32:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000104b36:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff800000104b3a:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
ffff800000104b3e:	b8 00 00 00 00       	mov    eax,0x0
ffff800000104b43:	b9 ff ff ff ff       	mov    ecx,0xffffffff
ffff800000104b48:	48 89 d6             	mov    rsi,rdx
ffff800000104b4b:	fc                   	cld    
ffff800000104b4c:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
ffff800000104b4e:	48 ff cf             	dec    rdi
ffff800000104b51:	ac                   	lods   al,BYTE PTR ds:[rsi]
ffff800000104b52:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000104b53:	84 c0                	test   al,al
ffff800000104b55:	75 fa                	jne    ffff800000104b51 <strcat+0x43>
ffff800000104b57:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104b5b:	5d                   	pop    rbp
ffff800000104b5c:	c3                   	ret    

ffff800000104b5d <strcmp>:
ffff800000104b5d:	f3 0f 1e fa          	endbr64 
ffff800000104b61:	55                   	push   rbp
ffff800000104b62:	48 89 e5             	mov    rbp,rsp
ffff800000104b65:	53                   	push   rbx
ffff800000104b66:	f3 0f 1e fa          	endbr64 
ffff800000104b6a:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104b66 <strcmp+0x9>
ffff800000104b71:	49 bb 0a 7c 00 00 00 	movabs r11,0x7c0a
ffff800000104b78:	00 00 00 
ffff800000104b7b:	4c 01 d8             	add    rax,r11
ffff800000104b7e:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
ffff800000104b82:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
ffff800000104b86:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000104b8a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
ffff800000104b8e:	48 89 c7             	mov    rdi,rax
ffff800000104b91:	48 89 d6             	mov    rsi,rdx
ffff800000104b94:	fc                   	cld    
ffff800000104b95:	ac                   	lods   al,BYTE PTR ds:[rsi]
ffff800000104b96:	ae                   	scas   al,BYTE PTR es:[rdi]
ffff800000104b97:	75 08                	jne    ffff800000104ba1 <strcmp+0x44>
ffff800000104b99:	84 c0                	test   al,al
ffff800000104b9b:	75 f8                	jne    ffff800000104b95 <strcmp+0x38>
ffff800000104b9d:	31 c0                	xor    eax,eax
ffff800000104b9f:	eb 09                	jmp    ffff800000104baa <strcmp+0x4d>
ffff800000104ba1:	b8 01 00 00 00       	mov    eax,0x1
ffff800000104ba6:	7c 02                	jl     ffff800000104baa <strcmp+0x4d>
ffff800000104ba8:	f7 d8                	neg    eax
ffff800000104baa:	89 c3                	mov    ebx,eax
ffff800000104bac:	89 d8                	mov    eax,ebx
ffff800000104bae:	5b                   	pop    rbx
ffff800000104baf:	5d                   	pop    rbp
ffff800000104bb0:	c3                   	ret    

ffff800000104bb1 <strncmp>:
ffff800000104bb1:	f3 0f 1e fa          	endbr64 
ffff800000104bb5:	55                   	push   rbp
ffff800000104bb6:	48 89 e5             	mov    rbp,rsp
ffff800000104bb9:	53                   	push   rbx
ffff800000104bba:	f3 0f 1e fa          	endbr64 
ffff800000104bbe:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104bba <strncmp+0x9>
ffff800000104bc5:	49 bb b6 7b 00 00 00 	movabs r11,0x7bb6
ffff800000104bcc:	00 00 00 
ffff800000104bcf:	4c 01 d8             	add    rax,r11
ffff800000104bd2:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
ffff800000104bd6:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
ffff800000104bda:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff800000104bde:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000104be2:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
ffff800000104be6:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
ffff800000104bea:	48 89 c7             	mov    rdi,rax
ffff800000104bed:	48 89 d6             	mov    rsi,rdx
ffff800000104bf0:	fc                   	cld    
ffff800000104bf1:	48 ff c9             	dec    rcx
ffff800000104bf4:	78 08                	js     ffff800000104bfe <strncmp+0x4d>
ffff800000104bf6:	ac                   	lods   al,BYTE PTR ds:[rsi]
ffff800000104bf7:	ae                   	scas   al,BYTE PTR es:[rdi]
ffff800000104bf8:	75 08                	jne    ffff800000104c02 <strncmp+0x51>
ffff800000104bfa:	84 c0                	test   al,al
ffff800000104bfc:	75 f3                	jne    ffff800000104bf1 <strncmp+0x40>
ffff800000104bfe:	31 c0                	xor    eax,eax
ffff800000104c00:	eb 09                	jmp    ffff800000104c0b <strncmp+0x5a>
ffff800000104c02:	b8 01 00 00 00       	mov    eax,0x1
ffff800000104c07:	7c 02                	jl     ffff800000104c0b <strncmp+0x5a>
ffff800000104c09:	f7 d8                	neg    eax
ffff800000104c0b:	89 c3                	mov    ebx,eax
ffff800000104c0d:	89 d8                	mov    eax,ebx
ffff800000104c0f:	5b                   	pop    rbx
ffff800000104c10:	5d                   	pop    rbp
ffff800000104c11:	c3                   	ret    

ffff800000104c12 <strlen>:
ffff800000104c12:	f3 0f 1e fa          	endbr64 
ffff800000104c16:	55                   	push   rbp
ffff800000104c17:	48 89 e5             	mov    rbp,rsp
ffff800000104c1a:	53                   	push   rbx
ffff800000104c1b:	f3 0f 1e fa          	endbr64 
ffff800000104c1f:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104c1b <strlen+0x9>
ffff800000104c26:	49 bb 55 7b 00 00 00 	movabs r11,0x7b55
ffff800000104c2d:	00 00 00 
ffff800000104c30:	4c 01 d8             	add    rax,r11
ffff800000104c33:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
ffff800000104c37:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
ffff800000104c3b:	b8 00 00 00 00       	mov    eax,0x0
ffff800000104c40:	ba ff ff ff ff       	mov    edx,0xffffffff
ffff800000104c45:	89 d1                	mov    ecx,edx
ffff800000104c47:	48 89 f7             	mov    rdi,rsi
ffff800000104c4a:	fc                   	cld    
ffff800000104c4b:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
ffff800000104c4d:	f7 d1                	not    ecx
ffff800000104c4f:	ff c9                	dec    ecx
ffff800000104c51:	89 ca                	mov    edx,ecx
ffff800000104c53:	89 d3                	mov    ebx,edx
ffff800000104c55:	89 d8                	mov    eax,ebx
ffff800000104c57:	5b                   	pop    rbx
ffff800000104c58:	5d                   	pop    rbp
ffff800000104c59:	c3                   	ret    

ffff800000104c5a <bit_set>:
ffff800000104c5a:	f3 0f 1e fa          	endbr64 
ffff800000104c5e:	55                   	push   rbp
ffff800000104c5f:	48 89 e5             	mov    rbp,rsp
ffff800000104c62:	f3 0f 1e fa          	endbr64 
ffff800000104c66:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104c62 <bit_set+0x8>
ffff800000104c6d:	49 bb 0e 7b 00 00 00 	movabs r11,0x7b0e
ffff800000104c74:	00 00 00 
ffff800000104c77:	4c 01 d8             	add    rax,r11
ffff800000104c7a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000104c7e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000104c82:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104c86:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000104c89:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff800000104c8d:	be 01 00 00 00       	mov    esi,0x1
ffff800000104c92:	89 d1                	mov    ecx,edx
ffff800000104c94:	48 d3 e6             	shl    rsi,cl
ffff800000104c97:	48 89 f2             	mov    rdx,rsi
ffff800000104c9a:	48 09 d0             	or     rax,rdx
ffff800000104c9d:	5d                   	pop    rbp
ffff800000104c9e:	c3                   	ret    

ffff800000104c9f <bit_get>:
ffff800000104c9f:	f3 0f 1e fa          	endbr64 
ffff800000104ca3:	55                   	push   rbp
ffff800000104ca4:	48 89 e5             	mov    rbp,rsp
ffff800000104ca7:	f3 0f 1e fa          	endbr64 
ffff800000104cab:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104ca7 <bit_get+0x8>
ffff800000104cb2:	49 bb c9 7a 00 00 00 	movabs r11,0x7ac9
ffff800000104cb9:	00 00 00 
ffff800000104cbc:	4c 01 d8             	add    rax,r11
ffff800000104cbf:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000104cc3:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000104cc7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104ccb:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000104cce:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff800000104cd2:	be 01 00 00 00       	mov    esi,0x1
ffff800000104cd7:	89 d1                	mov    ecx,edx
ffff800000104cd9:	48 d3 e6             	shl    rsi,cl
ffff800000104cdc:	48 89 f2             	mov    rdx,rsi
ffff800000104cdf:	48 21 d0             	and    rax,rdx
ffff800000104ce2:	5d                   	pop    rbp
ffff800000104ce3:	c3                   	ret    

ffff800000104ce4 <bit_clean>:
ffff800000104ce4:	f3 0f 1e fa          	endbr64 
ffff800000104ce8:	55                   	push   rbp
ffff800000104ce9:	48 89 e5             	mov    rbp,rsp
ffff800000104cec:	f3 0f 1e fa          	endbr64 
ffff800000104cf0:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104cec <bit_clean+0x8>
ffff800000104cf7:	49 bb 84 7a 00 00 00 	movabs r11,0x7a84
ffff800000104cfe:	00 00 00 
ffff800000104d01:	4c 01 d8             	add    rax,r11
ffff800000104d04:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000104d08:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000104d0c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000104d10:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000104d13:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff800000104d17:	be 01 00 00 00       	mov    esi,0x1
ffff800000104d1c:	89 d1                	mov    ecx,edx
ffff800000104d1e:	48 d3 e6             	shl    rsi,cl
ffff800000104d21:	48 89 f2             	mov    rdx,rsi
ffff800000104d24:	48 f7 d2             	not    rdx
ffff800000104d27:	48 21 d0             	and    rax,rdx
ffff800000104d2a:	5d                   	pop    rbp
ffff800000104d2b:	c3                   	ret    

ffff800000104d2c <io_in8>:
ffff800000104d2c:	f3 0f 1e fa          	endbr64 
ffff800000104d30:	55                   	push   rbp
ffff800000104d31:	48 89 e5             	mov    rbp,rsp
ffff800000104d34:	f3 0f 1e fa          	endbr64 
ffff800000104d38:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104d34 <io_in8+0x8>
ffff800000104d3f:	49 bb 3c 7a 00 00 00 	movabs r11,0x7a3c
ffff800000104d46:	00 00 00 
ffff800000104d49:	4c 01 d8             	add    rax,r11
ffff800000104d4c:	89 f8                	mov    eax,edi
ffff800000104d4e:	66 89 45 ec          	mov    WORD PTR [rbp-0x14],ax
ffff800000104d52:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
ffff800000104d56:	0f b7 45 ec          	movzx  eax,WORD PTR [rbp-0x14]
ffff800000104d5a:	89 c2                	mov    edx,eax
ffff800000104d5c:	ec                   	in     al,dx
ffff800000104d5d:	0f ae f0             	mfence 
ffff800000104d60:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
ffff800000104d63:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
ffff800000104d67:	5d                   	pop    rbp
ffff800000104d68:	c3                   	ret    

ffff800000104d69 <io_in32>:
ffff800000104d69:	f3 0f 1e fa          	endbr64 
ffff800000104d6d:	55                   	push   rbp
ffff800000104d6e:	48 89 e5             	mov    rbp,rsp
ffff800000104d71:	f3 0f 1e fa          	endbr64 
ffff800000104d75:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104d71 <io_in32+0x8>
ffff800000104d7c:	49 bb ff 79 00 00 00 	movabs r11,0x79ff
ffff800000104d83:	00 00 00 
ffff800000104d86:	4c 01 d8             	add    rax,r11
ffff800000104d89:	89 f8                	mov    eax,edi
ffff800000104d8b:	66 89 45 ec          	mov    WORD PTR [rbp-0x14],ax
ffff800000104d8f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
ffff800000104d96:	0f b7 45 ec          	movzx  eax,WORD PTR [rbp-0x14]
ffff800000104d9a:	89 c2                	mov    edx,eax
ffff800000104d9c:	ed                   	in     eax,dx
ffff800000104d9d:	0f ae f0             	mfence 
ffff800000104da0:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
ffff800000104da3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
ffff800000104da6:	5d                   	pop    rbp
ffff800000104da7:	c3                   	ret    

ffff800000104da8 <io_out8>:
ffff800000104da8:	f3 0f 1e fa          	endbr64 
ffff800000104dac:	55                   	push   rbp
ffff800000104dad:	48 89 e5             	mov    rbp,rsp
ffff800000104db0:	f3 0f 1e fa          	endbr64 
ffff800000104db4:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104db0 <io_out8+0x8>
ffff800000104dbb:	49 bb c0 79 00 00 00 	movabs r11,0x79c0
ffff800000104dc2:	00 00 00 
ffff800000104dc5:	4c 01 d8             	add    rax,r11
ffff800000104dc8:	89 f8                	mov    eax,edi
ffff800000104dca:	89 f2                	mov    edx,esi
ffff800000104dcc:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
ffff800000104dd0:	89 d0                	mov    eax,edx
ffff800000104dd2:	88 45 f8             	mov    BYTE PTR [rbp-0x8],al
ffff800000104dd5:	0f b6 45 f8          	movzx  eax,BYTE PTR [rbp-0x8]
ffff800000104dd9:	0f b7 55 fc          	movzx  edx,WORD PTR [rbp-0x4]
ffff800000104ddd:	ee                   	out    dx,al
ffff800000104dde:	0f ae f0             	mfence 
ffff800000104de1:	90                   	nop
ffff800000104de2:	5d                   	pop    rbp
ffff800000104de3:	c3                   	ret    

ffff800000104de4 <io_out32>:
ffff800000104de4:	f3 0f 1e fa          	endbr64 
ffff800000104de8:	55                   	push   rbp
ffff800000104de9:	48 89 e5             	mov    rbp,rsp
ffff800000104dec:	f3 0f 1e fa          	endbr64 
ffff800000104df0:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104dec <io_out32+0x8>
ffff800000104df7:	49 bb 84 79 00 00 00 	movabs r11,0x7984
ffff800000104dfe:	00 00 00 
ffff800000104e01:	4c 01 d8             	add    rax,r11
ffff800000104e04:	89 f8                	mov    eax,edi
ffff800000104e06:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
ffff800000104e09:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
ffff800000104e0d:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
ffff800000104e10:	0f b7 55 fc          	movzx  edx,WORD PTR [rbp-0x4]
ffff800000104e14:	ef                   	out    dx,eax
ffff800000104e15:	0f ae f0             	mfence 
ffff800000104e18:	90                   	nop
ffff800000104e19:	5d                   	pop    rbp
ffff800000104e1a:	c3                   	ret    

ffff800000104e1b <rdmsr>:
ffff800000104e1b:	f3 0f 1e fa          	endbr64 
ffff800000104e1f:	55                   	push   rbp
ffff800000104e20:	48 89 e5             	mov    rbp,rsp
ffff800000104e23:	f3 0f 1e fa          	endbr64 
ffff800000104e27:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104e23 <rdmsr+0x8>
ffff800000104e2e:	49 bb 4d 79 00 00 00 	movabs r11,0x794d
ffff800000104e35:	00 00 00 
ffff800000104e38:	4c 01 d8             	add    rax,r11
ffff800000104e3b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
ffff800000104e3f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
ffff800000104e46:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
ffff800000104e4d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000104e51:	48 89 c1             	mov    rcx,rax
ffff800000104e54:	0f 32                	rdmsr  
ffff800000104e56:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
ffff800000104e59:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
ffff800000104e5c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
ffff800000104e5f:	48 c1 e0 20          	shl    rax,0x20
ffff800000104e63:	48 89 c2             	mov    rdx,rax
ffff800000104e66:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
ffff800000104e69:	48 09 d0             	or     rax,rdx
ffff800000104e6c:	5d                   	pop    rbp
ffff800000104e6d:	c3                   	ret    

ffff800000104e6e <wrmsr>:
ffff800000104e6e:	f3 0f 1e fa          	endbr64 
ffff800000104e72:	55                   	push   rbp
ffff800000104e73:	48 89 e5             	mov    rbp,rsp
ffff800000104e76:	f3 0f 1e fa          	endbr64 
ffff800000104e7a:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104e76 <wrmsr+0x8>
ffff800000104e81:	49 bb fa 78 00 00 00 	movabs r11,0x78fa
ffff800000104e88:	00 00 00 
ffff800000104e8b:	4c 01 d8             	add    rax,r11
ffff800000104e8e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000104e92:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000104e96:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000104e9a:	48 c1 e8 20          	shr    rax,0x20
ffff800000104e9e:	48 89 c2             	mov    rdx,rax
ffff800000104ea1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000104ea5:	89 c0                	mov    eax,eax
ffff800000104ea7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
ffff800000104eab:	0f 30                	wrmsr  
ffff800000104ead:	90                   	nop
ffff800000104eae:	5d                   	pop    rbp
ffff800000104eaf:	c3                   	ret    

ffff800000104eb0 <putchar>:
ffff800000104eb0:	f3 0f 1e fa          	endbr64 
ffff800000104eb4:	55                   	push   rbp
ffff800000104eb5:	48 89 e5             	mov    rbp,rsp
ffff800000104eb8:	f3 0f 1e fa          	endbr64 
ffff800000104ebc:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104eb8 <putchar+0x8>
ffff800000104ec3:	49 bb b8 78 00 00 00 	movabs r11,0x78b8
ffff800000104eca:	00 00 00 
ffff800000104ecd:	4c 01 d8             	add    rax,r11
ffff800000104ed0:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000104ed4:	89 75 d4             	mov    DWORD PTR [rbp-0x2c],esi
ffff800000104ed7:	89 55 d0             	mov    DWORD PTR [rbp-0x30],edx
ffff800000104eda:	89 4d cc             	mov    DWORD PTR [rbp-0x34],ecx
ffff800000104edd:	44 89 45 c8          	mov    DWORD PTR [rbp-0x38],r8d
ffff800000104ee1:	44 89 4d c4          	mov    DWORD PTR [rbp-0x3c],r9d
ffff800000104ee5:	8b 55 10             	mov    edx,DWORD PTR [rbp+0x10]
ffff800000104ee8:	88 55 c0             	mov    BYTE PTR [rbp-0x40],dl
ffff800000104eeb:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
ffff800000104ef2:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
ffff800000104ef9:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
ffff800000104f00:	00 
ffff800000104f01:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000104f08:	00 
ffff800000104f09:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
ffff800000104f10:	0f b6 55 c0          	movzx  edx,BYTE PTR [rbp-0x40]
ffff800000104f14:	48 63 d2             	movsxd rdx,edx
ffff800000104f17:	48 89 d1             	mov    rcx,rdx
ffff800000104f1a:	48 c1 e1 04          	shl    rcx,0x4
ffff800000104f1e:	48 ba 50 cf ff ff ff 	movabs rdx,0xffffffffffffcf50
ffff800000104f25:	ff ff ff 
ffff800000104f28:	48 8d 04 10          	lea    rax,[rax+rdx*1]
ffff800000104f2c:	48 01 c8             	add    rax,rcx
ffff800000104f2f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000104f33:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
ffff800000104f3a:	eb 7a                	jmp    ffff800000104fb6 <putchar+0x106>
ffff800000104f3c:	8b 55 cc             	mov    edx,DWORD PTR [rbp-0x34]
ffff800000104f3f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
ffff800000104f42:	01 d0                	add    eax,edx
ffff800000104f44:	0f af 45 d4          	imul   eax,DWORD PTR [rbp-0x2c]
ffff800000104f48:	48 63 d0             	movsxd rdx,eax
ffff800000104f4b:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
ffff800000104f4e:	48 98                	cdqe   
ffff800000104f50:	48 01 d0             	add    rax,rdx
ffff800000104f53:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
ffff800000104f5a:	00 
ffff800000104f5b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000104f5f:	48 01 d0             	add    rax,rdx
ffff800000104f62:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
ffff800000104f66:	c7 45 e4 00 01 00 00 	mov    DWORD PTR [rbp-0x1c],0x100
ffff800000104f6d:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
ffff800000104f74:	eb 31                	jmp    ffff800000104fa7 <putchar+0xf7>
ffff800000104f76:	d1 7d e4             	sar    DWORD PTR [rbp-0x1c],1
ffff800000104f79:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000104f7d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000104f80:	0f b6 c0             	movzx  eax,al
ffff800000104f83:	23 45 e4             	and    eax,DWORD PTR [rbp-0x1c]
ffff800000104f86:	85 c0                	test   eax,eax
ffff800000104f88:	74 0b                	je     ffff800000104f95 <putchar+0xe5>
ffff800000104f8a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000104f8e:	8b 55 c8             	mov    edx,DWORD PTR [rbp-0x38]
ffff800000104f91:	89 10                	mov    DWORD PTR [rax],edx
ffff800000104f93:	eb 09                	jmp    ffff800000104f9e <putchar+0xee>
ffff800000104f95:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000104f99:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
ffff800000104f9c:	89 10                	mov    DWORD PTR [rax],edx
ffff800000104f9e:	48 83 45 f0 04       	add    QWORD PTR [rbp-0x10],0x4
ffff800000104fa3:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
ffff800000104fa7:	83 7d f8 07          	cmp    DWORD PTR [rbp-0x8],0x7
ffff800000104fab:	7e c9                	jle    ffff800000104f76 <putchar+0xc6>
ffff800000104fad:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
ffff800000104fb2:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
ffff800000104fb6:	83 7d fc 0f          	cmp    DWORD PTR [rbp-0x4],0xf
ffff800000104fba:	7e 80                	jle    ffff800000104f3c <putchar+0x8c>
ffff800000104fbc:	90                   	nop
ffff800000104fbd:	90                   	nop
ffff800000104fbe:	5d                   	pop    rbp
ffff800000104fbf:	c3                   	ret    

ffff800000104fc0 <skip_atoi>:
ffff800000104fc0:	f3 0f 1e fa          	endbr64 
ffff800000104fc4:	55                   	push   rbp
ffff800000104fc5:	48 89 e5             	mov    rbp,rsp
ffff800000104fc8:	f3 0f 1e fa          	endbr64 
ffff800000104fcc:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000104fc8 <skip_atoi+0x8>
ffff800000104fd3:	49 bb a8 77 00 00 00 	movabs r11,0x77a8
ffff800000104fda:	00 00 00 
ffff800000104fdd:	4c 01 d8             	add    rax,r11
ffff800000104fe0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
ffff800000104fe4:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
ffff800000104feb:	eb 2e                	jmp    ffff80000010501b <skip_atoi+0x5b>
ffff800000104fed:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
ffff800000104ff0:	89 d0                	mov    eax,edx
ffff800000104ff2:	c1 e0 02             	shl    eax,0x2
ffff800000104ff5:	01 d0                	add    eax,edx
ffff800000104ff7:	01 c0                	add    eax,eax
ffff800000104ff9:	89 c6                	mov    esi,eax
ffff800000104ffb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000104fff:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000105002:	48 8d 48 01          	lea    rcx,[rax+0x1]
ffff800000105006:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
ffff80000010500a:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff80000010500d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105010:	0f be c0             	movsx  eax,al
ffff800000105013:	01 f0                	add    eax,esi
ffff800000105015:	83 e8 30             	sub    eax,0x30
ffff800000105018:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
ffff80000010501b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff80000010501f:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000105022:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105025:	3c 2f                	cmp    al,0x2f
ffff800000105027:	7e 0e                	jle    ffff800000105037 <skip_atoi+0x77>
ffff800000105029:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff80000010502d:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000105030:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105033:	3c 39                	cmp    al,0x39
ffff800000105035:	7e b6                	jle    ffff800000104fed <skip_atoi+0x2d>
ffff800000105037:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
ffff80000010503a:	5d                   	pop    rbp
ffff80000010503b:	c3                   	ret    

ffff80000010503c <number>:
ffff80000010503c:	f3 0f 1e fa          	endbr64 
ffff800000105040:	55                   	push   rbp
ffff800000105041:	48 89 e5             	mov    rbp,rsp
ffff800000105044:	f3 0f 1e fa          	endbr64 
ffff800000105048:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000105044 <number+0x8>
ffff80000010504f:	49 bb 2c 77 00 00 00 	movabs r11,0x772c
ffff800000105056:	00 00 00 
ffff800000105059:	4c 01 d8             	add    rax,r11
ffff80000010505c:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
ffff800000105060:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
ffff800000105064:	89 55 9c             	mov    DWORD PTR [rbp-0x64],edx
ffff800000105067:	89 4d 98             	mov    DWORD PTR [rbp-0x68],ecx
ffff80000010506a:	44 89 45 94          	mov    DWORD PTR [rbp-0x6c],r8d
ffff80000010506e:	44 89 4d 90          	mov    DWORD PTR [rbp-0x70],r9d
ffff800000105072:	48 ba 38 00 00 00 00 	movabs rdx,0x38
ffff800000105079:	00 00 00 
ffff80000010507c:	48 8d 14 10          	lea    rdx,[rax+rdx*1]
ffff800000105080:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff800000105084:	8b 55 90             	mov    edx,DWORD PTR [rbp-0x70]
ffff800000105087:	83 e2 40             	and    edx,0x40
ffff80000010508a:	85 d2                	test   edx,edx
ffff80000010508c:	74 12                	je     ffff8000001050a0 <number+0x64>
ffff80000010508e:	48 ba 60 00 00 00 00 	movabs rdx,0x60
ffff800000105095:	00 00 00 
ffff800000105098:	48 8d 04 10          	lea    rax,[rax+rdx*1]
ffff80000010509c:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
ffff8000001050a0:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
ffff8000001050a3:	83 e0 10             	and    eax,0x10
ffff8000001050a6:	85 c0                	test   eax,eax
ffff8000001050a8:	74 04                	je     ffff8000001050ae <number+0x72>
ffff8000001050aa:	83 65 90 fe          	and    DWORD PTR [rbp-0x70],0xfffffffe
ffff8000001050ae:	83 7d 9c 01          	cmp    DWORD PTR [rbp-0x64],0x1
ffff8000001050b2:	7e 06                	jle    ffff8000001050ba <number+0x7e>
ffff8000001050b4:	83 7d 9c 24          	cmp    DWORD PTR [rbp-0x64],0x24
ffff8000001050b8:	7e 0a                	jle    ffff8000001050c4 <number+0x88>
ffff8000001050ba:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001050bf:	e9 10 02 00 00       	jmp    ffff8000001052d4 <number+0x298>
ffff8000001050c4:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
ffff8000001050c7:	83 e0 01             	and    eax,0x1
ffff8000001050ca:	85 c0                	test   eax,eax
ffff8000001050cc:	74 07                	je     ffff8000001050d5 <number+0x99>
ffff8000001050ce:	b8 30 00 00 00       	mov    eax,0x30
ffff8000001050d3:	eb 05                	jmp    ffff8000001050da <number+0x9e>
ffff8000001050d5:	b8 20 00 00 00       	mov    eax,0x20
ffff8000001050da:	88 45 eb             	mov    BYTE PTR [rbp-0x15],al
ffff8000001050dd:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
ffff8000001050e1:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
ffff8000001050e4:	83 e0 02             	and    eax,0x2
ffff8000001050e7:	85 c0                	test   eax,eax
ffff8000001050e9:	74 11                	je     ffff8000001050fc <number+0xc0>
ffff8000001050eb:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
ffff8000001050f0:	79 0a                	jns    ffff8000001050fc <number+0xc0>
ffff8000001050f2:	c6 45 ff 2d          	mov    BYTE PTR [rbp-0x1],0x2d
ffff8000001050f6:	48 f7 5d a0          	neg    QWORD PTR [rbp-0x60]
ffff8000001050fa:	eb 1d                	jmp    ffff800000105119 <number+0xdd>
ffff8000001050fc:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
ffff8000001050ff:	83 e0 04             	and    eax,0x4
ffff800000105102:	85 c0                	test   eax,eax
ffff800000105104:	75 0b                	jne    ffff800000105111 <number+0xd5>
ffff800000105106:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
ffff800000105109:	c1 e0 02             	shl    eax,0x2
ffff80000010510c:	83 e0 20             	and    eax,0x20
ffff80000010510f:	eb 05                	jmp    ffff800000105116 <number+0xda>
ffff800000105111:	b8 2b 00 00 00       	mov    eax,0x2b
ffff800000105116:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
ffff800000105119:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
ffff80000010511d:	74 04                	je     ffff800000105123 <number+0xe7>
ffff80000010511f:	83 6d 98 01          	sub    DWORD PTR [rbp-0x68],0x1
ffff800000105123:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
ffff800000105126:	83 e0 20             	and    eax,0x20
ffff800000105129:	85 c0                	test   eax,eax
ffff80000010512b:	74 16                	je     ffff800000105143 <number+0x107>
ffff80000010512d:	83 7d 9c 10          	cmp    DWORD PTR [rbp-0x64],0x10
ffff800000105131:	75 06                	jne    ffff800000105139 <number+0xfd>
ffff800000105133:	83 6d 98 02          	sub    DWORD PTR [rbp-0x68],0x2
ffff800000105137:	eb 0a                	jmp    ffff800000105143 <number+0x107>
ffff800000105139:	83 7d 9c 08          	cmp    DWORD PTR [rbp-0x64],0x8
ffff80000010513d:	75 04                	jne    ffff800000105143 <number+0x107>
ffff80000010513f:	83 6d 98 01          	sub    DWORD PTR [rbp-0x68],0x1
ffff800000105143:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
ffff80000010514a:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
ffff80000010514f:	75 48                	jne    ffff800000105199 <number+0x15d>
ffff800000105151:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
ffff800000105154:	8d 50 01             	lea    edx,[rax+0x1]
ffff800000105157:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
ffff80000010515a:	48 98                	cdqe   
ffff80000010515c:	c6 44 05 b0 30       	mov    BYTE PTR [rbp+rax*1-0x50],0x30
ffff800000105161:	eb 3d                	jmp    ffff8000001051a0 <number+0x164>
ffff800000105163:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105167:	ba 00 00 00 00       	mov    edx,0x0
ffff80000010516c:	8b 4d 9c             	mov    ecx,DWORD PTR [rbp-0x64]
ffff80000010516f:	48 f7 f1             	div    rcx
ffff800000105172:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
ffff800000105176:	89 55 e4             	mov    DWORD PTR [rbp-0x1c],edx
ffff800000105179:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
ffff80000010517c:	48 63 d0             	movsxd rdx,eax
ffff80000010517f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105183:	48 8d 0c 02          	lea    rcx,[rdx+rax*1]
ffff800000105187:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
ffff80000010518a:	8d 50 01             	lea    edx,[rax+0x1]
ffff80000010518d:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
ffff800000105190:	0f b6 11             	movzx  edx,BYTE PTR [rcx]
ffff800000105193:	48 98                	cdqe   
ffff800000105195:	88 54 05 b0          	mov    BYTE PTR [rbp+rax*1-0x50],dl
ffff800000105199:	48 83 7d a0 00       	cmp    QWORD PTR [rbp-0x60],0x0
ffff80000010519e:	75 c3                	jne    ffff800000105163 <number+0x127>
ffff8000001051a0:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
ffff8000001051a3:	3b 45 94             	cmp    eax,DWORD PTR [rbp-0x6c]
ffff8000001051a6:	7e 06                	jle    ffff8000001051ae <number+0x172>
ffff8000001051a8:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
ffff8000001051ab:	89 45 94             	mov    DWORD PTR [rbp-0x6c],eax
ffff8000001051ae:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
ffff8000001051b1:	29 45 98             	sub    DWORD PTR [rbp-0x68],eax
ffff8000001051b4:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
ffff8000001051b7:	83 e0 11             	and    eax,0x11
ffff8000001051ba:	85 c0                	test   eax,eax
ffff8000001051bc:	75 1e                	jne    ffff8000001051dc <number+0x1a0>
ffff8000001051be:	eb 0f                	jmp    ffff8000001051cf <number+0x193>
ffff8000001051c0:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff8000001051c4:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff8000001051c8:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
ffff8000001051cc:	c6 00 20             	mov    BYTE PTR [rax],0x20
ffff8000001051cf:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
ffff8000001051d2:	8d 50 ff             	lea    edx,[rax-0x1]
ffff8000001051d5:	89 55 98             	mov    DWORD PTR [rbp-0x68],edx
ffff8000001051d8:	85 c0                	test   eax,eax
ffff8000001051da:	7f e4                	jg     ffff8000001051c0 <number+0x184>
ffff8000001051dc:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
ffff8000001051e0:	74 12                	je     ffff8000001051f4 <number+0x1b8>
ffff8000001051e2:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff8000001051e6:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff8000001051ea:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
ffff8000001051ee:	0f b6 55 ff          	movzx  edx,BYTE PTR [rbp-0x1]
ffff8000001051f2:	88 10                	mov    BYTE PTR [rax],dl
ffff8000001051f4:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
ffff8000001051f7:	83 e0 20             	and    eax,0x20
ffff8000001051fa:	85 c0                	test   eax,eax
ffff8000001051fc:	74 42                	je     ffff800000105240 <number+0x204>
ffff8000001051fe:	83 7d 9c 08          	cmp    DWORD PTR [rbp-0x64],0x8
ffff800000105202:	75 11                	jne    ffff800000105215 <number+0x1d9>
ffff800000105204:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105208:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff80000010520c:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
ffff800000105210:	c6 00 30             	mov    BYTE PTR [rax],0x30
ffff800000105213:	eb 2b                	jmp    ffff800000105240 <number+0x204>
ffff800000105215:	83 7d 9c 10          	cmp    DWORD PTR [rbp-0x64],0x10
ffff800000105219:	75 25                	jne    ffff800000105240 <number+0x204>
ffff80000010521b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff80000010521f:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff800000105223:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
ffff800000105227:	c6 00 30             	mov    BYTE PTR [rax],0x30
ffff80000010522a:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff80000010522e:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff800000105232:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
ffff800000105236:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff80000010523a:	0f b6 52 21          	movzx  edx,BYTE PTR [rdx+0x21]
ffff80000010523e:	88 10                	mov    BYTE PTR [rax],dl
ffff800000105240:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
ffff800000105243:	83 e0 10             	and    eax,0x10
ffff800000105246:	85 c0                	test   eax,eax
ffff800000105248:	75 32                	jne    ffff80000010527c <number+0x240>
ffff80000010524a:	eb 12                	jmp    ffff80000010525e <number+0x222>
ffff80000010524c:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105250:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff800000105254:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
ffff800000105258:	0f b6 55 eb          	movzx  edx,BYTE PTR [rbp-0x15]
ffff80000010525c:	88 10                	mov    BYTE PTR [rax],dl
ffff80000010525e:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
ffff800000105261:	8d 50 ff             	lea    edx,[rax-0x1]
ffff800000105264:	89 55 98             	mov    DWORD PTR [rbp-0x68],edx
ffff800000105267:	85 c0                	test   eax,eax
ffff800000105269:	7f e1                	jg     ffff80000010524c <number+0x210>
ffff80000010526b:	eb 0f                	jmp    ffff80000010527c <number+0x240>
ffff80000010526d:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105271:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff800000105275:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
ffff800000105279:	c6 00 30             	mov    BYTE PTR [rax],0x30
ffff80000010527c:	8b 45 94             	mov    eax,DWORD PTR [rbp-0x6c]
ffff80000010527f:	8d 50 ff             	lea    edx,[rax-0x1]
ffff800000105282:	89 55 94             	mov    DWORD PTR [rbp-0x6c],edx
ffff800000105285:	39 45 ec             	cmp    DWORD PTR [rbp-0x14],eax
ffff800000105288:	7c e3                	jl     ffff80000010526d <number+0x231>
ffff80000010528a:	eb 19                	jmp    ffff8000001052a5 <number+0x269>
ffff80000010528c:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105290:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff800000105294:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
ffff800000105298:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff80000010529b:	48 63 d2             	movsxd rdx,edx
ffff80000010529e:	0f b6 54 15 b0       	movzx  edx,BYTE PTR [rbp+rdx*1-0x50]
ffff8000001052a3:	88 10                	mov    BYTE PTR [rax],dl
ffff8000001052a5:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
ffff8000001052a8:	8d 50 ff             	lea    edx,[rax-0x1]
ffff8000001052ab:	89 55 ec             	mov    DWORD PTR [rbp-0x14],edx
ffff8000001052ae:	85 c0                	test   eax,eax
ffff8000001052b0:	7f da                	jg     ffff80000010528c <number+0x250>
ffff8000001052b2:	eb 0f                	jmp    ffff8000001052c3 <number+0x287>
ffff8000001052b4:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff8000001052b8:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff8000001052bc:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
ffff8000001052c0:	c6 00 20             	mov    BYTE PTR [rax],0x20
ffff8000001052c3:	8b 45 98             	mov    eax,DWORD PTR [rbp-0x68]
ffff8000001052c6:	8d 50 ff             	lea    edx,[rax-0x1]
ffff8000001052c9:	89 55 98             	mov    DWORD PTR [rbp-0x68],edx
ffff8000001052cc:	85 c0                	test   eax,eax
ffff8000001052ce:	7f e4                	jg     ffff8000001052b4 <number+0x278>
ffff8000001052d0:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff8000001052d4:	5d                   	pop    rbp
ffff8000001052d5:	c3                   	ret    

ffff8000001052d6 <vsprintf>:
ffff8000001052d6:	f3 0f 1e fa          	endbr64 
ffff8000001052da:	55                   	push   rbp
ffff8000001052db:	48 89 e5             	mov    rbp,rsp
ffff8000001052de:	53                   	push   rbx
ffff8000001052df:	48 83 ec 58          	sub    rsp,0x58
ffff8000001052e3:	f3 0f 1e fa          	endbr64 
ffff8000001052e7:	48 8d 1d f5 ff ff ff 	lea    rbx,[rip+0xfffffffffffffff5]        # ffff8000001052e3 <vsprintf+0xd>
ffff8000001052ee:	49 bb 8d 74 00 00 00 	movabs r11,0x748d
ffff8000001052f5:	00 00 00 
ffff8000001052f8:	4c 01 db             	add    rbx,r11
ffff8000001052fb:	48 89 7d b0          	mov    QWORD PTR [rbp-0x50],rdi
ffff8000001052ff:	48 89 75 a8          	mov    QWORD PTR [rbp-0x58],rsi
ffff800000105303:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
ffff800000105307:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
ffff80000010530b:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
ffff80000010530f:	e9 f8 08 00 00       	jmp    ffff800000105c0c <vsprintf+0x936>
ffff800000105314:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105318:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff80000010531b:	3c 25                	cmp    al,0x25
ffff80000010531d:	74 1a                	je     ffff800000105339 <vsprintf+0x63>
ffff80000010531f:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
ffff800000105323:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105327:	48 8d 48 01          	lea    rcx,[rax+0x1]
ffff80000010532b:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
ffff80000010532f:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
ffff800000105332:	88 10                	mov    BYTE PTR [rax],dl
ffff800000105334:	e9 c7 08 00 00       	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff800000105339:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
ffff800000105340:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105344:	48 83 c0 01          	add    rax,0x1
ffff800000105348:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
ffff80000010534c:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105350:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105353:	0f be c0             	movsx  eax,al
ffff800000105356:	83 e8 20             	sub    eax,0x20
ffff800000105359:	83 f8 10             	cmp    eax,0x10
ffff80000010535c:	77 40                	ja     ffff80000010539e <vsprintf+0xc8>
ffff80000010535e:	89 c0                	mov    eax,eax
ffff800000105360:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
ffff800000105367:	00 
ffff800000105368:	48 8d 05 89 74 00 00 	lea    rax,[rip+0x7489]        # ffff80000010c7f8 <.LC1+0x28>
ffff80000010536f:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
ffff800000105373:	48 8d 15 7e 74 00 00 	lea    rdx,[rip+0x747e]        # ffff80000010c7f8 <.LC1+0x28>
ffff80000010537a:	48 01 d0             	add    rax,rdx
ffff80000010537d:	3e ff e0             	notrack jmp rax
ffff800000105380:	83 4d e4 10          	or     DWORD PTR [rbp-0x1c],0x10
ffff800000105384:	eb ba                	jmp    ffff800000105340 <vsprintf+0x6a>
ffff800000105386:	83 4d e4 04          	or     DWORD PTR [rbp-0x1c],0x4
ffff80000010538a:	eb b4                	jmp    ffff800000105340 <vsprintf+0x6a>
ffff80000010538c:	83 4d e4 08          	or     DWORD PTR [rbp-0x1c],0x8
ffff800000105390:	eb ae                	jmp    ffff800000105340 <vsprintf+0x6a>
ffff800000105392:	83 4d e4 20          	or     DWORD PTR [rbp-0x1c],0x20
ffff800000105396:	eb a8                	jmp    ffff800000105340 <vsprintf+0x6a>
ffff800000105398:	83 4d e4 01          	or     DWORD PTR [rbp-0x1c],0x1
ffff80000010539c:	eb a2                	jmp    ffff800000105340 <vsprintf+0x6a>
ffff80000010539e:	c7 45 e0 ff ff ff ff 	mov    DWORD PTR [rbp-0x20],0xffffffff
ffff8000001053a5:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff8000001053a9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff8000001053ac:	3c 2f                	cmp    al,0x2f
ffff8000001053ae:	7e 27                	jle    ffff8000001053d7 <vsprintf+0x101>
ffff8000001053b0:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff8000001053b4:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff8000001053b7:	3c 39                	cmp    al,0x39
ffff8000001053b9:	7f 1c                	jg     ffff8000001053d7 <vsprintf+0x101>
ffff8000001053bb:	48 8d 45 a8          	lea    rax,[rbp-0x58]
ffff8000001053bf:	48 89 c7             	mov    rdi,rax
ffff8000001053c2:	48 b8 50 88 ff ff ff 	movabs rax,0xffffffffffff8850
ffff8000001053c9:	ff ff ff 
ffff8000001053cc:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001053d0:	ff d0                	call   rax
ffff8000001053d2:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
ffff8000001053d5:	eb 6c                	jmp    ffff800000105443 <vsprintf+0x16d>
ffff8000001053d7:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff8000001053db:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff8000001053de:	3c 2a                	cmp    al,0x2a
ffff8000001053e0:	75 61                	jne    ffff800000105443 <vsprintf+0x16d>
ffff8000001053e2:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff8000001053e6:	48 83 c0 01          	add    rax,0x1
ffff8000001053ea:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
ffff8000001053ee:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001053f2:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001053f4:	83 f8 2f             	cmp    eax,0x2f
ffff8000001053f7:	77 24                	ja     ffff80000010541d <vsprintf+0x147>
ffff8000001053f9:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001053fd:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff800000105401:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105405:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105407:	89 c0                	mov    eax,eax
ffff800000105409:	48 01 d0             	add    rax,rdx
ffff80000010540c:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105410:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff800000105412:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff800000105415:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105419:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff80000010541b:	eb 14                	jmp    ffff800000105431 <vsprintf+0x15b>
ffff80000010541d:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105421:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000105425:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff800000105429:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff80000010542d:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff800000105431:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105433:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
ffff800000105436:	83 7d e0 00          	cmp    DWORD PTR [rbp-0x20],0x0
ffff80000010543a:	79 07                	jns    ffff800000105443 <vsprintf+0x16d>
ffff80000010543c:	f7 5d e0             	neg    DWORD PTR [rbp-0x20]
ffff80000010543f:	83 4d e4 10          	or     DWORD PTR [rbp-0x1c],0x10
ffff800000105443:	c7 45 dc ff ff ff ff 	mov    DWORD PTR [rbp-0x24],0xffffffff
ffff80000010544a:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff80000010544e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105451:	3c 2e                	cmp    al,0x2e
ffff800000105453:	0f 85 aa 00 00 00    	jne    ffff800000105503 <vsprintf+0x22d>
ffff800000105459:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff80000010545d:	48 83 c0 01          	add    rax,0x1
ffff800000105461:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
ffff800000105465:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105469:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff80000010546c:	3c 2f                	cmp    al,0x2f
ffff80000010546e:	7e 27                	jle    ffff800000105497 <vsprintf+0x1c1>
ffff800000105470:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105474:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105477:	3c 39                	cmp    al,0x39
ffff800000105479:	7f 1c                	jg     ffff800000105497 <vsprintf+0x1c1>
ffff80000010547b:	48 8d 45 a8          	lea    rax,[rbp-0x58]
ffff80000010547f:	48 89 c7             	mov    rdi,rax
ffff800000105482:	48 b8 50 88 ff ff ff 	movabs rax,0xffffffffffff8850
ffff800000105489:	ff ff ff 
ffff80000010548c:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000105490:	ff d0                	call   rax
ffff800000105492:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
ffff800000105495:	eb 5f                	jmp    ffff8000001054f6 <vsprintf+0x220>
ffff800000105497:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff80000010549b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff80000010549e:	3c 2a                	cmp    al,0x2a
ffff8000001054a0:	75 54                	jne    ffff8000001054f6 <vsprintf+0x220>
ffff8000001054a2:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff8000001054a6:	48 83 c0 01          	add    rax,0x1
ffff8000001054aa:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
ffff8000001054ae:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001054b2:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001054b4:	83 f8 2f             	cmp    eax,0x2f
ffff8000001054b7:	77 24                	ja     ffff8000001054dd <vsprintf+0x207>
ffff8000001054b9:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001054bd:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff8000001054c1:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001054c5:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001054c7:	89 c0                	mov    eax,eax
ffff8000001054c9:	48 01 d0             	add    rax,rdx
ffff8000001054cc:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff8000001054d0:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff8000001054d2:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff8000001054d5:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff8000001054d9:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff8000001054db:	eb 14                	jmp    ffff8000001054f1 <vsprintf+0x21b>
ffff8000001054dd:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001054e1:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff8000001054e5:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff8000001054e9:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff8000001054ed:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff8000001054f1:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001054f3:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
ffff8000001054f6:	83 7d dc 00          	cmp    DWORD PTR [rbp-0x24],0x0
ffff8000001054fa:	79 07                	jns    ffff800000105503 <vsprintf+0x22d>
ffff8000001054fc:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
ffff800000105503:	c7 45 d0 ff ff ff ff 	mov    DWORD PTR [rbp-0x30],0xffffffff
ffff80000010550a:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff80000010550e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105511:	3c 68                	cmp    al,0x68
ffff800000105513:	74 21                	je     ffff800000105536 <vsprintf+0x260>
ffff800000105515:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105519:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff80000010551c:	3c 6c                	cmp    al,0x6c
ffff80000010551e:	74 16                	je     ffff800000105536 <vsprintf+0x260>
ffff800000105520:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105524:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105527:	3c 4c                	cmp    al,0x4c
ffff800000105529:	74 0b                	je     ffff800000105536 <vsprintf+0x260>
ffff80000010552b:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff80000010552f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105532:	3c 5a                	cmp    al,0x5a
ffff800000105534:	75 19                	jne    ffff80000010554f <vsprintf+0x279>
ffff800000105536:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff80000010553a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff80000010553d:	0f be c0             	movsx  eax,al
ffff800000105540:	89 45 d0             	mov    DWORD PTR [rbp-0x30],eax
ffff800000105543:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105547:	48 83 c0 01          	add    rax,0x1
ffff80000010554b:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
ffff80000010554f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105553:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105556:	0f be c0             	movsx  eax,al
ffff800000105559:	83 e8 25             	sub    eax,0x25
ffff80000010555c:	83 f8 53             	cmp    eax,0x53
ffff80000010555f:	0f 87 5d 06 00 00    	ja     ffff800000105bc2 <vsprintf+0x8ec>
ffff800000105565:	89 c0                	mov    eax,eax
ffff800000105567:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
ffff80000010556e:	00 
ffff80000010556f:	48 8d 05 0a 73 00 00 	lea    rax,[rip+0x730a]        # ffff80000010c880 <.LC1+0xb0>
ffff800000105576:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
ffff80000010557a:	48 8d 15 ff 72 00 00 	lea    rdx,[rip+0x72ff]        # ffff80000010c880 <.LC1+0xb0>
ffff800000105581:	48 01 d0             	add    rax,rdx
ffff800000105584:	3e ff e0             	notrack jmp rax
ffff800000105587:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
ffff80000010558a:	83 e0 10             	and    eax,0x10
ffff80000010558d:	85 c0                	test   eax,eax
ffff80000010558f:	75 1b                	jne    ffff8000001055ac <vsprintf+0x2d6>
ffff800000105591:	eb 0f                	jmp    ffff8000001055a2 <vsprintf+0x2cc>
ffff800000105593:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105597:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff80000010559b:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff80000010559f:	c6 00 20             	mov    BYTE PTR [rax],0x20
ffff8000001055a2:	83 6d e0 01          	sub    DWORD PTR [rbp-0x20],0x1
ffff8000001055a6:	83 7d e0 00          	cmp    DWORD PTR [rbp-0x20],0x0
ffff8000001055aa:	7f e7                	jg     ffff800000105593 <vsprintf+0x2bd>
ffff8000001055ac:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001055b0:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001055b2:	83 f8 2f             	cmp    eax,0x2f
ffff8000001055b5:	77 24                	ja     ffff8000001055db <vsprintf+0x305>
ffff8000001055b7:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001055bb:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff8000001055bf:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001055c3:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001055c5:	89 c0                	mov    eax,eax
ffff8000001055c7:	48 01 d0             	add    rax,rdx
ffff8000001055ca:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff8000001055ce:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff8000001055d0:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff8000001055d3:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff8000001055d7:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff8000001055d9:	eb 14                	jmp    ffff8000001055ef <vsprintf+0x319>
ffff8000001055db:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001055df:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff8000001055e3:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff8000001055e7:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff8000001055eb:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff8000001055ef:	8b 08                	mov    ecx,DWORD PTR [rax]
ffff8000001055f1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff8000001055f5:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff8000001055f9:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff8000001055fd:	89 ca                	mov    edx,ecx
ffff8000001055ff:	88 10                	mov    BYTE PTR [rax],dl
ffff800000105601:	eb 0f                	jmp    ffff800000105612 <vsprintf+0x33c>
ffff800000105603:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105607:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff80000010560b:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff80000010560f:	c6 00 20             	mov    BYTE PTR [rax],0x20
ffff800000105612:	83 6d e0 01          	sub    DWORD PTR [rbp-0x20],0x1
ffff800000105616:	83 7d e0 00          	cmp    DWORD PTR [rbp-0x20],0x0
ffff80000010561a:	7f e7                	jg     ffff800000105603 <vsprintf+0x32d>
ffff80000010561c:	e9 df 05 00 00       	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff800000105621:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105625:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105627:	83 f8 2f             	cmp    eax,0x2f
ffff80000010562a:	77 24                	ja     ffff800000105650 <vsprintf+0x37a>
ffff80000010562c:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105630:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff800000105634:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105638:	8b 00                	mov    eax,DWORD PTR [rax]
ffff80000010563a:	89 c0                	mov    eax,eax
ffff80000010563c:	48 01 d0             	add    rax,rdx
ffff80000010563f:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105643:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff800000105645:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff800000105648:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff80000010564c:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff80000010564e:	eb 14                	jmp    ffff800000105664 <vsprintf+0x38e>
ffff800000105650:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105654:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000105658:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff80000010565c:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105660:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff800000105664:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000105667:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff80000010566b:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
ffff800000105670:	75 08                	jne    ffff80000010567a <vsprintf+0x3a4>
ffff800000105672:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000105679:	00 
ffff80000010567a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff80000010567e:	48 89 c7             	mov    rdi,rax
ffff800000105681:	48 b8 a2 84 ff ff ff 	movabs rax,0xffffffffffff84a2
ffff800000105688:	ff ff ff 
ffff80000010568b:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff80000010568f:	ff d0                	call   rax
ffff800000105691:	89 45 d8             	mov    DWORD PTR [rbp-0x28],eax
ffff800000105694:	83 7d dc 00          	cmp    DWORD PTR [rbp-0x24],0x0
ffff800000105698:	79 08                	jns    ffff8000001056a2 <vsprintf+0x3cc>
ffff80000010569a:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
ffff80000010569d:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
ffff8000001056a0:	eb 0e                	jmp    ffff8000001056b0 <vsprintf+0x3da>
ffff8000001056a2:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
ffff8000001056a5:	3b 45 dc             	cmp    eax,DWORD PTR [rbp-0x24]
ffff8000001056a8:	7e 06                	jle    ffff8000001056b0 <vsprintf+0x3da>
ffff8000001056aa:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
ffff8000001056ad:	89 45 d8             	mov    DWORD PTR [rbp-0x28],eax
ffff8000001056b0:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
ffff8000001056b3:	83 e0 10             	and    eax,0x10
ffff8000001056b6:	85 c0                	test   eax,eax
ffff8000001056b8:	75 1f                	jne    ffff8000001056d9 <vsprintf+0x403>
ffff8000001056ba:	eb 0f                	jmp    ffff8000001056cb <vsprintf+0x3f5>
ffff8000001056bc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff8000001056c0:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff8000001056c4:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff8000001056c8:	c6 00 20             	mov    BYTE PTR [rax],0x20
ffff8000001056cb:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
ffff8000001056ce:	8d 50 ff             	lea    edx,[rax-0x1]
ffff8000001056d1:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
ffff8000001056d4:	39 45 d8             	cmp    DWORD PTR [rbp-0x28],eax
ffff8000001056d7:	7c e3                	jl     ffff8000001056bc <vsprintf+0x3e6>
ffff8000001056d9:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [rbp-0x2c],0x0
ffff8000001056e0:	eb 21                	jmp    ffff800000105703 <vsprintf+0x42d>
ffff8000001056e2:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
ffff8000001056e6:	48 8d 42 01          	lea    rax,[rdx+0x1]
ffff8000001056ea:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff8000001056ee:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff8000001056f2:	48 8d 48 01          	lea    rcx,[rax+0x1]
ffff8000001056f6:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
ffff8000001056fa:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
ffff8000001056fd:	88 10                	mov    BYTE PTR [rax],dl
ffff8000001056ff:	83 45 d4 01          	add    DWORD PTR [rbp-0x2c],0x1
ffff800000105703:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
ffff800000105706:	3b 45 d8             	cmp    eax,DWORD PTR [rbp-0x28]
ffff800000105709:	7c d7                	jl     ffff8000001056e2 <vsprintf+0x40c>
ffff80000010570b:	eb 0f                	jmp    ffff80000010571c <vsprintf+0x446>
ffff80000010570d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105711:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff800000105715:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff800000105719:	c6 00 20             	mov    BYTE PTR [rax],0x20
ffff80000010571c:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
ffff80000010571f:	8d 50 ff             	lea    edx,[rax-0x1]
ffff800000105722:	89 55 e0             	mov    DWORD PTR [rbp-0x20],edx
ffff800000105725:	39 45 d8             	cmp    DWORD PTR [rbp-0x28],eax
ffff800000105728:	7c e3                	jl     ffff80000010570d <vsprintf+0x437>
ffff80000010572a:	e9 d1 04 00 00       	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff80000010572f:	83 7d d0 6c          	cmp    DWORD PTR [rbp-0x30],0x6c
ffff800000105733:	0f 85 82 00 00 00    	jne    ffff8000001057bb <vsprintf+0x4e5>
ffff800000105739:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff80000010573d:	8b 00                	mov    eax,DWORD PTR [rax]
ffff80000010573f:	83 f8 2f             	cmp    eax,0x2f
ffff800000105742:	77 24                	ja     ffff800000105768 <vsprintf+0x492>
ffff800000105744:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105748:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff80000010574c:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105750:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105752:	89 c0                	mov    eax,eax
ffff800000105754:	48 01 d0             	add    rax,rdx
ffff800000105757:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff80000010575b:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff80000010575d:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff800000105760:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105764:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff800000105766:	eb 14                	jmp    ffff80000010577c <vsprintf+0x4a6>
ffff800000105768:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff80000010576c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000105770:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff800000105774:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105778:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff80000010577c:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff80000010577f:	48 89 c7             	mov    rdi,rax
ffff800000105782:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
ffff800000105785:	8b 4d dc             	mov    ecx,DWORD PTR [rbp-0x24]
ffff800000105788:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
ffff80000010578b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff80000010578f:	41 89 f1             	mov    r9d,esi
ffff800000105792:	41 89 c8             	mov    r8d,ecx
ffff800000105795:	89 d1                	mov    ecx,edx
ffff800000105797:	ba 08 00 00 00       	mov    edx,0x8
ffff80000010579c:	48 89 fe             	mov    rsi,rdi
ffff80000010579f:	48 89 c7             	mov    rdi,rax
ffff8000001057a2:	48 b8 cc 88 ff ff ff 	movabs rax,0xffffffffffff88cc
ffff8000001057a9:	ff ff ff 
ffff8000001057ac:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001057b0:	ff d0                	call   rax
ffff8000001057b2:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
ffff8000001057b6:	e9 45 04 00 00       	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff8000001057bb:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001057bf:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001057c1:	83 f8 2f             	cmp    eax,0x2f
ffff8000001057c4:	77 24                	ja     ffff8000001057ea <vsprintf+0x514>
ffff8000001057c6:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001057ca:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff8000001057ce:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001057d2:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001057d4:	89 c0                	mov    eax,eax
ffff8000001057d6:	48 01 d0             	add    rax,rdx
ffff8000001057d9:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff8000001057dd:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff8000001057df:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff8000001057e2:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff8000001057e6:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff8000001057e8:	eb 14                	jmp    ffff8000001057fe <vsprintf+0x528>
ffff8000001057ea:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001057ee:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff8000001057f2:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff8000001057f6:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff8000001057fa:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff8000001057fe:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105800:	89 c7                	mov    edi,eax
ffff800000105802:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
ffff800000105805:	8b 4d dc             	mov    ecx,DWORD PTR [rbp-0x24]
ffff800000105808:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
ffff80000010580b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff80000010580f:	41 89 f1             	mov    r9d,esi
ffff800000105812:	41 89 c8             	mov    r8d,ecx
ffff800000105815:	89 d1                	mov    ecx,edx
ffff800000105817:	ba 08 00 00 00       	mov    edx,0x8
ffff80000010581c:	48 89 fe             	mov    rsi,rdi
ffff80000010581f:	48 89 c7             	mov    rdi,rax
ffff800000105822:	48 b8 cc 88 ff ff ff 	movabs rax,0xffffffffffff88cc
ffff800000105829:	ff ff ff 
ffff80000010582c:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000105830:	ff d0                	call   rax
ffff800000105832:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
ffff800000105836:	e9 c5 03 00 00       	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff80000010583b:	83 7d e0 ff          	cmp    DWORD PTR [rbp-0x20],0xffffffff
ffff80000010583f:	75 0b                	jne    ffff80000010584c <vsprintf+0x576>
ffff800000105841:	c7 45 e0 10 00 00 00 	mov    DWORD PTR [rbp-0x20],0x10
ffff800000105848:	83 4d e4 01          	or     DWORD PTR [rbp-0x1c],0x1
ffff80000010584c:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105850:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105852:	83 f8 2f             	cmp    eax,0x2f
ffff800000105855:	77 24                	ja     ffff80000010587b <vsprintf+0x5a5>
ffff800000105857:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff80000010585b:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff80000010585f:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105863:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105865:	89 c0                	mov    eax,eax
ffff800000105867:	48 01 d0             	add    rax,rdx
ffff80000010586a:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff80000010586e:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff800000105870:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff800000105873:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105877:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff800000105879:	eb 14                	jmp    ffff80000010588f <vsprintf+0x5b9>
ffff80000010587b:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff80000010587f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000105883:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff800000105887:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff80000010588b:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff80000010588f:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000105892:	48 89 c7             	mov    rdi,rax
ffff800000105895:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
ffff800000105898:	8b 4d dc             	mov    ecx,DWORD PTR [rbp-0x24]
ffff80000010589b:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
ffff80000010589e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff8000001058a2:	41 89 f1             	mov    r9d,esi
ffff8000001058a5:	41 89 c8             	mov    r8d,ecx
ffff8000001058a8:	89 d1                	mov    ecx,edx
ffff8000001058aa:	ba 10 00 00 00       	mov    edx,0x10
ffff8000001058af:	48 89 fe             	mov    rsi,rdi
ffff8000001058b2:	48 89 c7             	mov    rdi,rax
ffff8000001058b5:	48 b8 cc 88 ff ff ff 	movabs rax,0xffffffffffff88cc
ffff8000001058bc:	ff ff ff 
ffff8000001058bf:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001058c3:	ff d0                	call   rax
ffff8000001058c5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
ffff8000001058c9:	e9 32 03 00 00       	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff8000001058ce:	83 4d e4 40          	or     DWORD PTR [rbp-0x1c],0x40
ffff8000001058d2:	83 7d d0 6c          	cmp    DWORD PTR [rbp-0x30],0x6c
ffff8000001058d6:	0f 85 82 00 00 00    	jne    ffff80000010595e <vsprintf+0x688>
ffff8000001058dc:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001058e0:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001058e2:	83 f8 2f             	cmp    eax,0x2f
ffff8000001058e5:	77 24                	ja     ffff80000010590b <vsprintf+0x635>
ffff8000001058e7:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001058eb:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff8000001058ef:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001058f3:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001058f5:	89 c0                	mov    eax,eax
ffff8000001058f7:	48 01 d0             	add    rax,rdx
ffff8000001058fa:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff8000001058fe:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff800000105900:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff800000105903:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105907:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff800000105909:	eb 14                	jmp    ffff80000010591f <vsprintf+0x649>
ffff80000010590b:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff80000010590f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000105913:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff800000105917:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff80000010591b:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff80000010591f:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000105922:	48 89 c7             	mov    rdi,rax
ffff800000105925:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
ffff800000105928:	8b 4d dc             	mov    ecx,DWORD PTR [rbp-0x24]
ffff80000010592b:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
ffff80000010592e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105932:	41 89 f1             	mov    r9d,esi
ffff800000105935:	41 89 c8             	mov    r8d,ecx
ffff800000105938:	89 d1                	mov    ecx,edx
ffff80000010593a:	ba 10 00 00 00       	mov    edx,0x10
ffff80000010593f:	48 89 fe             	mov    rsi,rdi
ffff800000105942:	48 89 c7             	mov    rdi,rax
ffff800000105945:	48 b8 cc 88 ff ff ff 	movabs rax,0xffffffffffff88cc
ffff80000010594c:	ff ff ff 
ffff80000010594f:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000105953:	ff d0                	call   rax
ffff800000105955:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
ffff800000105959:	e9 a2 02 00 00       	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff80000010595e:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105962:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105964:	83 f8 2f             	cmp    eax,0x2f
ffff800000105967:	77 24                	ja     ffff80000010598d <vsprintf+0x6b7>
ffff800000105969:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff80000010596d:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff800000105971:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105975:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105977:	89 c0                	mov    eax,eax
ffff800000105979:	48 01 d0             	add    rax,rdx
ffff80000010597c:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105980:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff800000105982:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff800000105985:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105989:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff80000010598b:	eb 14                	jmp    ffff8000001059a1 <vsprintf+0x6cb>
ffff80000010598d:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105991:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000105995:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff800000105999:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff80000010599d:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff8000001059a1:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001059a3:	89 c7                	mov    edi,eax
ffff8000001059a5:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
ffff8000001059a8:	8b 4d dc             	mov    ecx,DWORD PTR [rbp-0x24]
ffff8000001059ab:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
ffff8000001059ae:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff8000001059b2:	41 89 f1             	mov    r9d,esi
ffff8000001059b5:	41 89 c8             	mov    r8d,ecx
ffff8000001059b8:	89 d1                	mov    ecx,edx
ffff8000001059ba:	ba 10 00 00 00       	mov    edx,0x10
ffff8000001059bf:	48 89 fe             	mov    rsi,rdi
ffff8000001059c2:	48 89 c7             	mov    rdi,rax
ffff8000001059c5:	48 b8 cc 88 ff ff ff 	movabs rax,0xffffffffffff88cc
ffff8000001059cc:	ff ff ff 
ffff8000001059cf:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001059d3:	ff d0                	call   rax
ffff8000001059d5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
ffff8000001059d9:	e9 22 02 00 00       	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff8000001059de:	83 4d e4 02          	or     DWORD PTR [rbp-0x1c],0x2
ffff8000001059e2:	83 7d d0 6c          	cmp    DWORD PTR [rbp-0x30],0x6c
ffff8000001059e6:	0f 85 82 00 00 00    	jne    ffff800000105a6e <vsprintf+0x798>
ffff8000001059ec:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001059f0:	8b 00                	mov    eax,DWORD PTR [rax]
ffff8000001059f2:	83 f8 2f             	cmp    eax,0x2f
ffff8000001059f5:	77 24                	ja     ffff800000105a1b <vsprintf+0x745>
ffff8000001059f7:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff8000001059fb:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff8000001059ff:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105a03:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105a05:	89 c0                	mov    eax,eax
ffff800000105a07:	48 01 d0             	add    rax,rdx
ffff800000105a0a:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105a0e:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff800000105a10:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff800000105a13:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105a17:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff800000105a19:	eb 14                	jmp    ffff800000105a2f <vsprintf+0x759>
ffff800000105a1b:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105a1f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000105a23:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff800000105a27:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105a2b:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff800000105a2f:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000105a32:	48 89 c7             	mov    rdi,rax
ffff800000105a35:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
ffff800000105a38:	8b 4d dc             	mov    ecx,DWORD PTR [rbp-0x24]
ffff800000105a3b:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
ffff800000105a3e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105a42:	41 89 f1             	mov    r9d,esi
ffff800000105a45:	41 89 c8             	mov    r8d,ecx
ffff800000105a48:	89 d1                	mov    ecx,edx
ffff800000105a4a:	ba 0a 00 00 00       	mov    edx,0xa
ffff800000105a4f:	48 89 fe             	mov    rsi,rdi
ffff800000105a52:	48 89 c7             	mov    rdi,rax
ffff800000105a55:	48 b8 cc 88 ff ff ff 	movabs rax,0xffffffffffff88cc
ffff800000105a5c:	ff ff ff 
ffff800000105a5f:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000105a63:	ff d0                	call   rax
ffff800000105a65:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
ffff800000105a69:	e9 92 01 00 00       	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff800000105a6e:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105a72:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105a74:	83 f8 2f             	cmp    eax,0x2f
ffff800000105a77:	77 24                	ja     ffff800000105a9d <vsprintf+0x7c7>
ffff800000105a79:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105a7d:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff800000105a81:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105a85:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105a87:	89 c0                	mov    eax,eax
ffff800000105a89:	48 01 d0             	add    rax,rdx
ffff800000105a8c:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105a90:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff800000105a92:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff800000105a95:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105a99:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff800000105a9b:	eb 14                	jmp    ffff800000105ab1 <vsprintf+0x7db>
ffff800000105a9d:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105aa1:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000105aa5:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff800000105aa9:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105aad:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff800000105ab1:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105ab3:	89 c7                	mov    edi,eax
ffff800000105ab5:	8b 75 e4             	mov    esi,DWORD PTR [rbp-0x1c]
ffff800000105ab8:	8b 4d dc             	mov    ecx,DWORD PTR [rbp-0x24]
ffff800000105abb:	8b 55 e0             	mov    edx,DWORD PTR [rbp-0x20]
ffff800000105abe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105ac2:	41 89 f1             	mov    r9d,esi
ffff800000105ac5:	41 89 c8             	mov    r8d,ecx
ffff800000105ac8:	89 d1                	mov    ecx,edx
ffff800000105aca:	ba 0a 00 00 00       	mov    edx,0xa
ffff800000105acf:	48 89 fe             	mov    rsi,rdi
ffff800000105ad2:	48 89 c7             	mov    rdi,rax
ffff800000105ad5:	48 b8 cc 88 ff ff ff 	movabs rax,0xffffffffffff88cc
ffff800000105adc:	ff ff ff 
ffff800000105adf:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000105ae3:	ff d0                	call   rax
ffff800000105ae5:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
ffff800000105ae9:	e9 12 01 00 00       	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff800000105aee:	83 7d d0 6c          	cmp    DWORD PTR [rbp-0x30],0x6c
ffff800000105af2:	75 61                	jne    ffff800000105b55 <vsprintf+0x87f>
ffff800000105af4:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105af8:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105afa:	83 f8 2f             	cmp    eax,0x2f
ffff800000105afd:	77 24                	ja     ffff800000105b23 <vsprintf+0x84d>
ffff800000105aff:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105b03:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff800000105b07:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105b0b:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105b0d:	89 c0                	mov    eax,eax
ffff800000105b0f:	48 01 d0             	add    rax,rdx
ffff800000105b12:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105b16:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff800000105b18:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff800000105b1b:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105b1f:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff800000105b21:	eb 14                	jmp    ffff800000105b37 <vsprintf+0x861>
ffff800000105b23:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105b27:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000105b2b:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff800000105b2f:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105b33:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff800000105b37:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000105b3a:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
ffff800000105b3e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105b42:	48 2b 45 b0          	sub    rax,QWORD PTR [rbp-0x50]
ffff800000105b46:	48 89 c2             	mov    rdx,rax
ffff800000105b49:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
ffff800000105b4d:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff800000105b50:	e9 ab 00 00 00       	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff800000105b55:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105b59:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105b5b:	83 f8 2f             	cmp    eax,0x2f
ffff800000105b5e:	77 24                	ja     ffff800000105b84 <vsprintf+0x8ae>
ffff800000105b60:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105b64:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
ffff800000105b68:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105b6c:	8b 00                	mov    eax,DWORD PTR [rax]
ffff800000105b6e:	89 c0                	mov    eax,eax
ffff800000105b70:	48 01 d0             	add    rax,rdx
ffff800000105b73:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105b77:	8b 12                	mov    edx,DWORD PTR [rdx]
ffff800000105b79:	8d 4a 08             	lea    ecx,[rdx+0x8]
ffff800000105b7c:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105b80:	89 0a                	mov    DWORD PTR [rdx],ecx
ffff800000105b82:	eb 14                	jmp    ffff800000105b98 <vsprintf+0x8c2>
ffff800000105b84:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
ffff800000105b88:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000105b8c:	48 8d 48 08          	lea    rcx,[rax+0x8]
ffff800000105b90:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
ffff800000105b94:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
ffff800000105b98:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000105b9b:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
ffff800000105b9f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105ba3:	48 2b 45 b0          	sub    rax,QWORD PTR [rbp-0x50]
ffff800000105ba7:	89 c2                	mov    edx,eax
ffff800000105ba9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
ffff800000105bad:	89 10                	mov    DWORD PTR [rax],edx
ffff800000105baf:	eb 4f                	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff800000105bb1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105bb5:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff800000105bb9:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff800000105bbd:	c6 00 25             	mov    BYTE PTR [rax],0x25
ffff800000105bc0:	eb 3e                	jmp    ffff800000105c00 <vsprintf+0x92a>
ffff800000105bc2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105bc6:	48 8d 50 01          	lea    rdx,[rax+0x1]
ffff800000105bca:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff800000105bce:	c6 00 25             	mov    BYTE PTR [rax],0x25
ffff800000105bd1:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105bd5:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105bd8:	84 c0                	test   al,al
ffff800000105bda:	74 17                	je     ffff800000105bf3 <vsprintf+0x91d>
ffff800000105bdc:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
ffff800000105be0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105be4:	48 8d 48 01          	lea    rcx,[rax+0x1]
ffff800000105be8:	48 89 4d f0          	mov    QWORD PTR [rbp-0x10],rcx
ffff800000105bec:	0f b6 12             	movzx  edx,BYTE PTR [rdx]
ffff800000105bef:	88 10                	mov    BYTE PTR [rax],dl
ffff800000105bf1:	eb 0c                	jmp    ffff800000105bff <vsprintf+0x929>
ffff800000105bf3:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105bf7:	48 83 e8 01          	sub    rax,0x1
ffff800000105bfb:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
ffff800000105bff:	90                   	nop
ffff800000105c00:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105c04:	48 83 c0 01          	add    rax,0x1
ffff800000105c08:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
ffff800000105c0c:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
ffff800000105c10:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105c13:	84 c0                	test   al,al
ffff800000105c15:	0f 85 f9 f6 ff ff    	jne    ffff800000105314 <vsprintf+0x3e>
ffff800000105c1b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105c1f:	c6 00 00             	mov    BYTE PTR [rax],0x0
ffff800000105c22:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000105c26:	48 2b 45 b0          	sub    rax,QWORD PTR [rbp-0x50]
ffff800000105c2a:	48 83 c4 58          	add    rsp,0x58
ffff800000105c2e:	5b                   	pop    rbx
ffff800000105c2f:	5d                   	pop    rbp
ffff800000105c30:	c3                   	ret    

ffff800000105c31 <color_printk>:
ffff800000105c31:	f3 0f 1e fa          	endbr64 
ffff800000105c35:	55                   	push   rbp
ffff800000105c36:	48 89 e5             	mov    rbp,rsp
ffff800000105c39:	53                   	push   rbx
ffff800000105c3a:	48 81 ec f8 00 00 00 	sub    rsp,0xf8
ffff800000105c41:	f3 0f 1e fa          	endbr64 
ffff800000105c45:	48 8d 1d f5 ff ff ff 	lea    rbx,[rip+0xfffffffffffffff5]        # ffff800000105c41 <color_printk+0x10>
ffff800000105c4c:	49 bb 2f 6b 00 00 00 	movabs r11,0x6b2f
ffff800000105c53:	00 00 00 
ffff800000105c56:	4c 01 db             	add    rbx,r11
ffff800000105c59:	89 bd 0c ff ff ff    	mov    DWORD PTR [rbp-0xf4],edi
ffff800000105c5f:	89 b5 08 ff ff ff    	mov    DWORD PTR [rbp-0xf8],esi
ffff800000105c65:	48 89 95 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],rdx
ffff800000105c6c:	48 89 8d 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rcx
ffff800000105c73:	4c 89 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],r8
ffff800000105c7a:	4c 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],r9
ffff800000105c81:	84 c0                	test   al,al
ffff800000105c83:	74 23                	je     ffff800000105ca8 <color_printk+0x77>
ffff800000105c85:	0f 29 85 70 ff ff ff 	movaps XMMWORD PTR [rbp-0x90],xmm0
ffff800000105c8c:	0f 29 4d 80          	movaps XMMWORD PTR [rbp-0x80],xmm1
ffff800000105c90:	0f 29 55 90          	movaps XMMWORD PTR [rbp-0x70],xmm2
ffff800000105c94:	0f 29 5d a0          	movaps XMMWORD PTR [rbp-0x60],xmm3
ffff800000105c98:	0f 29 65 b0          	movaps XMMWORD PTR [rbp-0x50],xmm4
ffff800000105c9c:	0f 29 6d c0          	movaps XMMWORD PTR [rbp-0x40],xmm5
ffff800000105ca0:	0f 29 75 d0          	movaps XMMWORD PTR [rbp-0x30],xmm6
ffff800000105ca4:	0f 29 7d e0          	movaps XMMWORD PTR [rbp-0x20],xmm7
ffff800000105ca8:	c7 85 34 ff ff ff 00 	mov    DWORD PTR [rbp-0xcc],0x0
ffff800000105caf:	00 00 00 
ffff800000105cb2:	c7 85 3c ff ff ff 00 	mov    DWORD PTR [rbp-0xc4],0x0
ffff800000105cb9:	00 00 00 
ffff800000105cbc:	c7 85 38 ff ff ff 00 	mov    DWORD PTR [rbp-0xc8],0x0
ffff800000105cc3:	00 00 00 
ffff800000105cc6:	c7 85 18 ff ff ff 18 	mov    DWORD PTR [rbp-0xe8],0x18
ffff800000105ccd:	00 00 00 
ffff800000105cd0:	c7 85 1c ff ff ff 30 	mov    DWORD PTR [rbp-0xe4],0x30
ffff800000105cd7:	00 00 00 
ffff800000105cda:	48 8d 45 10          	lea    rax,[rbp+0x10]
ffff800000105cde:	48 89 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],rax
ffff800000105ce5:	48 8d 85 40 ff ff ff 	lea    rax,[rbp-0xc0]
ffff800000105cec:	48 89 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rax
ffff800000105cf3:	48 8d 95 18 ff ff ff 	lea    rdx,[rbp-0xe8]
ffff800000105cfa:	48 8b 85 00 ff ff ff 	mov    rax,QWORD PTR [rbp-0x100]
ffff800000105d01:	48 89 c6             	mov    rsi,rax
ffff800000105d04:	48 b8 90 38 00 00 00 	movabs rax,0x3890
ffff800000105d0b:	00 00 00 
ffff800000105d0e:	48 8d 3c 03          	lea    rdi,[rbx+rax*1]
ffff800000105d12:	48 b8 66 8b ff ff ff 	movabs rax,0xffffffffffff8b66
ffff800000105d19:	ff ff ff 
ffff800000105d1c:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000105d20:	ff d0                	call   rax
ffff800000105d22:	89 85 34 ff ff ff    	mov    DWORD PTR [rbp-0xcc],eax
ffff800000105d28:	c7 85 3c ff ff ff 00 	mov    DWORD PTR [rbp-0xc4],0x0
ffff800000105d2f:	00 00 00 
ffff800000105d32:	e9 77 04 00 00       	jmp    ffff8000001061ae <color_printk+0x57d>
ffff800000105d37:	83 bd 38 ff ff ff 00 	cmp    DWORD PTR [rbp-0xc8],0x0
ffff800000105d3e:	7e 0c                	jle    ffff800000105d4c <color_printk+0x11b>
ffff800000105d40:	83 ad 3c ff ff ff 01 	sub    DWORD PTR [rbp-0xc4],0x1
ffff800000105d47:	e9 43 02 00 00       	jmp    ffff800000105f8f <color_printk+0x35e>
ffff800000105d4c:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [rbp-0xc4]
ffff800000105d52:	48 63 d0             	movsxd rdx,eax
ffff800000105d55:	48 b8 90 38 00 00 00 	movabs rax,0x3890
ffff800000105d5c:	00 00 00 
ffff800000105d5f:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000105d63:	48 01 d0             	add    rax,rdx
ffff800000105d66:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105d69:	3c 0a                	cmp    al,0xa
ffff800000105d6b:	75 36                	jne    ffff800000105da3 <color_printk+0x172>
ffff800000105d6d:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105d74:	00 00 00 
ffff800000105d77:	8b 44 03 0c          	mov    eax,DWORD PTR [rbx+rax*1+0xc]
ffff800000105d7b:	8d 50 01             	lea    edx,[rax+0x1]
ffff800000105d7e:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105d85:	00 00 00 
ffff800000105d88:	89 54 03 0c          	mov    DWORD PTR [rbx+rax*1+0xc],edx
ffff800000105d8c:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105d93:	00 00 00 
ffff800000105d96:	c7 44 03 08 00 00 00 	mov    DWORD PTR [rbx+rax*1+0x8],0x0
ffff800000105d9d:	00 
ffff800000105d9e:	e9 60 03 00 00       	jmp    ffff800000106103 <color_printk+0x4d2>
ffff800000105da3:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [rbp-0xc4]
ffff800000105da9:	48 63 d0             	movsxd rdx,eax
ffff800000105dac:	48 b8 90 38 00 00 00 	movabs rax,0x3890
ffff800000105db3:	00 00 00 
ffff800000105db6:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000105dba:	48 01 d0             	add    rax,rdx
ffff800000105dbd:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105dc0:	3c 08                	cmp    al,0x8
ffff800000105dc2:	0f 85 74 01 00 00    	jne    ffff800000105f3c <color_printk+0x30b>
ffff800000105dc8:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105dcf:	00 00 00 
ffff800000105dd2:	8b 44 03 08          	mov    eax,DWORD PTR [rbx+rax*1+0x8]
ffff800000105dd6:	8d 50 ff             	lea    edx,[rax-0x1]
ffff800000105dd9:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105de0:	00 00 00 
ffff800000105de3:	89 54 03 08          	mov    DWORD PTR [rbx+rax*1+0x8],edx
ffff800000105de7:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105dee:	00 00 00 
ffff800000105df1:	8b 44 03 08          	mov    eax,DWORD PTR [rbx+rax*1+0x8]
ffff800000105df5:	85 c0                	test   eax,eax
ffff800000105df7:	0f 89 b2 00 00 00    	jns    ffff800000105eaf <color_printk+0x27e>
ffff800000105dfd:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105e04:	00 00 00 
ffff800000105e07:	8b 04 03             	mov    eax,DWORD PTR [rbx+rax*1]
ffff800000105e0a:	48 ba 90 68 00 00 00 	movabs rdx,0x6890
ffff800000105e11:	00 00 00 
ffff800000105e14:	8b 74 13 10          	mov    esi,DWORD PTR [rbx+rdx*1+0x10]
ffff800000105e18:	99                   	cdq    
ffff800000105e19:	f7 fe                	idiv   esi
ffff800000105e1b:	8d 50 ff             	lea    edx,[rax-0x1]
ffff800000105e1e:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105e25:	00 00 00 
ffff800000105e28:	8b 44 03 10          	mov    eax,DWORD PTR [rbx+rax*1+0x10]
ffff800000105e2c:	0f af c2             	imul   eax,edx
ffff800000105e2f:	48 ba 90 68 00 00 00 	movabs rdx,0x6890
ffff800000105e36:	00 00 00 
ffff800000105e39:	89 44 13 08          	mov    DWORD PTR [rbx+rdx*1+0x8],eax
ffff800000105e3d:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105e44:	00 00 00 
ffff800000105e47:	8b 44 03 0c          	mov    eax,DWORD PTR [rbx+rax*1+0xc]
ffff800000105e4b:	8d 50 ff             	lea    edx,[rax-0x1]
ffff800000105e4e:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105e55:	00 00 00 
ffff800000105e58:	89 54 03 0c          	mov    DWORD PTR [rbx+rax*1+0xc],edx
ffff800000105e5c:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105e63:	00 00 00 
ffff800000105e66:	8b 44 03 0c          	mov    eax,DWORD PTR [rbx+rax*1+0xc]
ffff800000105e6a:	85 c0                	test   eax,eax
ffff800000105e6c:	79 41                	jns    ffff800000105eaf <color_printk+0x27e>
ffff800000105e6e:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105e75:	00 00 00 
ffff800000105e78:	8b 44 03 04          	mov    eax,DWORD PTR [rbx+rax*1+0x4]
ffff800000105e7c:	48 ba 90 68 00 00 00 	movabs rdx,0x6890
ffff800000105e83:	00 00 00 
ffff800000105e86:	8b 7c 13 14          	mov    edi,DWORD PTR [rbx+rdx*1+0x14]
ffff800000105e8a:	99                   	cdq    
ffff800000105e8b:	f7 ff                	idiv   edi
ffff800000105e8d:	8d 50 ff             	lea    edx,[rax-0x1]
ffff800000105e90:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105e97:	00 00 00 
ffff800000105e9a:	8b 44 03 14          	mov    eax,DWORD PTR [rbx+rax*1+0x14]
ffff800000105e9e:	0f af c2             	imul   eax,edx
ffff800000105ea1:	48 ba 90 68 00 00 00 	movabs rdx,0x6890
ffff800000105ea8:	00 00 00 
ffff800000105eab:	89 44 13 0c          	mov    DWORD PTR [rbx+rdx*1+0xc],eax
ffff800000105eaf:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105eb6:	00 00 00 
ffff800000105eb9:	8b 54 03 0c          	mov    edx,DWORD PTR [rbx+rax*1+0xc]
ffff800000105ebd:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105ec4:	00 00 00 
ffff800000105ec7:	8b 44 03 14          	mov    eax,DWORD PTR [rbx+rax*1+0x14]
ffff800000105ecb:	89 d1                	mov    ecx,edx
ffff800000105ecd:	0f af c8             	imul   ecx,eax
ffff800000105ed0:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105ed7:	00 00 00 
ffff800000105eda:	8b 54 03 08          	mov    edx,DWORD PTR [rbx+rax*1+0x8]
ffff800000105ede:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105ee5:	00 00 00 
ffff800000105ee8:	8b 44 03 10          	mov    eax,DWORD PTR [rbx+rax*1+0x10]
ffff800000105eec:	0f af d0             	imul   edx,eax
ffff800000105eef:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105ef6:	00 00 00 
ffff800000105ef9:	8b 34 03             	mov    esi,DWORD PTR [rbx+rax*1]
ffff800000105efc:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105f03:	00 00 00 
ffff800000105f06:	48 8b 44 03 18       	mov    rax,QWORD PTR [rbx+rax*1+0x18]
ffff800000105f0b:	44 8b 85 08 ff ff ff 	mov    r8d,DWORD PTR [rbp-0xf8]
ffff800000105f12:	8b bd 0c ff ff ff    	mov    edi,DWORD PTR [rbp-0xf4]
ffff800000105f18:	6a 20                	push   0x20
ffff800000105f1a:	45 89 c1             	mov    r9d,r8d
ffff800000105f1d:	41 89 f8             	mov    r8d,edi
ffff800000105f20:	48 89 c7             	mov    rdi,rax
ffff800000105f23:	48 b8 40 87 ff ff ff 	movabs rax,0xffffffffffff8740
ffff800000105f2a:	ff ff ff 
ffff800000105f2d:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000105f31:	ff d0                	call   rax
ffff800000105f33:	48 83 c4 08          	add    rsp,0x8
ffff800000105f37:	e9 c7 01 00 00       	jmp    ffff800000106103 <color_printk+0x4d2>
ffff800000105f3c:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [rbp-0xc4]
ffff800000105f42:	48 63 d0             	movsxd rdx,eax
ffff800000105f45:	48 b8 90 38 00 00 00 	movabs rax,0x3890
ffff800000105f4c:	00 00 00 
ffff800000105f4f:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000105f53:	48 01 d0             	add    rax,rdx
ffff800000105f56:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff800000105f59:	3c 09                	cmp    al,0x9
ffff800000105f5b:	0f 85 e1 00 00 00    	jne    ffff800000106042 <color_printk+0x411>
ffff800000105f61:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105f68:	00 00 00 
ffff800000105f6b:	8b 44 03 08          	mov    eax,DWORD PTR [rbx+rax*1+0x8]
ffff800000105f6f:	83 c0 08             	add    eax,0x8
ffff800000105f72:	83 e0 f8             	and    eax,0xfffffff8
ffff800000105f75:	89 c2                	mov    edx,eax
ffff800000105f77:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105f7e:	00 00 00 
ffff800000105f81:	8b 44 03 08          	mov    eax,DWORD PTR [rbx+rax*1+0x8]
ffff800000105f85:	29 c2                	sub    edx,eax
ffff800000105f87:	89 d0                	mov    eax,edx
ffff800000105f89:	89 85 38 ff ff ff    	mov    DWORD PTR [rbp-0xc8],eax
ffff800000105f8f:	83 ad 38 ff ff ff 01 	sub    DWORD PTR [rbp-0xc8],0x1
ffff800000105f96:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105f9d:	00 00 00 
ffff800000105fa0:	8b 54 03 0c          	mov    edx,DWORD PTR [rbx+rax*1+0xc]
ffff800000105fa4:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105fab:	00 00 00 
ffff800000105fae:	8b 44 03 14          	mov    eax,DWORD PTR [rbx+rax*1+0x14]
ffff800000105fb2:	89 d1                	mov    ecx,edx
ffff800000105fb4:	0f af c8             	imul   ecx,eax
ffff800000105fb7:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105fbe:	00 00 00 
ffff800000105fc1:	8b 54 03 08          	mov    edx,DWORD PTR [rbx+rax*1+0x8]
ffff800000105fc5:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105fcc:	00 00 00 
ffff800000105fcf:	8b 44 03 10          	mov    eax,DWORD PTR [rbx+rax*1+0x10]
ffff800000105fd3:	0f af d0             	imul   edx,eax
ffff800000105fd6:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105fdd:	00 00 00 
ffff800000105fe0:	8b 34 03             	mov    esi,DWORD PTR [rbx+rax*1]
ffff800000105fe3:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000105fea:	00 00 00 
ffff800000105fed:	48 8b 44 03 18       	mov    rax,QWORD PTR [rbx+rax*1+0x18]
ffff800000105ff2:	44 8b 85 08 ff ff ff 	mov    r8d,DWORD PTR [rbp-0xf8]
ffff800000105ff9:	8b bd 0c ff ff ff    	mov    edi,DWORD PTR [rbp-0xf4]
ffff800000105fff:	6a 20                	push   0x20
ffff800000106001:	45 89 c1             	mov    r9d,r8d
ffff800000106004:	41 89 f8             	mov    r8d,edi
ffff800000106007:	48 89 c7             	mov    rdi,rax
ffff80000010600a:	48 b8 40 87 ff ff ff 	movabs rax,0xffffffffffff8740
ffff800000106011:	ff ff ff 
ffff800000106014:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000106018:	ff d0                	call   rax
ffff80000010601a:	48 83 c4 08          	add    rsp,0x8
ffff80000010601e:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000106025:	00 00 00 
ffff800000106028:	8b 44 03 08          	mov    eax,DWORD PTR [rbx+rax*1+0x8]
ffff80000010602c:	8d 50 01             	lea    edx,[rax+0x1]
ffff80000010602f:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000106036:	00 00 00 
ffff800000106039:	89 54 03 08          	mov    DWORD PTR [rbx+rax*1+0x8],edx
ffff80000010603d:	e9 c1 00 00 00       	jmp    ffff800000106103 <color_printk+0x4d2>
ffff800000106042:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [rbp-0xc4]
ffff800000106048:	48 63 d0             	movsxd rdx,eax
ffff80000010604b:	48 b8 90 38 00 00 00 	movabs rax,0x3890
ffff800000106052:	00 00 00 
ffff800000106055:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000106059:	48 01 d0             	add    rax,rdx
ffff80000010605c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
ffff80000010605f:	0f b6 f8             	movzx  edi,al
ffff800000106062:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000106069:	00 00 00 
ffff80000010606c:	8b 54 03 0c          	mov    edx,DWORD PTR [rbx+rax*1+0xc]
ffff800000106070:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000106077:	00 00 00 
ffff80000010607a:	8b 44 03 14          	mov    eax,DWORD PTR [rbx+rax*1+0x14]
ffff80000010607e:	89 d1                	mov    ecx,edx
ffff800000106080:	0f af c8             	imul   ecx,eax
ffff800000106083:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff80000010608a:	00 00 00 
ffff80000010608d:	8b 54 03 08          	mov    edx,DWORD PTR [rbx+rax*1+0x8]
ffff800000106091:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000106098:	00 00 00 
ffff80000010609b:	8b 44 03 10          	mov    eax,DWORD PTR [rbx+rax*1+0x10]
ffff80000010609f:	0f af d0             	imul   edx,eax
ffff8000001060a2:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff8000001060a9:	00 00 00 
ffff8000001060ac:	8b 34 03             	mov    esi,DWORD PTR [rbx+rax*1]
ffff8000001060af:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff8000001060b6:	00 00 00 
ffff8000001060b9:	48 8b 44 03 18       	mov    rax,QWORD PTR [rbx+rax*1+0x18]
ffff8000001060be:	44 8b 8d 08 ff ff ff 	mov    r9d,DWORD PTR [rbp-0xf8]
ffff8000001060c5:	44 8b 85 0c ff ff ff 	mov    r8d,DWORD PTR [rbp-0xf4]
ffff8000001060cc:	57                   	push   rdi
ffff8000001060cd:	48 89 c7             	mov    rdi,rax
ffff8000001060d0:	48 b8 40 87 ff ff ff 	movabs rax,0xffffffffffff8740
ffff8000001060d7:	ff ff ff 
ffff8000001060da:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001060de:	ff d0                	call   rax
ffff8000001060e0:	48 83 c4 08          	add    rsp,0x8
ffff8000001060e4:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff8000001060eb:	00 00 00 
ffff8000001060ee:	8b 44 03 08          	mov    eax,DWORD PTR [rbx+rax*1+0x8]
ffff8000001060f2:	8d 50 01             	lea    edx,[rax+0x1]
ffff8000001060f5:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff8000001060fc:	00 00 00 
ffff8000001060ff:	89 54 03 08          	mov    DWORD PTR [rbx+rax*1+0x8],edx
ffff800000106103:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff80000010610a:	00 00 00 
ffff80000010610d:	8b 4c 03 08          	mov    ecx,DWORD PTR [rbx+rax*1+0x8]
ffff800000106111:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000106118:	00 00 00 
ffff80000010611b:	8b 04 03             	mov    eax,DWORD PTR [rbx+rax*1]
ffff80000010611e:	48 ba 90 68 00 00 00 	movabs rdx,0x6890
ffff800000106125:	00 00 00 
ffff800000106128:	8b 74 13 10          	mov    esi,DWORD PTR [rbx+rdx*1+0x10]
ffff80000010612c:	99                   	cdq    
ffff80000010612d:	f7 fe                	idiv   esi
ffff80000010612f:	39 c1                	cmp    ecx,eax
ffff800000106131:	7c 31                	jl     ffff800000106164 <color_printk+0x533>
ffff800000106133:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff80000010613a:	00 00 00 
ffff80000010613d:	8b 44 03 0c          	mov    eax,DWORD PTR [rbx+rax*1+0xc]
ffff800000106141:	8d 50 01             	lea    edx,[rax+0x1]
ffff800000106144:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff80000010614b:	00 00 00 
ffff80000010614e:	89 54 03 0c          	mov    DWORD PTR [rbx+rax*1+0xc],edx
ffff800000106152:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000106159:	00 00 00 
ffff80000010615c:	c7 44 03 08 00 00 00 	mov    DWORD PTR [rbx+rax*1+0x8],0x0
ffff800000106163:	00 
ffff800000106164:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff80000010616b:	00 00 00 
ffff80000010616e:	8b 4c 03 0c          	mov    ecx,DWORD PTR [rbx+rax*1+0xc]
ffff800000106172:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff800000106179:	00 00 00 
ffff80000010617c:	8b 44 03 04          	mov    eax,DWORD PTR [rbx+rax*1+0x4]
ffff800000106180:	48 ba 90 68 00 00 00 	movabs rdx,0x6890
ffff800000106187:	00 00 00 
ffff80000010618a:	8b 7c 13 14          	mov    edi,DWORD PTR [rbx+rdx*1+0x14]
ffff80000010618e:	99                   	cdq    
ffff80000010618f:	f7 ff                	idiv   edi
ffff800000106191:	39 c1                	cmp    ecx,eax
ffff800000106193:	7c 12                	jl     ffff8000001061a7 <color_printk+0x576>
ffff800000106195:	48 b8 90 68 00 00 00 	movabs rax,0x6890
ffff80000010619c:	00 00 00 
ffff80000010619f:	c7 44 03 0c 00 00 00 	mov    DWORD PTR [rbx+rax*1+0xc],0x0
ffff8000001061a6:	00 
ffff8000001061a7:	83 85 3c ff ff ff 01 	add    DWORD PTR [rbp-0xc4],0x1
ffff8000001061ae:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [rbp-0xc4]
ffff8000001061b4:	3b 85 34 ff ff ff    	cmp    eax,DWORD PTR [rbp-0xcc]
ffff8000001061ba:	0f 8c 77 fb ff ff    	jl     ffff800000105d37 <color_printk+0x106>
ffff8000001061c0:	83 bd 38 ff ff ff 00 	cmp    DWORD PTR [rbp-0xc8],0x0
ffff8000001061c7:	0f 85 6a fb ff ff    	jne    ffff800000105d37 <color_printk+0x106>
ffff8000001061cd:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [rbp-0xcc]
ffff8000001061d3:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
ffff8000001061d7:	c9                   	leave  
ffff8000001061d8:	c3                   	ret    
ffff8000001061d9:	f3 0f 1e fa          	endbr64 
ffff8000001061dd:	55                   	push   rbp
ffff8000001061de:	48 89 e5             	mov    rbp,rsp
ffff8000001061e1:	f3 0f 1e fa          	endbr64 
ffff8000001061e5:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001061e1 <color_printk+0x5b0>
ffff8000001061ec:	49 bb 8f 65 00 00 00 	movabs r11,0x658f
ffff8000001061f3:	00 00 00 
ffff8000001061f6:	4c 01 d8             	add    rax,r11
ffff8000001061f9:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
ffff8000001061fc:	89 f1                	mov    ecx,esi
ffff8000001061fe:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff800000106202:	89 ca                	mov    edx,ecx
ffff800000106204:	88 55 e8             	mov    BYTE PTR [rbp-0x18],dl
ffff800000106207:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff80000010620a:	48 89 d1             	mov    rcx,rdx
ffff80000010620d:	48 c1 e1 04          	shl    rcx,0x4
ffff800000106211:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff800000106218:	ff ff ff 
ffff80000010621b:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff80000010621f:	48 8d 34 11          	lea    rsi,[rcx+rdx*1]
ffff800000106223:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff800000106226:	48 c1 e2 04          	shl    rdx,0x4
ffff80000010622a:	48 8d 4a 08          	lea    rcx,[rdx+0x8]
ffff80000010622e:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff800000106235:	ff ff ff 
ffff800000106238:	48 8b 04 10          	mov    rax,QWORD PTR [rax+rdx*1]
ffff80000010623c:	48 8d 3c 01          	lea    rdi,[rcx+rax*1]
ffff800000106240:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
ffff800000106244:	41 b8 00 00 08 00    	mov    r8d,0x80000
ffff80000010624a:	0f b6 4d e8          	movzx  ecx,BYTE PTR [rbp-0x18]
ffff80000010624e:	48 89 c2             	mov    rdx,rax
ffff800000106251:	44 89 c0             	mov    eax,r8d
ffff800000106254:	66 89 d0             	mov    ax,dx
ffff800000106257:	48 83 e1 07          	and    rcx,0x7
ffff80000010625b:	48 81 c1 00 8e 00 00 	add    rcx,0x8e00
ffff800000106262:	48 c1 e1 20          	shl    rcx,0x20
ffff800000106266:	48 01 c8             	add    rax,rcx
ffff800000106269:	48 31 c9             	xor    rcx,rcx
ffff80000010626c:	89 d1                	mov    ecx,edx
ffff80000010626e:	48 c1 e9 10          	shr    rcx,0x10
ffff800000106272:	48 c1 e1 30          	shl    rcx,0x30
ffff800000106276:	48 01 c8             	add    rax,rcx
ffff800000106279:	48 89 06             	mov    QWORD PTR [rsi],rax
ffff80000010627c:	48 c1 ea 20          	shr    rdx,0x20
ffff800000106280:	48 89 17             	mov    QWORD PTR [rdi],rdx
ffff800000106283:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
ffff800000106287:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff80000010628b:	90                   	nop
ffff80000010628c:	5d                   	pop    rbp
ffff80000010628d:	c3                   	ret    
ffff80000010628e:	f3 0f 1e fa          	endbr64 
ffff800000106292:	55                   	push   rbp
ffff800000106293:	48 89 e5             	mov    rbp,rsp
ffff800000106296:	f3 0f 1e fa          	endbr64 
ffff80000010629a:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106296 <color_printk+0x665>
ffff8000001062a1:	49 bb da 64 00 00 00 	movabs r11,0x64da
ffff8000001062a8:	00 00 00 
ffff8000001062ab:	4c 01 d8             	add    rax,r11
ffff8000001062ae:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
ffff8000001062b1:	89 f1                	mov    ecx,esi
ffff8000001062b3:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff8000001062b7:	89 ca                	mov    edx,ecx
ffff8000001062b9:	88 55 e8             	mov    BYTE PTR [rbp-0x18],dl
ffff8000001062bc:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff8000001062bf:	48 89 d1             	mov    rcx,rdx
ffff8000001062c2:	48 c1 e1 04          	shl    rcx,0x4
ffff8000001062c6:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff8000001062cd:	ff ff ff 
ffff8000001062d0:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff8000001062d4:	48 8d 34 11          	lea    rsi,[rcx+rdx*1]
ffff8000001062d8:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff8000001062db:	48 c1 e2 04          	shl    rdx,0x4
ffff8000001062df:	48 8d 4a 08          	lea    rcx,[rdx+0x8]
ffff8000001062e3:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff8000001062ea:	ff ff ff 
ffff8000001062ed:	48 8b 04 10          	mov    rax,QWORD PTR [rax+rdx*1]
ffff8000001062f1:	48 8d 3c 01          	lea    rdi,[rcx+rax*1]
ffff8000001062f5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
ffff8000001062f9:	41 b8 00 00 08 00    	mov    r8d,0x80000
ffff8000001062ff:	0f b6 4d e8          	movzx  ecx,BYTE PTR [rbp-0x18]
ffff800000106303:	48 89 c2             	mov    rdx,rax
ffff800000106306:	44 89 c0             	mov    eax,r8d
ffff800000106309:	66 89 d0             	mov    ax,dx
ffff80000010630c:	48 83 e1 07          	and    rcx,0x7
ffff800000106310:	48 81 c1 00 8f 00 00 	add    rcx,0x8f00
ffff800000106317:	48 c1 e1 20          	shl    rcx,0x20
ffff80000010631b:	48 01 c8             	add    rax,rcx
ffff80000010631e:	48 31 c9             	xor    rcx,rcx
ffff800000106321:	89 d1                	mov    ecx,edx
ffff800000106323:	48 c1 e9 10          	shr    rcx,0x10
ffff800000106327:	48 c1 e1 30          	shl    rcx,0x30
ffff80000010632b:	48 01 c8             	add    rax,rcx
ffff80000010632e:	48 89 06             	mov    QWORD PTR [rsi],rax
ffff800000106331:	48 c1 ea 20          	shr    rdx,0x20
ffff800000106335:	48 89 17             	mov    QWORD PTR [rdi],rdx
ffff800000106338:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
ffff80000010633c:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff800000106340:	90                   	nop
ffff800000106341:	5d                   	pop    rbp
ffff800000106342:	c3                   	ret    
ffff800000106343:	f3 0f 1e fa          	endbr64 
ffff800000106347:	55                   	push   rbp
ffff800000106348:	48 89 e5             	mov    rbp,rsp
ffff80000010634b:	f3 0f 1e fa          	endbr64 
ffff80000010634f:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff80000010634b <color_printk+0x71a>
ffff800000106356:	49 bb 25 64 00 00 00 	movabs r11,0x6425
ffff80000010635d:	00 00 00 
ffff800000106360:	4c 01 d8             	add    rax,r11
ffff800000106363:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
ffff800000106366:	89 f1                	mov    ecx,esi
ffff800000106368:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff80000010636c:	89 ca                	mov    edx,ecx
ffff80000010636e:	88 55 e8             	mov    BYTE PTR [rbp-0x18],dl
ffff800000106371:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff800000106374:	48 89 d1             	mov    rcx,rdx
ffff800000106377:	48 c1 e1 04          	shl    rcx,0x4
ffff80000010637b:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff800000106382:	ff ff ff 
ffff800000106385:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff800000106389:	48 8d 34 11          	lea    rsi,[rcx+rdx*1]
ffff80000010638d:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff800000106390:	48 c1 e2 04          	shl    rdx,0x4
ffff800000106394:	48 8d 4a 08          	lea    rcx,[rdx+0x8]
ffff800000106398:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff80000010639f:	ff ff ff 
ffff8000001063a2:	48 8b 04 10          	mov    rax,QWORD PTR [rax+rdx*1]
ffff8000001063a6:	48 8d 3c 01          	lea    rdi,[rcx+rax*1]
ffff8000001063aa:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
ffff8000001063ae:	41 b8 00 00 08 00    	mov    r8d,0x80000
ffff8000001063b4:	0f b6 4d e8          	movzx  ecx,BYTE PTR [rbp-0x18]
ffff8000001063b8:	48 89 c2             	mov    rdx,rax
ffff8000001063bb:	44 89 c0             	mov    eax,r8d
ffff8000001063be:	66 89 d0             	mov    ax,dx
ffff8000001063c1:	48 83 e1 07          	and    rcx,0x7
ffff8000001063c5:	48 81 c1 00 ef 00 00 	add    rcx,0xef00
ffff8000001063cc:	48 c1 e1 20          	shl    rcx,0x20
ffff8000001063d0:	48 01 c8             	add    rax,rcx
ffff8000001063d3:	48 31 c9             	xor    rcx,rcx
ffff8000001063d6:	89 d1                	mov    ecx,edx
ffff8000001063d8:	48 c1 e9 10          	shr    rcx,0x10
ffff8000001063dc:	48 c1 e1 30          	shl    rcx,0x30
ffff8000001063e0:	48 01 c8             	add    rax,rcx
ffff8000001063e3:	48 89 06             	mov    QWORD PTR [rsi],rax
ffff8000001063e6:	48 c1 ea 20          	shr    rdx,0x20
ffff8000001063ea:	48 89 17             	mov    QWORD PTR [rdi],rdx
ffff8000001063ed:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
ffff8000001063f1:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff8000001063f5:	90                   	nop
ffff8000001063f6:	5d                   	pop    rbp
ffff8000001063f7:	c3                   	ret    
ffff8000001063f8:	f3 0f 1e fa          	endbr64 
ffff8000001063fc:	55                   	push   rbp
ffff8000001063fd:	48 89 e5             	mov    rbp,rsp
ffff800000106400:	f3 0f 1e fa          	endbr64 
ffff800000106404:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106400 <color_printk+0x7cf>
ffff80000010640b:	49 bb 70 63 00 00 00 	movabs r11,0x6370
ffff800000106412:	00 00 00 
ffff800000106415:	4c 01 d8             	add    rax,r11
ffff800000106418:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
ffff80000010641b:	89 f1                	mov    ecx,esi
ffff80000010641d:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff800000106421:	89 ca                	mov    edx,ecx
ffff800000106423:	88 55 e8             	mov    BYTE PTR [rbp-0x18],dl
ffff800000106426:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff800000106429:	48 89 d1             	mov    rcx,rdx
ffff80000010642c:	48 c1 e1 04          	shl    rcx,0x4
ffff800000106430:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff800000106437:	ff ff ff 
ffff80000010643a:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff80000010643e:	48 8d 34 11          	lea    rsi,[rcx+rdx*1]
ffff800000106442:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
ffff800000106445:	48 c1 e2 04          	shl    rdx,0x4
ffff800000106449:	48 8d 4a 08          	lea    rcx,[rdx+0x8]
ffff80000010644d:	48 ba 90 ff ff ff ff 	movabs rdx,0xffffffffffffff90
ffff800000106454:	ff ff ff 
ffff800000106457:	48 8b 04 10          	mov    rax,QWORD PTR [rax+rdx*1]
ffff80000010645b:	48 8d 3c 01          	lea    rdi,[rcx+rax*1]
ffff80000010645f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
ffff800000106463:	41 b8 00 00 08 00    	mov    r8d,0x80000
ffff800000106469:	0f b6 4d e8          	movzx  ecx,BYTE PTR [rbp-0x18]
ffff80000010646d:	48 89 c2             	mov    rdx,rax
ffff800000106470:	44 89 c0             	mov    eax,r8d
ffff800000106473:	66 89 d0             	mov    ax,dx
ffff800000106476:	48 83 e1 07          	and    rcx,0x7
ffff80000010647a:	48 81 c1 00 ee 00 00 	add    rcx,0xee00
ffff800000106481:	48 c1 e1 20          	shl    rcx,0x20
ffff800000106485:	48 01 c8             	add    rax,rcx
ffff800000106488:	48 31 c9             	xor    rcx,rcx
ffff80000010648b:	89 d1                	mov    ecx,edx
ffff80000010648d:	48 c1 e9 10          	shr    rcx,0x10
ffff800000106491:	48 c1 e1 30          	shl    rcx,0x30
ffff800000106495:	48 01 c8             	add    rax,rcx
ffff800000106498:	48 89 06             	mov    QWORD PTR [rsi],rax
ffff80000010649b:	48 c1 ea 20          	shr    rdx,0x20
ffff80000010649f:	48 89 17             	mov    QWORD PTR [rdi],rdx
ffff8000001064a2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
ffff8000001064a6:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
ffff8000001064aa:	90                   	nop
ffff8000001064ab:	5d                   	pop    rbp
ffff8000001064ac:	c3                   	ret    
ffff8000001064ad:	f3 0f 1e fa          	endbr64 
ffff8000001064b1:	55                   	push   rbp
ffff8000001064b2:	48 89 e5             	mov    rbp,rsp
ffff8000001064b5:	f3 0f 1e fa          	endbr64 
ffff8000001064b9:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001064b5 <color_printk+0x884>
ffff8000001064c0:	49 bb bb 62 00 00 00 	movabs r11,0x62bb
ffff8000001064c7:	00 00 00 
ffff8000001064ca:	4c 01 d8             	add    rax,r11
ffff8000001064cd:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff8000001064d1:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff8000001064d5:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
ffff8000001064d9:	48 89 4d e0          	mov    QWORD PTR [rbp-0x20],rcx
ffff8000001064dd:	4c 89 45 d8          	mov    QWORD PTR [rbp-0x28],r8
ffff8000001064e1:	4c 89 4d d0          	mov    QWORD PTR [rbp-0x30],r9
ffff8000001064e5:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff8000001064ec:	ff ff ff 
ffff8000001064ef:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff8000001064f3:	48 8d 52 04          	lea    rdx,[rdx+0x4]
ffff8000001064f7:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
ffff8000001064fb:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff8000001064fe:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff800000106505:	ff ff ff 
ffff800000106508:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff80000010650c:	48 8d 52 0c          	lea    rdx,[rdx+0xc]
ffff800000106510:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
ffff800000106514:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff800000106517:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff80000010651e:	ff ff ff 
ffff800000106521:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff800000106525:	48 8d 52 14          	lea    rdx,[rdx+0x14]
ffff800000106529:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
ffff80000010652d:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff800000106530:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff800000106537:	ff ff ff 
ffff80000010653a:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff80000010653e:	48 8d 52 24          	lea    rdx,[rdx+0x24]
ffff800000106542:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
ffff800000106546:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff800000106549:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff800000106550:	ff ff ff 
ffff800000106553:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff800000106557:	48 8d 52 2c          	lea    rdx,[rdx+0x2c]
ffff80000010655b:	48 8b 4d d8          	mov    rcx,QWORD PTR [rbp-0x28]
ffff80000010655f:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff800000106562:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff800000106569:	ff ff ff 
ffff80000010656c:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff800000106570:	48 8d 52 34          	lea    rdx,[rdx+0x34]
ffff800000106574:	48 8b 4d d0          	mov    rcx,QWORD PTR [rbp-0x30]
ffff800000106578:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff80000010657b:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff800000106582:	ff ff ff 
ffff800000106585:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff800000106589:	48 8d 52 3c          	lea    rdx,[rdx+0x3c]
ffff80000010658d:	48 8b 4d 10          	mov    rcx,QWORD PTR [rbp+0x10]
ffff800000106591:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff800000106594:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff80000010659b:	ff ff ff 
ffff80000010659e:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff8000001065a2:	48 8d 52 44          	lea    rdx,[rdx+0x44]
ffff8000001065a6:	48 8b 4d 18          	mov    rcx,QWORD PTR [rbp+0x18]
ffff8000001065aa:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff8000001065ad:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff8000001065b4:	ff ff ff 
ffff8000001065b7:	48 8b 14 10          	mov    rdx,QWORD PTR [rax+rdx*1]
ffff8000001065bb:	48 8d 52 4c          	lea    rdx,[rdx+0x4c]
ffff8000001065bf:	48 8b 4d 20          	mov    rcx,QWORD PTR [rbp+0x20]
ffff8000001065c3:	48 89 0a             	mov    QWORD PTR [rdx],rcx
ffff8000001065c6:	48 ba a0 ff ff ff ff 	movabs rdx,0xffffffffffffffa0
ffff8000001065cd:	ff ff ff 
ffff8000001065d0:	48 8b 04 10          	mov    rax,QWORD PTR [rax+rdx*1]
ffff8000001065d4:	48 8d 40 54          	lea    rax,[rax+0x54]
ffff8000001065d8:	48 8b 55 28          	mov    rdx,QWORD PTR [rbp+0x28]
ffff8000001065dc:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff8000001065df:	90                   	nop
ffff8000001065e0:	5d                   	pop    rbp
ffff8000001065e1:	c3                   	ret    
ffff8000001065e2:	f3 0f 1e fa          	endbr64 
ffff8000001065e6:	55                   	push   rbp
ffff8000001065e7:	48 89 e5             	mov    rbp,rsp
ffff8000001065ea:	f3 0f 1e fa          	endbr64 
ffff8000001065ee:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001065ea <color_printk+0x9b9>
ffff8000001065f5:	49 bb 86 61 00 00 00 	movabs r11,0x6186
ffff8000001065fc:	00 00 00 
ffff8000001065ff:	4c 01 d8             	add    rax,r11
ffff800000106602:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000106606:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff80000010660a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff80000010660e:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff800000106611:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000106615:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff800000106619:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff80000010661d:	90                   	nop
ffff80000010661e:	5d                   	pop    rbp
ffff80000010661f:	c3                   	ret    
ffff800000106620:	f3 0f 1e fa          	endbr64 
ffff800000106624:	55                   	push   rbp
ffff800000106625:	48 89 e5             	mov    rbp,rsp
ffff800000106628:	f3 0f 1e fa          	endbr64 
ffff80000010662c:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106628 <color_printk+0x9f7>
ffff800000106633:	49 bb 48 61 00 00 00 	movabs r11,0x6148
ffff80000010663a:	00 00 00 
ffff80000010663d:	4c 01 d8             	add    rax,r11
ffff800000106640:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000106644:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000106648:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff80000010664c:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
ffff800000106650:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000106654:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff800000106658:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff80000010665c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff800000106660:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff800000106663:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000106667:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff80000010666b:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff80000010666f:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff800000106672:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000106676:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff80000010667a:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff80000010667e:	90                   	nop
ffff80000010667f:	5d                   	pop    rbp
ffff800000106680:	c3                   	ret    
ffff800000106681:	f3 0f 1e fa          	endbr64 
ffff800000106685:	55                   	push   rbp
ffff800000106686:	48 89 e5             	mov    rbp,rsp
ffff800000106689:	f3 0f 1e fa          	endbr64 
ffff80000010668d:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106689 <color_printk+0xa58>
ffff800000106694:	49 bb e7 60 00 00 00 	movabs r11,0x60e7
ffff80000010669b:	00 00 00 
ffff80000010669e:	4c 01 d8             	add    rax,r11
ffff8000001066a1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff8000001066a5:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff8000001066a9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff8000001066ad:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff8000001066b1:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff8000001066b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001066b9:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff8000001066bc:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff8000001066c0:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff8000001066c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001066c8:	48 8b 10             	mov    rdx,QWORD PTR [rax]
ffff8000001066cb:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff8000001066cf:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff8000001066d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001066d6:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff8000001066da:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff8000001066dd:	90                   	nop
ffff8000001066de:	5d                   	pop    rbp
ffff8000001066df:	c3                   	ret    
ffff8000001066e0:	f3 0f 1e fa          	endbr64 
ffff8000001066e4:	55                   	push   rbp
ffff8000001066e5:	48 89 e5             	mov    rbp,rsp
ffff8000001066e8:	f3 0f 1e fa          	endbr64 
ffff8000001066ec:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001066e8 <color_printk+0xab7>
ffff8000001066f3:	49 bb 88 60 00 00 00 	movabs r11,0x6088
ffff8000001066fa:	00 00 00 
ffff8000001066fd:	4c 01 d8             	add    rax,r11
ffff800000106700:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000106704:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000106708:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff80000010670c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff800000106710:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
ffff800000106713:	48 89 10             	mov    QWORD PTR [rax],rdx
ffff800000106716:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff80000010671a:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff80000010671d:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff800000106721:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
ffff800000106725:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
ffff800000106729:	90                   	nop
ffff80000010672a:	5d                   	pop    rbp
ffff80000010672b:	c3                   	ret    
ffff80000010672c:	f3 0f 1e fa          	endbr64 
ffff800000106730:	55                   	push   rbp
ffff800000106731:	48 89 e5             	mov    rbp,rsp
ffff800000106734:	f3 0f 1e fa          	endbr64 
ffff800000106738:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106734 <color_printk+0xb03>
ffff80000010673f:	49 bb 3c 60 00 00 00 	movabs r11,0x603c
ffff800000106746:	00 00 00 
ffff800000106749:	4c 01 d8             	add    rax,r11
ffff80000010674c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000106750:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000106754:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff800000106758:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
ffff80000010675c:	75 14                	jne    ffff800000106772 <color_printk+0xb41>
ffff80000010675e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000106762:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000106765:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
ffff800000106769:	75 07                	jne    ffff800000106772 <color_printk+0xb41>
ffff80000010676b:	b8 01 00 00 00       	mov    eax,0x1
ffff800000106770:	eb 05                	jmp    ffff800000106777 <color_printk+0xb46>
ffff800000106772:	b8 00 00 00 00       	mov    eax,0x0
ffff800000106777:	5d                   	pop    rbp
ffff800000106778:	c3                   	ret    
ffff800000106779:	f3 0f 1e fa          	endbr64 
ffff80000010677d:	55                   	push   rbp
ffff80000010677e:	48 89 e5             	mov    rbp,rsp
ffff800000106781:	f3 0f 1e fa          	endbr64 
ffff800000106785:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106781 <color_printk+0xb50>
ffff80000010678c:	49 bb ef 5f 00 00 00 	movabs r11,0x5fef
ffff800000106793:	00 00 00 
ffff800000106796:	4c 01 d8             	add    rax,r11
ffff800000106799:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff80000010679d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001067a1:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff8000001067a4:	48 85 c0             	test   rax,rax
ffff8000001067a7:	74 09                	je     ffff8000001067b2 <color_printk+0xb81>
ffff8000001067a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001067ad:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff8000001067b0:	eb 05                	jmp    ffff8000001067b7 <color_printk+0xb86>
ffff8000001067b2:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001067b7:	5d                   	pop    rbp
ffff8000001067b8:	c3                   	ret    
ffff8000001067b9:	f3 0f 1e fa          	endbr64 
ffff8000001067bd:	55                   	push   rbp
ffff8000001067be:	48 89 e5             	mov    rbp,rsp
ffff8000001067c1:	f3 0f 1e fa          	endbr64 
ffff8000001067c5:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001067c1 <color_printk+0xb90>
ffff8000001067cc:	49 bb af 5f 00 00 00 	movabs r11,0x5faf
ffff8000001067d3:	00 00 00 
ffff8000001067d6:	4c 01 d8             	add    rax,r11
ffff8000001067d9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff8000001067dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001067e1:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff8000001067e5:	48 85 c0             	test   rax,rax
ffff8000001067e8:	74 0a                	je     ffff8000001067f4 <color_printk+0xbc3>
ffff8000001067ea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001067ee:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
ffff8000001067f2:	eb 05                	jmp    ffff8000001067f9 <color_printk+0xbc8>
ffff8000001067f4:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001067f9:	5d                   	pop    rbp
ffff8000001067fa:	c3                   	ret    
ffff8000001067fb:	f3 0f 1e fa          	endbr64 
ffff8000001067ff:	55                   	push   rbp
ffff800000106800:	48 89 e5             	mov    rbp,rsp
ffff800000106803:	f3 0f 1e fa          	endbr64 
ffff800000106807:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106803 <color_printk+0xbd2>
ffff80000010680e:	49 bb 6d 5f 00 00 00 	movabs r11,0x5f6d
ffff800000106815:	00 00 00 
ffff800000106818:	4c 01 d8             	add    rax,r11
ffff80000010681b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
ffff80000010681f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
ffff800000106823:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
ffff800000106827:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff80000010682b:	48 8d 50 07          	lea    rdx,[rax+0x7]
ffff80000010682f:	48 85 c0             	test   rax,rax
ffff800000106832:	48 0f 48 c2          	cmovs  rax,rdx
ffff800000106836:	48 c1 f8 03          	sar    rax,0x3
ffff80000010683a:	48 89 c1             	mov    rcx,rax
ffff80000010683d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000106841:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
ffff800000106845:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
ffff800000106849:	48 89 d7             	mov    rdi,rdx
ffff80000010684c:	fc                   	cld    
ffff80000010684d:	f3 48 a5             	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
ffff800000106850:	a8 04                	test   al,0x4
ffff800000106852:	74 01                	je     ffff800000106855 <color_printk+0xc24>
ffff800000106854:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
ffff800000106855:	a8 02                	test   al,0x2
ffff800000106857:	74 02                	je     ffff80000010685b <color_printk+0xc2a>
ffff800000106859:	66 a5                	movs   WORD PTR es:[rdi],WORD PTR ds:[rsi]
ffff80000010685b:	a8 01                	test   al,0x1
ffff80000010685d:	74 01                	je     ffff800000106860 <color_printk+0xc2f>
ffff80000010685f:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
ffff800000106860:	89 f2                	mov    edx,esi
ffff800000106862:	89 4d fc             	mov    DWORD PTR [rbp-0x4],ecx
ffff800000106865:	89 7d f8             	mov    DWORD PTR [rbp-0x8],edi
ffff800000106868:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
ffff80000010686b:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
ffff80000010686f:	5d                   	pop    rbp
ffff800000106870:	c3                   	ret    
ffff800000106871:	f3 0f 1e fa          	endbr64 
ffff800000106875:	55                   	push   rbp
ffff800000106876:	48 89 e5             	mov    rbp,rsp
ffff800000106879:	53                   	push   rbx
ffff80000010687a:	f3 0f 1e fa          	endbr64 
ffff80000010687e:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff80000010687a <color_printk+0xc49>
ffff800000106885:	49 bb f6 5e 00 00 00 	movabs r11,0x5ef6
ffff80000010688c:	00 00 00 
ffff80000010688f:	4c 01 d8             	add    rax,r11
ffff800000106892:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
ffff800000106896:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
ffff80000010689a:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff80000010689e:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001068a3:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff8000001068a7:	48 8b 75 e8          	mov    rsi,QWORD PTR [rbp-0x18]
ffff8000001068ab:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
ffff8000001068af:	48 89 d7             	mov    rdi,rdx
ffff8000001068b2:	fc                   	cld    
ffff8000001068b3:	f3 a6                	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
ffff8000001068b5:	74 09                	je     ffff8000001068c0 <color_printk+0xc8f>
ffff8000001068b7:	b8 01 00 00 00       	mov    eax,0x1
ffff8000001068bc:	7c 02                	jl     ffff8000001068c0 <color_printk+0xc8f>
ffff8000001068be:	f7 d8                	neg    eax
ffff8000001068c0:	89 c3                	mov    ebx,eax
ffff8000001068c2:	89 d8                	mov    eax,ebx
ffff8000001068c4:	5b                   	pop    rbx
ffff8000001068c5:	5d                   	pop    rbp
ffff8000001068c6:	c3                   	ret    
ffff8000001068c7:	f3 0f 1e fa          	endbr64 
ffff8000001068cb:	55                   	push   rbp
ffff8000001068cc:	48 89 e5             	mov    rbp,rsp
ffff8000001068cf:	f3 0f 1e fa          	endbr64 
ffff8000001068d3:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001068cf <color_printk+0xc9e>
ffff8000001068da:	49 bb a1 5e 00 00 00 	movabs r11,0x5ea1
ffff8000001068e1:	00 00 00 
ffff8000001068e4:	4c 01 d8             	add    rax,r11
ffff8000001068e7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
ffff8000001068eb:	89 f0                	mov    eax,esi
ffff8000001068ed:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
ffff8000001068f1:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
ffff8000001068f4:	0f b6 45 e4          	movzx  eax,BYTE PTR [rbp-0x1c]
ffff8000001068f8:	48 ba 01 01 01 01 01 	movabs rdx,0x101010101010101
ffff8000001068ff:	01 01 01 
ffff800000106902:	48 0f af c2          	imul   rax,rdx
ffff800000106906:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
ffff80000010690a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff80000010690e:	48 8d 50 07          	lea    rdx,[rax+0x7]
ffff800000106912:	48 85 c0             	test   rax,rax
ffff800000106915:	48 0f 48 c2          	cmovs  rax,rdx
ffff800000106919:	48 c1 f8 03          	sar    rax,0x3
ffff80000010691d:	48 89 c1             	mov    rcx,rax
ffff800000106920:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000106924:	48 8b 75 d8          	mov    rsi,QWORD PTR [rbp-0x28]
ffff800000106928:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
ffff80000010692c:	48 89 d7             	mov    rdi,rdx
ffff80000010692f:	fc                   	cld    
ffff800000106930:	f3 48 ab             	rep stos QWORD PTR es:[rdi],rax
ffff800000106933:	40 f6 c6 04          	test   sil,0x4
ffff800000106937:	74 01                	je     ffff80000010693a <color_printk+0xd09>
ffff800000106939:	ab                   	stos   DWORD PTR es:[rdi],eax
ffff80000010693a:	40 f6 c6 02          	test   sil,0x2
ffff80000010693e:	74 02                	je     ffff800000106942 <color_printk+0xd11>
ffff800000106940:	66 ab                	stos   WORD PTR es:[rdi],ax
ffff800000106942:	40 f6 c6 01          	test   sil,0x1
ffff800000106946:	74 01                	je     ffff800000106949 <color_printk+0xd18>
ffff800000106948:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000106949:	89 f8                	mov    eax,edi
ffff80000010694b:	89 ca                	mov    edx,ecx
ffff80000010694d:	89 55 f4             	mov    DWORD PTR [rbp-0xc],edx
ffff800000106950:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
ffff800000106953:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000106957:	5d                   	pop    rbp
ffff800000106958:	c3                   	ret    
ffff800000106959:	f3 0f 1e fa          	endbr64 
ffff80000010695d:	55                   	push   rbp
ffff80000010695e:	48 89 e5             	mov    rbp,rsp
ffff800000106961:	f3 0f 1e fa          	endbr64 
ffff800000106965:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106961 <color_printk+0xd30>
ffff80000010696c:	49 bb 0f 5e 00 00 00 	movabs r11,0x5e0f
ffff800000106973:	00 00 00 
ffff800000106976:	4c 01 d8             	add    rax,r11
ffff800000106979:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff80000010697d:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000106981:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000106985:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff800000106989:	48 89 c6             	mov    rsi,rax
ffff80000010698c:	48 89 d7             	mov    rdi,rdx
ffff80000010698f:	fc                   	cld    
ffff800000106990:	ac                   	lods   al,BYTE PTR ds:[rsi]
ffff800000106991:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000106992:	84 c0                	test   al,al
ffff800000106994:	75 fa                	jne    ffff800000106990 <color_printk+0xd5f>
ffff800000106996:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff80000010699a:	5d                   	pop    rbp
ffff80000010699b:	c3                   	ret    
ffff80000010699c:	f3 0f 1e fa          	endbr64 
ffff8000001069a0:	55                   	push   rbp
ffff8000001069a1:	48 89 e5             	mov    rbp,rsp
ffff8000001069a4:	f3 0f 1e fa          	endbr64 
ffff8000001069a8:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001069a4 <color_printk+0xd73>
ffff8000001069af:	49 bb cc 5d 00 00 00 	movabs r11,0x5dcc
ffff8000001069b6:	00 00 00 
ffff8000001069b9:	4c 01 d8             	add    rax,r11
ffff8000001069bc:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff8000001069c0:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff8000001069c4:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
ffff8000001069c8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff8000001069cc:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
ffff8000001069d0:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
ffff8000001069d4:	48 89 c6             	mov    rsi,rax
ffff8000001069d7:	48 89 d7             	mov    rdi,rdx
ffff8000001069da:	fc                   	cld    
ffff8000001069db:	48 ff c9             	dec    rcx
ffff8000001069de:	78 08                	js     ffff8000001069e8 <color_printk+0xdb7>
ffff8000001069e0:	ac                   	lods   al,BYTE PTR ds:[rsi]
ffff8000001069e1:	aa                   	stos   BYTE PTR es:[rdi],al
ffff8000001069e2:	84 c0                	test   al,al
ffff8000001069e4:	75 f5                	jne    ffff8000001069db <color_printk+0xdaa>
ffff8000001069e6:	f3 aa                	rep stos BYTE PTR es:[rdi],al
ffff8000001069e8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff8000001069ec:	5d                   	pop    rbp
ffff8000001069ed:	c3                   	ret    
ffff8000001069ee:	f3 0f 1e fa          	endbr64 
ffff8000001069f2:	55                   	push   rbp
ffff8000001069f3:	48 89 e5             	mov    rbp,rsp
ffff8000001069f6:	f3 0f 1e fa          	endbr64 
ffff8000001069fa:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff8000001069f6 <color_printk+0xdc5>
ffff800000106a01:	49 bb 7a 5d 00 00 00 	movabs r11,0x5d7a
ffff800000106a08:	00 00 00 
ffff800000106a0b:	4c 01 d8             	add    rax,r11
ffff800000106a0e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000106a12:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000106a16:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff800000106a1a:	48 8b 7d f8          	mov    rdi,QWORD PTR [rbp-0x8]
ffff800000106a1e:	b8 00 00 00 00       	mov    eax,0x0
ffff800000106a23:	b9 ff ff ff ff       	mov    ecx,0xffffffff
ffff800000106a28:	48 89 d6             	mov    rsi,rdx
ffff800000106a2b:	fc                   	cld    
ffff800000106a2c:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
ffff800000106a2e:	48 ff cf             	dec    rdi
ffff800000106a31:	ac                   	lods   al,BYTE PTR ds:[rsi]
ffff800000106a32:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000106a33:	84 c0                	test   al,al
ffff800000106a35:	75 fa                	jne    ffff800000106a31 <color_printk+0xe00>
ffff800000106a37:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000106a3b:	5d                   	pop    rbp
ffff800000106a3c:	c3                   	ret    
ffff800000106a3d:	f3 0f 1e fa          	endbr64 
ffff800000106a41:	55                   	push   rbp
ffff800000106a42:	48 89 e5             	mov    rbp,rsp
ffff800000106a45:	53                   	push   rbx
ffff800000106a46:	f3 0f 1e fa          	endbr64 
ffff800000106a4a:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106a46 <color_printk+0xe15>
ffff800000106a51:	49 bb 2a 5d 00 00 00 	movabs r11,0x5d2a
ffff800000106a58:	00 00 00 
ffff800000106a5b:	4c 01 d8             	add    rax,r11
ffff800000106a5e:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
ffff800000106a62:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
ffff800000106a66:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000106a6a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
ffff800000106a6e:	48 89 c7             	mov    rdi,rax
ffff800000106a71:	48 89 d6             	mov    rsi,rdx
ffff800000106a74:	fc                   	cld    
ffff800000106a75:	ac                   	lods   al,BYTE PTR ds:[rsi]
ffff800000106a76:	ae                   	scas   al,BYTE PTR es:[rdi]
ffff800000106a77:	75 08                	jne    ffff800000106a81 <color_printk+0xe50>
ffff800000106a79:	84 c0                	test   al,al
ffff800000106a7b:	75 f8                	jne    ffff800000106a75 <color_printk+0xe44>
ffff800000106a7d:	31 c0                	xor    eax,eax
ffff800000106a7f:	eb 09                	jmp    ffff800000106a8a <color_printk+0xe59>
ffff800000106a81:	b8 01 00 00 00       	mov    eax,0x1
ffff800000106a86:	7c 02                	jl     ffff800000106a8a <color_printk+0xe59>
ffff800000106a88:	f7 d8                	neg    eax
ffff800000106a8a:	89 c3                	mov    ebx,eax
ffff800000106a8c:	89 d8                	mov    eax,ebx
ffff800000106a8e:	5b                   	pop    rbx
ffff800000106a8f:	5d                   	pop    rbp
ffff800000106a90:	c3                   	ret    
ffff800000106a91:	f3 0f 1e fa          	endbr64 
ffff800000106a95:	55                   	push   rbp
ffff800000106a96:	48 89 e5             	mov    rbp,rsp
ffff800000106a99:	53                   	push   rbx
ffff800000106a9a:	f3 0f 1e fa          	endbr64 
ffff800000106a9e:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106a9a <color_printk+0xe69>
ffff800000106aa5:	49 bb d6 5c 00 00 00 	movabs r11,0x5cd6
ffff800000106aac:	00 00 00 
ffff800000106aaf:	4c 01 d8             	add    rax,r11
ffff800000106ab2:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
ffff800000106ab6:	48 89 75 e8          	mov    QWORD PTR [rbp-0x18],rsi
ffff800000106aba:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
ffff800000106abe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000106ac2:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
ffff800000106ac6:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
ffff800000106aca:	48 89 c7             	mov    rdi,rax
ffff800000106acd:	48 89 d6             	mov    rsi,rdx
ffff800000106ad0:	fc                   	cld    
ffff800000106ad1:	48 ff c9             	dec    rcx
ffff800000106ad4:	78 08                	js     ffff800000106ade <color_printk+0xead>
ffff800000106ad6:	ac                   	lods   al,BYTE PTR ds:[rsi]
ffff800000106ad7:	ae                   	scas   al,BYTE PTR es:[rdi]
ffff800000106ad8:	75 08                	jne    ffff800000106ae2 <color_printk+0xeb1>
ffff800000106ada:	84 c0                	test   al,al
ffff800000106adc:	75 f3                	jne    ffff800000106ad1 <color_printk+0xea0>
ffff800000106ade:	31 c0                	xor    eax,eax
ffff800000106ae0:	eb 09                	jmp    ffff800000106aeb <color_printk+0xeba>
ffff800000106ae2:	b8 01 00 00 00       	mov    eax,0x1
ffff800000106ae7:	7c 02                	jl     ffff800000106aeb <color_printk+0xeba>
ffff800000106ae9:	f7 d8                	neg    eax
ffff800000106aeb:	89 c3                	mov    ebx,eax
ffff800000106aed:	89 d8                	mov    eax,ebx
ffff800000106aef:	5b                   	pop    rbx
ffff800000106af0:	5d                   	pop    rbp
ffff800000106af1:	c3                   	ret    
ffff800000106af2:	f3 0f 1e fa          	endbr64 
ffff800000106af6:	55                   	push   rbp
ffff800000106af7:	48 89 e5             	mov    rbp,rsp
ffff800000106afa:	53                   	push   rbx
ffff800000106afb:	f3 0f 1e fa          	endbr64 
ffff800000106aff:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106afb <color_printk+0xeca>
ffff800000106b06:	49 bb 75 5c 00 00 00 	movabs r11,0x5c75
ffff800000106b0d:	00 00 00 
ffff800000106b10:	4c 01 d8             	add    rax,r11
ffff800000106b13:	48 89 7d f0          	mov    QWORD PTR [rbp-0x10],rdi
ffff800000106b17:	48 8b 75 f0          	mov    rsi,QWORD PTR [rbp-0x10]
ffff800000106b1b:	b8 00 00 00 00       	mov    eax,0x0
ffff800000106b20:	ba ff ff ff ff       	mov    edx,0xffffffff
ffff800000106b25:	89 d1                	mov    ecx,edx
ffff800000106b27:	48 89 f7             	mov    rdi,rsi
ffff800000106b2a:	fc                   	cld    
ffff800000106b2b:	f2 ae                	repnz scas al,BYTE PTR es:[rdi]
ffff800000106b2d:	f7 d1                	not    ecx
ffff800000106b2f:	ff c9                	dec    ecx
ffff800000106b31:	89 ca                	mov    edx,ecx
ffff800000106b33:	89 d3                	mov    ebx,edx
ffff800000106b35:	89 d8                	mov    eax,ebx
ffff800000106b37:	5b                   	pop    rbx
ffff800000106b38:	5d                   	pop    rbp
ffff800000106b39:	c3                   	ret    
ffff800000106b3a:	f3 0f 1e fa          	endbr64 
ffff800000106b3e:	55                   	push   rbp
ffff800000106b3f:	48 89 e5             	mov    rbp,rsp
ffff800000106b42:	f3 0f 1e fa          	endbr64 
ffff800000106b46:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106b42 <color_printk+0xf11>
ffff800000106b4d:	49 bb 2e 5c 00 00 00 	movabs r11,0x5c2e
ffff800000106b54:	00 00 00 
ffff800000106b57:	4c 01 d8             	add    rax,r11
ffff800000106b5a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000106b5e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000106b62:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000106b66:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000106b69:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff800000106b6d:	be 01 00 00 00       	mov    esi,0x1
ffff800000106b72:	89 d1                	mov    ecx,edx
ffff800000106b74:	48 d3 e6             	shl    rsi,cl
ffff800000106b77:	48 89 f2             	mov    rdx,rsi
ffff800000106b7a:	48 09 d0             	or     rax,rdx
ffff800000106b7d:	5d                   	pop    rbp
ffff800000106b7e:	c3                   	ret    
ffff800000106b7f:	f3 0f 1e fa          	endbr64 
ffff800000106b83:	55                   	push   rbp
ffff800000106b84:	48 89 e5             	mov    rbp,rsp
ffff800000106b87:	f3 0f 1e fa          	endbr64 
ffff800000106b8b:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106b87 <color_printk+0xf56>
ffff800000106b92:	49 bb e9 5b 00 00 00 	movabs r11,0x5be9
ffff800000106b99:	00 00 00 
ffff800000106b9c:	4c 01 d8             	add    rax,r11
ffff800000106b9f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000106ba3:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000106ba7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000106bab:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000106bae:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff800000106bb2:	be 01 00 00 00       	mov    esi,0x1
ffff800000106bb7:	89 d1                	mov    ecx,edx
ffff800000106bb9:	48 d3 e6             	shl    rsi,cl
ffff800000106bbc:	48 89 f2             	mov    rdx,rsi
ffff800000106bbf:	48 21 d0             	and    rax,rdx
ffff800000106bc2:	5d                   	pop    rbp
ffff800000106bc3:	c3                   	ret    
ffff800000106bc4:	f3 0f 1e fa          	endbr64 
ffff800000106bc8:	55                   	push   rbp
ffff800000106bc9:	48 89 e5             	mov    rbp,rsp
ffff800000106bcc:	f3 0f 1e fa          	endbr64 
ffff800000106bd0:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106bcc <color_printk+0xf9b>
ffff800000106bd7:	49 bb a4 5b 00 00 00 	movabs r11,0x5ba4
ffff800000106bde:	00 00 00 
ffff800000106be1:	4c 01 d8             	add    rax,r11
ffff800000106be4:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000106be8:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000106bec:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
ffff800000106bf0:	48 8b 00             	mov    rax,QWORD PTR [rax]
ffff800000106bf3:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
ffff800000106bf7:	be 01 00 00 00       	mov    esi,0x1
ffff800000106bfc:	89 d1                	mov    ecx,edx
ffff800000106bfe:	48 d3 e6             	shl    rsi,cl
ffff800000106c01:	48 89 f2             	mov    rdx,rsi
ffff800000106c04:	48 f7 d2             	not    rdx
ffff800000106c07:	48 21 d0             	and    rax,rdx
ffff800000106c0a:	5d                   	pop    rbp
ffff800000106c0b:	c3                   	ret    
ffff800000106c0c:	f3 0f 1e fa          	endbr64 
ffff800000106c10:	55                   	push   rbp
ffff800000106c11:	48 89 e5             	mov    rbp,rsp
ffff800000106c14:	f3 0f 1e fa          	endbr64 
ffff800000106c18:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106c14 <color_printk+0xfe3>
ffff800000106c1f:	49 bb 5c 5b 00 00 00 	movabs r11,0x5b5c
ffff800000106c26:	00 00 00 
ffff800000106c29:	4c 01 d8             	add    rax,r11
ffff800000106c2c:	89 f8                	mov    eax,edi
ffff800000106c2e:	66 89 45 ec          	mov    WORD PTR [rbp-0x14],ax
ffff800000106c32:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
ffff800000106c36:	0f b7 45 ec          	movzx  eax,WORD PTR [rbp-0x14]
ffff800000106c3a:	89 c2                	mov    edx,eax
ffff800000106c3c:	ec                   	in     al,dx
ffff800000106c3d:	0f ae f0             	mfence 
ffff800000106c40:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
ffff800000106c43:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
ffff800000106c47:	5d                   	pop    rbp
ffff800000106c48:	c3                   	ret    
ffff800000106c49:	f3 0f 1e fa          	endbr64 
ffff800000106c4d:	55                   	push   rbp
ffff800000106c4e:	48 89 e5             	mov    rbp,rsp
ffff800000106c51:	f3 0f 1e fa          	endbr64 
ffff800000106c55:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106c51 <color_printk+0x1020>
ffff800000106c5c:	49 bb 1f 5b 00 00 00 	movabs r11,0x5b1f
ffff800000106c63:	00 00 00 
ffff800000106c66:	4c 01 d8             	add    rax,r11
ffff800000106c69:	89 f8                	mov    eax,edi
ffff800000106c6b:	66 89 45 ec          	mov    WORD PTR [rbp-0x14],ax
ffff800000106c6f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
ffff800000106c76:	0f b7 45 ec          	movzx  eax,WORD PTR [rbp-0x14]
ffff800000106c7a:	89 c2                	mov    edx,eax
ffff800000106c7c:	ed                   	in     eax,dx
ffff800000106c7d:	0f ae f0             	mfence 
ffff800000106c80:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
ffff800000106c83:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
ffff800000106c86:	5d                   	pop    rbp
ffff800000106c87:	c3                   	ret    
ffff800000106c88:	f3 0f 1e fa          	endbr64 
ffff800000106c8c:	55                   	push   rbp
ffff800000106c8d:	48 89 e5             	mov    rbp,rsp
ffff800000106c90:	f3 0f 1e fa          	endbr64 
ffff800000106c94:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106c90 <color_printk+0x105f>
ffff800000106c9b:	49 bb e0 5a 00 00 00 	movabs r11,0x5ae0
ffff800000106ca2:	00 00 00 
ffff800000106ca5:	4c 01 d8             	add    rax,r11
ffff800000106ca8:	89 f8                	mov    eax,edi
ffff800000106caa:	89 f2                	mov    edx,esi
ffff800000106cac:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
ffff800000106cb0:	89 d0                	mov    eax,edx
ffff800000106cb2:	88 45 f8             	mov    BYTE PTR [rbp-0x8],al
ffff800000106cb5:	0f b6 45 f8          	movzx  eax,BYTE PTR [rbp-0x8]
ffff800000106cb9:	0f b7 55 fc          	movzx  edx,WORD PTR [rbp-0x4]
ffff800000106cbd:	ee                   	out    dx,al
ffff800000106cbe:	0f ae f0             	mfence 
ffff800000106cc1:	90                   	nop
ffff800000106cc2:	5d                   	pop    rbp
ffff800000106cc3:	c3                   	ret    
ffff800000106cc4:	f3 0f 1e fa          	endbr64 
ffff800000106cc8:	55                   	push   rbp
ffff800000106cc9:	48 89 e5             	mov    rbp,rsp
ffff800000106ccc:	f3 0f 1e fa          	endbr64 
ffff800000106cd0:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106ccc <color_printk+0x109b>
ffff800000106cd7:	49 bb a4 5a 00 00 00 	movabs r11,0x5aa4
ffff800000106cde:	00 00 00 
ffff800000106ce1:	4c 01 d8             	add    rax,r11
ffff800000106ce4:	89 f8                	mov    eax,edi
ffff800000106ce6:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
ffff800000106ce9:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
ffff800000106ced:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
ffff800000106cf0:	0f b7 55 fc          	movzx  edx,WORD PTR [rbp-0x4]
ffff800000106cf4:	ef                   	out    dx,eax
ffff800000106cf5:	0f ae f0             	mfence 
ffff800000106cf8:	90                   	nop
ffff800000106cf9:	5d                   	pop    rbp
ffff800000106cfa:	c3                   	ret    
ffff800000106cfb:	f3 0f 1e fa          	endbr64 
ffff800000106cff:	55                   	push   rbp
ffff800000106d00:	48 89 e5             	mov    rbp,rsp
ffff800000106d03:	f3 0f 1e fa          	endbr64 
ffff800000106d07:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106d03 <color_printk+0x10d2>
ffff800000106d0e:	49 bb 6d 5a 00 00 00 	movabs r11,0x5a6d
ffff800000106d15:	00 00 00 
ffff800000106d18:	4c 01 d8             	add    rax,r11
ffff800000106d1b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
ffff800000106d1f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
ffff800000106d26:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
ffff800000106d2d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000106d31:	48 89 c1             	mov    rcx,rax
ffff800000106d34:	0f 32                	rdmsr  
ffff800000106d36:	89 55 fc             	mov    DWORD PTR [rbp-0x4],edx
ffff800000106d39:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
ffff800000106d3c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
ffff800000106d3f:	48 c1 e0 20          	shl    rax,0x20
ffff800000106d43:	48 89 c2             	mov    rdx,rax
ffff800000106d46:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
ffff800000106d49:	48 09 d0             	or     rax,rdx
ffff800000106d4c:	5d                   	pop    rbp
ffff800000106d4d:	c3                   	ret    
ffff800000106d4e:	f3 0f 1e fa          	endbr64 
ffff800000106d52:	55                   	push   rbp
ffff800000106d53:	48 89 e5             	mov    rbp,rsp
ffff800000106d56:	f3 0f 1e fa          	endbr64 
ffff800000106d5a:	48 8d 05 f5 ff ff ff 	lea    rax,[rip+0xfffffffffffffff5]        # ffff800000106d56 <color_printk+0x1125>
ffff800000106d61:	49 bb 1a 5a 00 00 00 	movabs r11,0x5a1a
ffff800000106d68:	00 00 00 
ffff800000106d6b:	4c 01 d8             	add    rax,r11
ffff800000106d6e:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
ffff800000106d72:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
ffff800000106d76:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000106d7a:	48 c1 e8 20          	shr    rax,0x20
ffff800000106d7e:	48 89 c2             	mov    rdx,rax
ffff800000106d81:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
ffff800000106d85:	89 c0                	mov    eax,eax
ffff800000106d87:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
ffff800000106d8b:	0f 30                	wrmsr  
ffff800000106d8d:	90                   	nop
ffff800000106d8e:	5d                   	pop    rbp
ffff800000106d8f:	c3                   	ret    

ffff800000106d90 <do_divide_error>:
ffff800000106d90:	f3 0f 1e fa          	endbr64 
ffff800000106d94:	55                   	push   rbp
ffff800000106d95:	48 89 e5             	mov    rbp,rsp
ffff800000106d98:	41 57                	push   r15
ffff800000106d9a:	48 83 ec 28          	sub    rsp,0x28
ffff800000106d9e:	f3 0f 1e fa          	endbr64 
ffff800000106da2:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000106d9e <do_divide_error+0xe>
ffff800000106da9:	49 bb d2 59 00 00 00 	movabs r11,0x59d2
ffff800000106db0:	00 00 00 
ffff800000106db3:	4d 01 da             	add    r10,r11
ffff800000106db6:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000106dba:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000106dbe:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000106dc5:	00 
ffff800000106dc6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000106dca:	48 05 98 00 00 00    	add    rax,0x98
ffff800000106dd0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000106dd4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000106dd8:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000106ddb:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000106ddf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000106de3:	49 89 c9             	mov    r9,rcx
ffff800000106de6:	49 89 d0             	mov    r8,rdx
ffff800000106de9:	48 89 c1             	mov    rcx,rax
ffff800000106dec:	48 b8 b0 03 00 00 00 	movabs rax,0x3b0
ffff800000106df3:	00 00 00 
ffff800000106df6:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff800000106dfa:	be 00 00 00 00       	mov    esi,0x0
ffff800000106dff:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000106e04:	4d 89 d7             	mov    r15,r10
ffff800000106e07:	b8 00 00 00 00       	mov    eax,0x0
ffff800000106e0c:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff800000106e13:	ff ff ff 
ffff800000106e16:	4d 01 d3             	add    r11,r10
ffff800000106e19:	41 ff d3             	call   r11
ffff800000106e1c:	eb fe                	jmp    ffff800000106e1c <do_divide_error+0x8c>

ffff800000106e1e <do_debug>:
ffff800000106e1e:	f3 0f 1e fa          	endbr64 
ffff800000106e22:	55                   	push   rbp
ffff800000106e23:	48 89 e5             	mov    rbp,rsp
ffff800000106e26:	41 57                	push   r15
ffff800000106e28:	48 83 ec 28          	sub    rsp,0x28
ffff800000106e2c:	f3 0f 1e fa          	endbr64 
ffff800000106e30:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000106e2c <do_debug+0xe>
ffff800000106e37:	49 bb 44 59 00 00 00 	movabs r11,0x5944
ffff800000106e3e:	00 00 00 
ffff800000106e41:	4d 01 da             	add    r10,r11
ffff800000106e44:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000106e48:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000106e4c:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000106e53:	00 
ffff800000106e54:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000106e58:	48 05 98 00 00 00    	add    rax,0x98
ffff800000106e5e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000106e62:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000106e66:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000106e69:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000106e6d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000106e71:	49 89 c9             	mov    r9,rcx
ffff800000106e74:	49 89 d0             	mov    r8,rdx
ffff800000106e77:	48 89 c1             	mov    rcx,rax
ffff800000106e7a:	48 b8 f0 03 00 00 00 	movabs rax,0x3f0
ffff800000106e81:	00 00 00 
ffff800000106e84:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff800000106e88:	be 00 00 00 00       	mov    esi,0x0
ffff800000106e8d:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000106e92:	4d 89 d7             	mov    r15,r10
ffff800000106e95:	b8 00 00 00 00       	mov    eax,0x0
ffff800000106e9a:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff800000106ea1:	ff ff ff 
ffff800000106ea4:	4d 01 d3             	add    r11,r10
ffff800000106ea7:	41 ff d3             	call   r11
ffff800000106eaa:	eb fe                	jmp    ffff800000106eaa <do_debug+0x8c>

ffff800000106eac <do_nmi>:
ffff800000106eac:	f3 0f 1e fa          	endbr64 
ffff800000106eb0:	55                   	push   rbp
ffff800000106eb1:	48 89 e5             	mov    rbp,rsp
ffff800000106eb4:	41 57                	push   r15
ffff800000106eb6:	48 83 ec 28          	sub    rsp,0x28
ffff800000106eba:	f3 0f 1e fa          	endbr64 
ffff800000106ebe:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000106eba <do_nmi+0xe>
ffff800000106ec5:	49 bb b6 58 00 00 00 	movabs r11,0x58b6
ffff800000106ecc:	00 00 00 
ffff800000106ecf:	4d 01 da             	add    r10,r11
ffff800000106ed2:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000106ed6:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000106eda:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000106ee1:	00 
ffff800000106ee2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000106ee6:	48 05 98 00 00 00    	add    rax,0x98
ffff800000106eec:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000106ef0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000106ef4:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000106ef7:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000106efb:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000106eff:	49 89 c9             	mov    r9,rcx
ffff800000106f02:	49 89 d0             	mov    r8,rdx
ffff800000106f05:	48 89 c1             	mov    rcx,rax
ffff800000106f08:	48 b8 28 04 00 00 00 	movabs rax,0x428
ffff800000106f0f:	00 00 00 
ffff800000106f12:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff800000106f16:	be 00 00 00 00       	mov    esi,0x0
ffff800000106f1b:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000106f20:	4d 89 d7             	mov    r15,r10
ffff800000106f23:	b8 00 00 00 00       	mov    eax,0x0
ffff800000106f28:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff800000106f2f:	ff ff ff 
ffff800000106f32:	4d 01 d3             	add    r11,r10
ffff800000106f35:	41 ff d3             	call   r11
ffff800000106f38:	eb fe                	jmp    ffff800000106f38 <do_nmi+0x8c>

ffff800000106f3a <do_int3>:
ffff800000106f3a:	f3 0f 1e fa          	endbr64 
ffff800000106f3e:	55                   	push   rbp
ffff800000106f3f:	48 89 e5             	mov    rbp,rsp
ffff800000106f42:	41 57                	push   r15
ffff800000106f44:	48 83 ec 28          	sub    rsp,0x28
ffff800000106f48:	f3 0f 1e fa          	endbr64 
ffff800000106f4c:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000106f48 <do_int3+0xe>
ffff800000106f53:	49 bb 28 58 00 00 00 	movabs r11,0x5828
ffff800000106f5a:	00 00 00 
ffff800000106f5d:	4d 01 da             	add    r10,r11
ffff800000106f60:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000106f64:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000106f68:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000106f6f:	00 
ffff800000106f70:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000106f74:	48 05 98 00 00 00    	add    rax,0x98
ffff800000106f7a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000106f7e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000106f82:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000106f85:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000106f89:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000106f8d:	49 89 c9             	mov    r9,rcx
ffff800000106f90:	49 89 d0             	mov    r8,rdx
ffff800000106f93:	48 89 c1             	mov    rcx,rax
ffff800000106f96:	48 b8 60 04 00 00 00 	movabs rax,0x460
ffff800000106f9d:	00 00 00 
ffff800000106fa0:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff800000106fa4:	be 00 00 00 00       	mov    esi,0x0
ffff800000106fa9:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000106fae:	4d 89 d7             	mov    r15,r10
ffff800000106fb1:	b8 00 00 00 00       	mov    eax,0x0
ffff800000106fb6:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff800000106fbd:	ff ff ff 
ffff800000106fc0:	4d 01 d3             	add    r11,r10
ffff800000106fc3:	41 ff d3             	call   r11
ffff800000106fc6:	eb fe                	jmp    ffff800000106fc6 <do_int3+0x8c>

ffff800000106fc8 <do_overflow>:
ffff800000106fc8:	f3 0f 1e fa          	endbr64 
ffff800000106fcc:	55                   	push   rbp
ffff800000106fcd:	48 89 e5             	mov    rbp,rsp
ffff800000106fd0:	41 57                	push   r15
ffff800000106fd2:	48 83 ec 28          	sub    rsp,0x28
ffff800000106fd6:	f3 0f 1e fa          	endbr64 
ffff800000106fda:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000106fd6 <do_overflow+0xe>
ffff800000106fe1:	49 bb 9a 57 00 00 00 	movabs r11,0x579a
ffff800000106fe8:	00 00 00 
ffff800000106feb:	4d 01 da             	add    r10,r11
ffff800000106fee:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000106ff2:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000106ff6:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000106ffd:	00 
ffff800000106ffe:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000107002:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107008:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff80000010700c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000107010:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000107013:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000107017:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff80000010701b:	49 89 c9             	mov    r9,rcx
ffff80000010701e:	49 89 d0             	mov    r8,rdx
ffff800000107021:	48 89 c1             	mov    rcx,rax
ffff800000107024:	48 b8 98 04 00 00 00 	movabs rax,0x498
ffff80000010702b:	00 00 00 
ffff80000010702e:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff800000107032:	be 00 00 00 00       	mov    esi,0x0
ffff800000107037:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff80000010703c:	4d 89 d7             	mov    r15,r10
ffff80000010703f:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107044:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff80000010704b:	ff ff ff 
ffff80000010704e:	4d 01 d3             	add    r11,r10
ffff800000107051:	41 ff d3             	call   r11
ffff800000107054:	eb fe                	jmp    ffff800000107054 <do_overflow+0x8c>

ffff800000107056 <do_bounds>:
ffff800000107056:	f3 0f 1e fa          	endbr64 
ffff80000010705a:	55                   	push   rbp
ffff80000010705b:	48 89 e5             	mov    rbp,rsp
ffff80000010705e:	41 57                	push   r15
ffff800000107060:	48 83 ec 28          	sub    rsp,0x28
ffff800000107064:	f3 0f 1e fa          	endbr64 
ffff800000107068:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000107064 <do_bounds+0xe>
ffff80000010706f:	49 bb 0c 57 00 00 00 	movabs r11,0x570c
ffff800000107076:	00 00 00 
ffff800000107079:	4d 01 da             	add    r10,r11
ffff80000010707c:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000107080:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000107084:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff80000010708b:	00 
ffff80000010708c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000107090:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107096:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff80000010709a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff80000010709e:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff8000001070a1:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff8000001070a5:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff8000001070a9:	49 89 c9             	mov    r9,rcx
ffff8000001070ac:	49 89 d0             	mov    r8,rdx
ffff8000001070af:	48 89 c1             	mov    rcx,rax
ffff8000001070b2:	48 b8 d8 04 00 00 00 	movabs rax,0x4d8
ffff8000001070b9:	00 00 00 
ffff8000001070bc:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff8000001070c0:	be 00 00 00 00       	mov    esi,0x0
ffff8000001070c5:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001070ca:	4d 89 d7             	mov    r15,r10
ffff8000001070cd:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001070d2:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff8000001070d9:	ff ff ff 
ffff8000001070dc:	4d 01 d3             	add    r11,r10
ffff8000001070df:	41 ff d3             	call   r11
ffff8000001070e2:	eb fe                	jmp    ffff8000001070e2 <do_bounds+0x8c>

ffff8000001070e4 <do_undefined_opcode>:
ffff8000001070e4:	f3 0f 1e fa          	endbr64 
ffff8000001070e8:	55                   	push   rbp
ffff8000001070e9:	48 89 e5             	mov    rbp,rsp
ffff8000001070ec:	41 57                	push   r15
ffff8000001070ee:	48 83 ec 28          	sub    rsp,0x28
ffff8000001070f2:	f3 0f 1e fa          	endbr64 
ffff8000001070f6:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff8000001070f2 <do_undefined_opcode+0xe>
ffff8000001070fd:	49 bb 7e 56 00 00 00 	movabs r11,0x567e
ffff800000107104:	00 00 00 
ffff800000107107:	4d 01 da             	add    r10,r11
ffff80000010710a:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff80000010710e:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000107112:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000107119:	00 
ffff80000010711a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff80000010711e:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107124:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000107128:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff80000010712c:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff80000010712f:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000107133:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107137:	49 89 c9             	mov    r9,rcx
ffff80000010713a:	49 89 d0             	mov    r8,rdx
ffff80000010713d:	48 89 c1             	mov    rcx,rax
ffff800000107140:	48 b8 18 05 00 00 00 	movabs rax,0x518
ffff800000107147:	00 00 00 
ffff80000010714a:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff80000010714e:	be 00 00 00 00       	mov    esi,0x0
ffff800000107153:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107158:	4d 89 d7             	mov    r15,r10
ffff80000010715b:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107160:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff800000107167:	ff ff ff 
ffff80000010716a:	4d 01 d3             	add    r11,r10
ffff80000010716d:	41 ff d3             	call   r11
ffff800000107170:	eb fe                	jmp    ffff800000107170 <do_undefined_opcode+0x8c>

ffff800000107172 <do_dev_not_available>:
ffff800000107172:	f3 0f 1e fa          	endbr64 
ffff800000107176:	55                   	push   rbp
ffff800000107177:	48 89 e5             	mov    rbp,rsp
ffff80000010717a:	41 57                	push   r15
ffff80000010717c:	48 83 ec 28          	sub    rsp,0x28
ffff800000107180:	f3 0f 1e fa          	endbr64 
ffff800000107184:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000107180 <do_dev_not_available+0xe>
ffff80000010718b:	49 bb f0 55 00 00 00 	movabs r11,0x55f0
ffff800000107192:	00 00 00 
ffff800000107195:	4d 01 da             	add    r10,r11
ffff800000107198:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff80000010719c:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff8000001071a0:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff8000001071a7:	00 
ffff8000001071a8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff8000001071ac:	48 05 98 00 00 00    	add    rax,0x98
ffff8000001071b2:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff8000001071b6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff8000001071ba:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff8000001071bd:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff8000001071c1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff8000001071c5:	49 89 c9             	mov    r9,rcx
ffff8000001071c8:	49 89 d0             	mov    r8,rdx
ffff8000001071cb:	48 89 c1             	mov    rcx,rax
ffff8000001071ce:	48 b8 60 05 00 00 00 	movabs rax,0x560
ffff8000001071d5:	00 00 00 
ffff8000001071d8:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff8000001071dc:	be 00 00 00 00       	mov    esi,0x0
ffff8000001071e1:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001071e6:	4d 89 d7             	mov    r15,r10
ffff8000001071e9:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001071ee:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff8000001071f5:	ff ff ff 
ffff8000001071f8:	4d 01 d3             	add    r11,r10
ffff8000001071fb:	41 ff d3             	call   r11
ffff8000001071fe:	eb fe                	jmp    ffff8000001071fe <do_dev_not_available+0x8c>

ffff800000107200 <do_double_fault>:
ffff800000107200:	f3 0f 1e fa          	endbr64 
ffff800000107204:	55                   	push   rbp
ffff800000107205:	48 89 e5             	mov    rbp,rsp
ffff800000107208:	41 57                	push   r15
ffff80000010720a:	48 83 ec 28          	sub    rsp,0x28
ffff80000010720e:	f3 0f 1e fa          	endbr64 
ffff800000107212:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff80000010720e <do_double_fault+0xe>
ffff800000107219:	49 bb 62 55 00 00 00 	movabs r11,0x5562
ffff800000107220:	00 00 00 
ffff800000107223:	4d 01 da             	add    r10,r11
ffff800000107226:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff80000010722a:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff80000010722e:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000107235:	00 
ffff800000107236:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff80000010723a:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107240:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000107244:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000107248:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff80000010724b:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff80000010724f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107253:	49 89 c9             	mov    r9,rcx
ffff800000107256:	49 89 d0             	mov    r8,rdx
ffff800000107259:	48 89 c1             	mov    rcx,rax
ffff80000010725c:	48 b8 a8 05 00 00 00 	movabs rax,0x5a8
ffff800000107263:	00 00 00 
ffff800000107266:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff80000010726a:	be 00 00 00 00       	mov    esi,0x0
ffff80000010726f:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107274:	4d 89 d7             	mov    r15,r10
ffff800000107277:	b8 00 00 00 00       	mov    eax,0x0
ffff80000010727c:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff800000107283:	ff ff ff 
ffff800000107286:	4d 01 d3             	add    r11,r10
ffff800000107289:	41 ff d3             	call   r11
ffff80000010728c:	eb fe                	jmp    ffff80000010728c <do_double_fault+0x8c>

ffff80000010728e <do_coprocessor_segment_overrun>:
ffff80000010728e:	f3 0f 1e fa          	endbr64 
ffff800000107292:	55                   	push   rbp
ffff800000107293:	48 89 e5             	mov    rbp,rsp
ffff800000107296:	41 57                	push   r15
ffff800000107298:	48 83 ec 28          	sub    rsp,0x28
ffff80000010729c:	f3 0f 1e fa          	endbr64 
ffff8000001072a0:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff80000010729c <do_coprocessor_segment_overrun+0xe>
ffff8000001072a7:	49 bb d4 54 00 00 00 	movabs r11,0x54d4
ffff8000001072ae:	00 00 00 
ffff8000001072b1:	4d 01 da             	add    r10,r11
ffff8000001072b4:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff8000001072b8:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff8000001072bc:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff8000001072c3:	00 
ffff8000001072c4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff8000001072c8:	48 05 98 00 00 00    	add    rax,0x98
ffff8000001072ce:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff8000001072d2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff8000001072d6:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff8000001072d9:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff8000001072dd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff8000001072e1:	49 89 c9             	mov    r9,rcx
ffff8000001072e4:	49 89 d0             	mov    r8,rdx
ffff8000001072e7:	48 89 c1             	mov    rcx,rax
ffff8000001072ea:	48 b8 e8 05 00 00 00 	movabs rax,0x5e8
ffff8000001072f1:	00 00 00 
ffff8000001072f4:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff8000001072f8:	be 00 00 00 00       	mov    esi,0x0
ffff8000001072fd:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107302:	4d 89 d7             	mov    r15,r10
ffff800000107305:	b8 00 00 00 00       	mov    eax,0x0
ffff80000010730a:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff800000107311:	ff ff ff 
ffff800000107314:	4d 01 d3             	add    r11,r10
ffff800000107317:	41 ff d3             	call   r11
ffff80000010731a:	eb fe                	jmp    ffff80000010731a <do_coprocessor_segment_overrun+0x8c>

ffff80000010731c <do_invalid_TSS>:
ffff80000010731c:	f3 0f 1e fa          	endbr64 
ffff800000107320:	55                   	push   rbp
ffff800000107321:	48 89 e5             	mov    rbp,rsp
ffff800000107324:	41 57                	push   r15
ffff800000107326:	53                   	push   rbx
ffff800000107327:	48 83 ec 20          	sub    rsp,0x20
ffff80000010732b:	f3 0f 1e fa          	endbr64 
ffff80000010732f:	48 8d 1d f5 ff ff ff 	lea    rbx,[rip+0xfffffffffffffff5]        # ffff80000010732b <do_invalid_TSS+0xf>
ffff800000107336:	49 bb 45 54 00 00 00 	movabs r11,0x5445
ffff80000010733d:	00 00 00 
ffff800000107340:	4c 01 db             	add    rbx,r11
ffff800000107343:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000107347:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff80000010734b:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000107352:	00 
ffff800000107353:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000107357:	48 05 98 00 00 00    	add    rax,0x98
ffff80000010735d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000107361:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000107365:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000107368:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff80000010736c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107370:	49 89 c9             	mov    r9,rcx
ffff800000107373:	49 89 d0             	mov    r8,rdx
ffff800000107376:	48 89 c1             	mov    rcx,rax
ffff800000107379:	48 b8 38 06 00 00 00 	movabs rax,0x638
ffff800000107380:	00 00 00 
ffff800000107383:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107387:	be 00 00 00 00       	mov    esi,0x0
ffff80000010738c:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107391:	49 89 df             	mov    r15,rbx
ffff800000107394:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107399:	49 ba c1 94 ff ff ff 	movabs r10,0xffffffffffff94c1
ffff8000001073a0:	ff ff ff 
ffff8000001073a3:	49 01 da             	add    r10,rbx
ffff8000001073a6:	41 ff d2             	call   r10
ffff8000001073a9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff8000001073ad:	83 e0 01             	and    eax,0x1
ffff8000001073b0:	48 85 c0             	test   rax,rax
ffff8000001073b3:	74 2f                	je     ffff8000001073e4 <do_invalid_TSS+0xc8>
ffff8000001073b5:	48 b8 78 06 00 00 00 	movabs rax,0x678
ffff8000001073bc:	00 00 00 
ffff8000001073bf:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff8000001073c3:	be 00 00 00 00       	mov    esi,0x0
ffff8000001073c8:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001073cd:	49 89 df             	mov    r15,rbx
ffff8000001073d0:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001073d5:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff8000001073dc:	ff ff ff 
ffff8000001073df:	48 01 d9             	add    rcx,rbx
ffff8000001073e2:	ff d1                	call   rcx
ffff8000001073e4:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff8000001073e8:	83 e0 02             	and    eax,0x2
ffff8000001073eb:	48 85 c0             	test   rax,rax
ffff8000001073ee:	74 31                	je     ffff800000107421 <do_invalid_TSS+0x105>
ffff8000001073f0:	48 b8 f8 06 00 00 00 	movabs rax,0x6f8
ffff8000001073f7:	00 00 00 
ffff8000001073fa:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff8000001073fe:	be 00 00 00 00       	mov    esi,0x0
ffff800000107403:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107408:	49 89 df             	mov    r15,rbx
ffff80000010740b:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107410:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107417:	ff ff ff 
ffff80000010741a:	48 01 d9             	add    rcx,rbx
ffff80000010741d:	ff d1                	call   rcx
ffff80000010741f:	eb 2f                	jmp    ffff800000107450 <do_invalid_TSS+0x134>
ffff800000107421:	48 b8 28 07 00 00 00 	movabs rax,0x728
ffff800000107428:	00 00 00 
ffff80000010742b:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff80000010742f:	be 00 00 00 00       	mov    esi,0x0
ffff800000107434:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107439:	49 89 df             	mov    r15,rbx
ffff80000010743c:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107441:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107448:	ff ff ff 
ffff80000010744b:	48 01 d9             	add    rcx,rbx
ffff80000010744e:	ff d1                	call   rcx
ffff800000107450:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107454:	83 e0 02             	and    eax,0x2
ffff800000107457:	48 85 c0             	test   rax,rax
ffff80000010745a:	75 6c                	jne    ffff8000001074c8 <do_invalid_TSS+0x1ac>
ffff80000010745c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107460:	83 e0 04             	and    eax,0x4
ffff800000107463:	48 85 c0             	test   rax,rax
ffff800000107466:	74 31                	je     ffff800000107499 <do_invalid_TSS+0x17d>
ffff800000107468:	48 b8 60 07 00 00 00 	movabs rax,0x760
ffff80000010746f:	00 00 00 
ffff800000107472:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107476:	be 00 00 00 00       	mov    esi,0x0
ffff80000010747b:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107480:	49 89 df             	mov    r15,rbx
ffff800000107483:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107488:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff80000010748f:	ff ff ff 
ffff800000107492:	48 01 d9             	add    rcx,rbx
ffff800000107495:	ff d1                	call   rcx
ffff800000107497:	eb 2f                	jmp    ffff8000001074c8 <do_invalid_TSS+0x1ac>
ffff800000107499:	48 b8 98 07 00 00 00 	movabs rax,0x798
ffff8000001074a0:	00 00 00 
ffff8000001074a3:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff8000001074a7:	be 00 00 00 00       	mov    esi,0x0
ffff8000001074ac:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001074b1:	49 89 df             	mov    r15,rbx
ffff8000001074b4:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001074b9:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff8000001074c0:	ff ff ff 
ffff8000001074c3:	48 01 d9             	add    rcx,rbx
ffff8000001074c6:	ff d1                	call   rcx
ffff8000001074c8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff8000001074cc:	25 f8 ff 00 00       	and    eax,0xfff8
ffff8000001074d1:	48 89 c1             	mov    rcx,rax
ffff8000001074d4:	48 b8 c8 07 00 00 00 	movabs rax,0x7c8
ffff8000001074db:	00 00 00 
ffff8000001074de:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff8000001074e2:	be 00 00 00 00       	mov    esi,0x0
ffff8000001074e7:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001074ec:	49 89 df             	mov    r15,rbx
ffff8000001074ef:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001074f4:	49 b8 c1 94 ff ff ff 	movabs r8,0xffffffffffff94c1
ffff8000001074fb:	ff ff ff 
ffff8000001074fe:	49 01 d8             	add    r8,rbx
ffff800000107501:	41 ff d0             	call   r8
ffff800000107504:	eb fe                	jmp    ffff800000107504 <do_invalid_TSS+0x1e8>

ffff800000107506 <do_segment_not_present>:
ffff800000107506:	f3 0f 1e fa          	endbr64 
ffff80000010750a:	55                   	push   rbp
ffff80000010750b:	48 89 e5             	mov    rbp,rsp
ffff80000010750e:	41 57                	push   r15
ffff800000107510:	53                   	push   rbx
ffff800000107511:	48 83 ec 20          	sub    rsp,0x20
ffff800000107515:	f3 0f 1e fa          	endbr64 
ffff800000107519:	48 8d 1d f5 ff ff ff 	lea    rbx,[rip+0xfffffffffffffff5]        # ffff800000107515 <do_segment_not_present+0xf>
ffff800000107520:	49 bb 5b 52 00 00 00 	movabs r11,0x525b
ffff800000107527:	00 00 00 
ffff80000010752a:	4c 01 db             	add    rbx,r11
ffff80000010752d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000107531:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000107535:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff80000010753c:	00 
ffff80000010753d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000107541:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107547:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff80000010754b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff80000010754f:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000107552:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000107556:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff80000010755a:	49 89 c9             	mov    r9,rcx
ffff80000010755d:	49 89 d0             	mov    r8,rdx
ffff800000107560:	48 89 c1             	mov    rcx,rax
ffff800000107563:	48 b8 e8 07 00 00 00 	movabs rax,0x7e8
ffff80000010756a:	00 00 00 
ffff80000010756d:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107571:	be 00 00 00 00       	mov    esi,0x0
ffff800000107576:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff80000010757b:	49 89 df             	mov    r15,rbx
ffff80000010757e:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107583:	49 ba c1 94 ff ff ff 	movabs r10,0xffffffffffff94c1
ffff80000010758a:	ff ff ff 
ffff80000010758d:	49 01 da             	add    r10,rbx
ffff800000107590:	41 ff d2             	call   r10
ffff800000107593:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107597:	83 e0 01             	and    eax,0x1
ffff80000010759a:	48 85 c0             	test   rax,rax
ffff80000010759d:	74 2f                	je     ffff8000001075ce <do_segment_not_present+0xc8>
ffff80000010759f:	48 b8 78 06 00 00 00 	movabs rax,0x678
ffff8000001075a6:	00 00 00 
ffff8000001075a9:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff8000001075ad:	be 00 00 00 00       	mov    esi,0x0
ffff8000001075b2:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001075b7:	49 89 df             	mov    r15,rbx
ffff8000001075ba:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001075bf:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff8000001075c6:	ff ff ff 
ffff8000001075c9:	48 01 d9             	add    rcx,rbx
ffff8000001075cc:	ff d1                	call   rcx
ffff8000001075ce:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff8000001075d2:	83 e0 02             	and    eax,0x2
ffff8000001075d5:	48 85 c0             	test   rax,rax
ffff8000001075d8:	74 31                	je     ffff80000010760b <do_segment_not_present+0x105>
ffff8000001075da:	48 b8 f8 06 00 00 00 	movabs rax,0x6f8
ffff8000001075e1:	00 00 00 
ffff8000001075e4:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff8000001075e8:	be 00 00 00 00       	mov    esi,0x0
ffff8000001075ed:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001075f2:	49 89 df             	mov    r15,rbx
ffff8000001075f5:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001075fa:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107601:	ff ff ff 
ffff800000107604:	48 01 d9             	add    rcx,rbx
ffff800000107607:	ff d1                	call   rcx
ffff800000107609:	eb 2f                	jmp    ffff80000010763a <do_segment_not_present+0x134>
ffff80000010760b:	48 b8 28 07 00 00 00 	movabs rax,0x728
ffff800000107612:	00 00 00 
ffff800000107615:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107619:	be 00 00 00 00       	mov    esi,0x0
ffff80000010761e:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107623:	49 89 df             	mov    r15,rbx
ffff800000107626:	b8 00 00 00 00       	mov    eax,0x0
ffff80000010762b:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107632:	ff ff ff 
ffff800000107635:	48 01 d9             	add    rcx,rbx
ffff800000107638:	ff d1                	call   rcx
ffff80000010763a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff80000010763e:	83 e0 02             	and    eax,0x2
ffff800000107641:	48 85 c0             	test   rax,rax
ffff800000107644:	75 6c                	jne    ffff8000001076b2 <do_segment_not_present+0x1ac>
ffff800000107646:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff80000010764a:	83 e0 04             	and    eax,0x4
ffff80000010764d:	48 85 c0             	test   rax,rax
ffff800000107650:	74 31                	je     ffff800000107683 <do_segment_not_present+0x17d>
ffff800000107652:	48 b8 60 07 00 00 00 	movabs rax,0x760
ffff800000107659:	00 00 00 
ffff80000010765c:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107660:	be 00 00 00 00       	mov    esi,0x0
ffff800000107665:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff80000010766a:	49 89 df             	mov    r15,rbx
ffff80000010766d:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107672:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107679:	ff ff ff 
ffff80000010767c:	48 01 d9             	add    rcx,rbx
ffff80000010767f:	ff d1                	call   rcx
ffff800000107681:	eb 2f                	jmp    ffff8000001076b2 <do_segment_not_present+0x1ac>
ffff800000107683:	48 b8 98 07 00 00 00 	movabs rax,0x798
ffff80000010768a:	00 00 00 
ffff80000010768d:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107691:	be 00 00 00 00       	mov    esi,0x0
ffff800000107696:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff80000010769b:	49 89 df             	mov    r15,rbx
ffff80000010769e:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001076a3:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff8000001076aa:	ff ff ff 
ffff8000001076ad:	48 01 d9             	add    rcx,rbx
ffff8000001076b0:	ff d1                	call   rcx
ffff8000001076b2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff8000001076b6:	25 f8 ff 00 00       	and    eax,0xfff8
ffff8000001076bb:	48 89 c1             	mov    rcx,rax
ffff8000001076be:	48 b8 c8 07 00 00 00 	movabs rax,0x7c8
ffff8000001076c5:	00 00 00 
ffff8000001076c8:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff8000001076cc:	be 00 00 00 00       	mov    esi,0x0
ffff8000001076d1:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001076d6:	49 89 df             	mov    r15,rbx
ffff8000001076d9:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001076de:	49 b8 c1 94 ff ff ff 	movabs r8,0xffffffffffff94c1
ffff8000001076e5:	ff ff ff 
ffff8000001076e8:	49 01 d8             	add    r8,rbx
ffff8000001076eb:	41 ff d0             	call   r8
ffff8000001076ee:	eb fe                	jmp    ffff8000001076ee <do_segment_not_present+0x1e8>

ffff8000001076f0 <do_stack_segment_fault>:
ffff8000001076f0:	f3 0f 1e fa          	endbr64 
ffff8000001076f4:	55                   	push   rbp
ffff8000001076f5:	48 89 e5             	mov    rbp,rsp
ffff8000001076f8:	41 57                	push   r15
ffff8000001076fa:	53                   	push   rbx
ffff8000001076fb:	48 83 ec 20          	sub    rsp,0x20
ffff8000001076ff:	f3 0f 1e fa          	endbr64 
ffff800000107703:	48 8d 1d f5 ff ff ff 	lea    rbx,[rip+0xfffffffffffffff5]        # ffff8000001076ff <do_stack_segment_fault+0xf>
ffff80000010770a:	49 bb 71 50 00 00 00 	movabs r11,0x5071
ffff800000107711:	00 00 00 
ffff800000107714:	4c 01 db             	add    rbx,r11
ffff800000107717:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff80000010771b:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff80000010771f:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000107726:	00 
ffff800000107727:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff80000010772b:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107731:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000107735:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000107739:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff80000010773c:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000107740:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107744:	49 89 c9             	mov    r9,rcx
ffff800000107747:	49 89 d0             	mov    r8,rdx
ffff80000010774a:	48 89 c1             	mov    rcx,rax
ffff80000010774d:	48 b8 30 08 00 00 00 	movabs rax,0x830
ffff800000107754:	00 00 00 
ffff800000107757:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff80000010775b:	be 00 00 00 00       	mov    esi,0x0
ffff800000107760:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107765:	49 89 df             	mov    r15,rbx
ffff800000107768:	b8 00 00 00 00       	mov    eax,0x0
ffff80000010776d:	49 ba c1 94 ff ff ff 	movabs r10,0xffffffffffff94c1
ffff800000107774:	ff ff ff 
ffff800000107777:	49 01 da             	add    r10,rbx
ffff80000010777a:	41 ff d2             	call   r10
ffff80000010777d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107781:	83 e0 01             	and    eax,0x1
ffff800000107784:	48 85 c0             	test   rax,rax
ffff800000107787:	74 2f                	je     ffff8000001077b8 <do_stack_segment_fault+0xc8>
ffff800000107789:	48 b8 78 06 00 00 00 	movabs rax,0x678
ffff800000107790:	00 00 00 
ffff800000107793:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107797:	be 00 00 00 00       	mov    esi,0x0
ffff80000010779c:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001077a1:	49 89 df             	mov    r15,rbx
ffff8000001077a4:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001077a9:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff8000001077b0:	ff ff ff 
ffff8000001077b3:	48 01 d9             	add    rcx,rbx
ffff8000001077b6:	ff d1                	call   rcx
ffff8000001077b8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff8000001077bc:	83 e0 02             	and    eax,0x2
ffff8000001077bf:	48 85 c0             	test   rax,rax
ffff8000001077c2:	74 31                	je     ffff8000001077f5 <do_stack_segment_fault+0x105>
ffff8000001077c4:	48 b8 f8 06 00 00 00 	movabs rax,0x6f8
ffff8000001077cb:	00 00 00 
ffff8000001077ce:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff8000001077d2:	be 00 00 00 00       	mov    esi,0x0
ffff8000001077d7:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001077dc:	49 89 df             	mov    r15,rbx
ffff8000001077df:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001077e4:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff8000001077eb:	ff ff ff 
ffff8000001077ee:	48 01 d9             	add    rcx,rbx
ffff8000001077f1:	ff d1                	call   rcx
ffff8000001077f3:	eb 2f                	jmp    ffff800000107824 <do_stack_segment_fault+0x134>
ffff8000001077f5:	48 b8 28 07 00 00 00 	movabs rax,0x728
ffff8000001077fc:	00 00 00 
ffff8000001077ff:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107803:	be 00 00 00 00       	mov    esi,0x0
ffff800000107808:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff80000010780d:	49 89 df             	mov    r15,rbx
ffff800000107810:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107815:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff80000010781c:	ff ff ff 
ffff80000010781f:	48 01 d9             	add    rcx,rbx
ffff800000107822:	ff d1                	call   rcx
ffff800000107824:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107828:	83 e0 02             	and    eax,0x2
ffff80000010782b:	48 85 c0             	test   rax,rax
ffff80000010782e:	75 6c                	jne    ffff80000010789c <do_stack_segment_fault+0x1ac>
ffff800000107830:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107834:	83 e0 04             	and    eax,0x4
ffff800000107837:	48 85 c0             	test   rax,rax
ffff80000010783a:	74 31                	je     ffff80000010786d <do_stack_segment_fault+0x17d>
ffff80000010783c:	48 b8 60 07 00 00 00 	movabs rax,0x760
ffff800000107843:	00 00 00 
ffff800000107846:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff80000010784a:	be 00 00 00 00       	mov    esi,0x0
ffff80000010784f:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107854:	49 89 df             	mov    r15,rbx
ffff800000107857:	b8 00 00 00 00       	mov    eax,0x0
ffff80000010785c:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107863:	ff ff ff 
ffff800000107866:	48 01 d9             	add    rcx,rbx
ffff800000107869:	ff d1                	call   rcx
ffff80000010786b:	eb 2f                	jmp    ffff80000010789c <do_stack_segment_fault+0x1ac>
ffff80000010786d:	48 b8 98 07 00 00 00 	movabs rax,0x798
ffff800000107874:	00 00 00 
ffff800000107877:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff80000010787b:	be 00 00 00 00       	mov    esi,0x0
ffff800000107880:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107885:	49 89 df             	mov    r15,rbx
ffff800000107888:	b8 00 00 00 00       	mov    eax,0x0
ffff80000010788d:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107894:	ff ff ff 
ffff800000107897:	48 01 d9             	add    rcx,rbx
ffff80000010789a:	ff d1                	call   rcx
ffff80000010789c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff8000001078a0:	25 f8 ff 00 00       	and    eax,0xfff8
ffff8000001078a5:	48 89 c1             	mov    rcx,rax
ffff8000001078a8:	48 b8 c8 07 00 00 00 	movabs rax,0x7c8
ffff8000001078af:	00 00 00 
ffff8000001078b2:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff8000001078b6:	be 00 00 00 00       	mov    esi,0x0
ffff8000001078bb:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001078c0:	49 89 df             	mov    r15,rbx
ffff8000001078c3:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001078c8:	49 b8 c1 94 ff ff ff 	movabs r8,0xffffffffffff94c1
ffff8000001078cf:	ff ff ff 
ffff8000001078d2:	49 01 d8             	add    r8,rbx
ffff8000001078d5:	41 ff d0             	call   r8
ffff8000001078d8:	eb fe                	jmp    ffff8000001078d8 <do_stack_segment_fault+0x1e8>

ffff8000001078da <do_general_protection>:
ffff8000001078da:	f3 0f 1e fa          	endbr64 
ffff8000001078de:	55                   	push   rbp
ffff8000001078df:	48 89 e5             	mov    rbp,rsp
ffff8000001078e2:	41 57                	push   r15
ffff8000001078e4:	53                   	push   rbx
ffff8000001078e5:	48 83 ec 20          	sub    rsp,0x20
ffff8000001078e9:	f3 0f 1e fa          	endbr64 
ffff8000001078ed:	48 8d 1d f5 ff ff ff 	lea    rbx,[rip+0xfffffffffffffff5]        # ffff8000001078e9 <do_general_protection+0xf>
ffff8000001078f4:	49 bb 87 4e 00 00 00 	movabs r11,0x4e87
ffff8000001078fb:	00 00 00 
ffff8000001078fe:	4c 01 db             	add    rbx,r11
ffff800000107901:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000107905:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000107909:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000107910:	00 
ffff800000107911:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000107915:	48 05 98 00 00 00    	add    rax,0x98
ffff80000010791b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff80000010791f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000107923:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000107926:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff80000010792a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff80000010792e:	49 89 c9             	mov    r9,rcx
ffff800000107931:	49 89 d0             	mov    r8,rdx
ffff800000107934:	48 89 c1             	mov    rcx,rax
ffff800000107937:	48 b8 78 08 00 00 00 	movabs rax,0x878
ffff80000010793e:	00 00 00 
ffff800000107941:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107945:	be 00 00 00 00       	mov    esi,0x0
ffff80000010794a:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff80000010794f:	49 89 df             	mov    r15,rbx
ffff800000107952:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107957:	49 ba c1 94 ff ff ff 	movabs r10,0xffffffffffff94c1
ffff80000010795e:	ff ff ff 
ffff800000107961:	49 01 da             	add    r10,rbx
ffff800000107964:	41 ff d2             	call   r10
ffff800000107967:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff80000010796b:	83 e0 01             	and    eax,0x1
ffff80000010796e:	48 85 c0             	test   rax,rax
ffff800000107971:	74 2f                	je     ffff8000001079a2 <do_general_protection+0xc8>
ffff800000107973:	48 b8 78 06 00 00 00 	movabs rax,0x678
ffff80000010797a:	00 00 00 
ffff80000010797d:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107981:	be 00 00 00 00       	mov    esi,0x0
ffff800000107986:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff80000010798b:	49 89 df             	mov    r15,rbx
ffff80000010798e:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107993:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff80000010799a:	ff ff ff 
ffff80000010799d:	48 01 d9             	add    rcx,rbx
ffff8000001079a0:	ff d1                	call   rcx
ffff8000001079a2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff8000001079a6:	83 e0 02             	and    eax,0x2
ffff8000001079a9:	48 85 c0             	test   rax,rax
ffff8000001079ac:	74 31                	je     ffff8000001079df <do_general_protection+0x105>
ffff8000001079ae:	48 b8 f8 06 00 00 00 	movabs rax,0x6f8
ffff8000001079b5:	00 00 00 
ffff8000001079b8:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff8000001079bc:	be 00 00 00 00       	mov    esi,0x0
ffff8000001079c1:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001079c6:	49 89 df             	mov    r15,rbx
ffff8000001079c9:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001079ce:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff8000001079d5:	ff ff ff 
ffff8000001079d8:	48 01 d9             	add    rcx,rbx
ffff8000001079db:	ff d1                	call   rcx
ffff8000001079dd:	eb 2f                	jmp    ffff800000107a0e <do_general_protection+0x134>
ffff8000001079df:	48 b8 28 07 00 00 00 	movabs rax,0x728
ffff8000001079e6:	00 00 00 
ffff8000001079e9:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff8000001079ed:	be 00 00 00 00       	mov    esi,0x0
ffff8000001079f2:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff8000001079f7:	49 89 df             	mov    r15,rbx
ffff8000001079fa:	b8 00 00 00 00       	mov    eax,0x0
ffff8000001079ff:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107a06:	ff ff ff 
ffff800000107a09:	48 01 d9             	add    rcx,rbx
ffff800000107a0c:	ff d1                	call   rcx
ffff800000107a0e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107a12:	83 e0 02             	and    eax,0x2
ffff800000107a15:	48 85 c0             	test   rax,rax
ffff800000107a18:	75 6c                	jne    ffff800000107a86 <do_general_protection+0x1ac>
ffff800000107a1a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107a1e:	83 e0 04             	and    eax,0x4
ffff800000107a21:	48 85 c0             	test   rax,rax
ffff800000107a24:	74 31                	je     ffff800000107a57 <do_general_protection+0x17d>
ffff800000107a26:	48 b8 60 07 00 00 00 	movabs rax,0x760
ffff800000107a2d:	00 00 00 
ffff800000107a30:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107a34:	be 00 00 00 00       	mov    esi,0x0
ffff800000107a39:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107a3e:	49 89 df             	mov    r15,rbx
ffff800000107a41:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107a46:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107a4d:	ff ff ff 
ffff800000107a50:	48 01 d9             	add    rcx,rbx
ffff800000107a53:	ff d1                	call   rcx
ffff800000107a55:	eb 2f                	jmp    ffff800000107a86 <do_general_protection+0x1ac>
ffff800000107a57:	48 b8 98 07 00 00 00 	movabs rax,0x798
ffff800000107a5e:	00 00 00 
ffff800000107a61:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107a65:	be 00 00 00 00       	mov    esi,0x0
ffff800000107a6a:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107a6f:	49 89 df             	mov    r15,rbx
ffff800000107a72:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107a77:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107a7e:	ff ff ff 
ffff800000107a81:	48 01 d9             	add    rcx,rbx
ffff800000107a84:	ff d1                	call   rcx
ffff800000107a86:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107a8a:	25 f8 ff 00 00       	and    eax,0xfff8
ffff800000107a8f:	48 89 c1             	mov    rcx,rax
ffff800000107a92:	48 b8 c8 07 00 00 00 	movabs rax,0x7c8
ffff800000107a99:	00 00 00 
ffff800000107a9c:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107aa0:	be 00 00 00 00       	mov    esi,0x0
ffff800000107aa5:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107aaa:	49 89 df             	mov    r15,rbx
ffff800000107aad:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107ab2:	49 b8 c1 94 ff ff ff 	movabs r8,0xffffffffffff94c1
ffff800000107ab9:	ff ff ff 
ffff800000107abc:	49 01 d8             	add    r8,rbx
ffff800000107abf:	41 ff d0             	call   r8
ffff800000107ac2:	eb fe                	jmp    ffff800000107ac2 <do_general_protection+0x1e8>

ffff800000107ac4 <do_page_fault>:
ffff800000107ac4:	f3 0f 1e fa          	endbr64 
ffff800000107ac8:	55                   	push   rbp
ffff800000107ac9:	48 89 e5             	mov    rbp,rsp
ffff800000107acc:	41 57                	push   r15
ffff800000107ace:	53                   	push   rbx
ffff800000107acf:	48 83 ec 20          	sub    rsp,0x20
ffff800000107ad3:	f3 0f 1e fa          	endbr64 
ffff800000107ad7:	48 8d 1d f5 ff ff ff 	lea    rbx,[rip+0xfffffffffffffff5]        # ffff800000107ad3 <do_page_fault+0xf>
ffff800000107ade:	49 bb 9d 4c 00 00 00 	movabs r11,0x4c9d
ffff800000107ae5:	00 00 00 
ffff800000107ae8:	4c 01 db             	add    rbx,r11
ffff800000107aeb:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000107aef:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000107af3:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000107afa:	00 
ffff800000107afb:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
ffff800000107b02:	00 
ffff800000107b03:	0f 20 d0             	mov    rax,cr2
ffff800000107b06:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
ffff800000107b0a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000107b0e:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107b14:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000107b18:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000107b1c:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000107b1f:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000107b23:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107b27:	49 89 c9             	mov    r9,rcx
ffff800000107b2a:	49 89 d0             	mov    r8,rdx
ffff800000107b2d:	48 89 c1             	mov    rcx,rax
ffff800000107b30:	48 b8 c0 08 00 00 00 	movabs rax,0x8c0
ffff800000107b37:	00 00 00 
ffff800000107b3a:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107b3e:	be 00 00 00 00       	mov    esi,0x0
ffff800000107b43:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107b48:	49 89 df             	mov    r15,rbx
ffff800000107b4b:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107b50:	49 ba c1 94 ff ff ff 	movabs r10,0xffffffffffff94c1
ffff800000107b57:	ff ff ff 
ffff800000107b5a:	49 01 da             	add    r10,rbx
ffff800000107b5d:	41 ff d2             	call   r10
ffff800000107b60:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107b64:	83 e0 01             	and    eax,0x1
ffff800000107b67:	48 85 c0             	test   rax,rax
ffff800000107b6a:	75 2f                	jne    ffff800000107b9b <do_page_fault+0xd7>
ffff800000107b6c:	48 b8 fe 08 00 00 00 	movabs rax,0x8fe
ffff800000107b73:	00 00 00 
ffff800000107b76:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107b7a:	be 00 00 00 00       	mov    esi,0x0
ffff800000107b7f:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107b84:	49 89 df             	mov    r15,rbx
ffff800000107b87:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107b8c:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107b93:	ff ff ff 
ffff800000107b96:	48 01 d9             	add    rcx,rbx
ffff800000107b99:	ff d1                	call   rcx
ffff800000107b9b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107b9f:	83 e0 02             	and    eax,0x2
ffff800000107ba2:	48 85 c0             	test   rax,rax
ffff800000107ba5:	74 31                	je     ffff800000107bd8 <do_page_fault+0x114>
ffff800000107ba7:	48 b8 11 09 00 00 00 	movabs rax,0x911
ffff800000107bae:	00 00 00 
ffff800000107bb1:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107bb5:	be 00 00 00 00       	mov    esi,0x0
ffff800000107bba:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107bbf:	49 89 df             	mov    r15,rbx
ffff800000107bc2:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107bc7:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107bce:	ff ff ff 
ffff800000107bd1:	48 01 d9             	add    rcx,rbx
ffff800000107bd4:	ff d1                	call   rcx
ffff800000107bd6:	eb 2f                	jmp    ffff800000107c07 <do_page_fault+0x143>
ffff800000107bd8:	48 b8 25 09 00 00 00 	movabs rax,0x925
ffff800000107bdf:	00 00 00 
ffff800000107be2:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107be6:	be 00 00 00 00       	mov    esi,0x0
ffff800000107beb:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107bf0:	49 89 df             	mov    r15,rbx
ffff800000107bf3:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107bf8:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107bff:	ff ff ff 
ffff800000107c02:	48 01 d9             	add    rcx,rbx
ffff800000107c05:	ff d1                	call   rcx
ffff800000107c07:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107c0b:	83 e0 04             	and    eax,0x4
ffff800000107c0e:	48 85 c0             	test   rax,rax
ffff800000107c11:	74 31                	je     ffff800000107c44 <do_page_fault+0x180>
ffff800000107c13:	48 b8 38 09 00 00 00 	movabs rax,0x938
ffff800000107c1a:	00 00 00 
ffff800000107c1d:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107c21:	be 00 00 00 00       	mov    esi,0x0
ffff800000107c26:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107c2b:	49 89 df             	mov    r15,rbx
ffff800000107c2e:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107c33:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107c3a:	ff ff ff 
ffff800000107c3d:	48 01 d9             	add    rcx,rbx
ffff800000107c40:	ff d1                	call   rcx
ffff800000107c42:	eb 2f                	jmp    ffff800000107c73 <do_page_fault+0x1af>
ffff800000107c44:	48 b8 4a 09 00 00 00 	movabs rax,0x94a
ffff800000107c4b:	00 00 00 
ffff800000107c4e:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107c52:	be 00 00 00 00       	mov    esi,0x0
ffff800000107c57:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107c5c:	49 89 df             	mov    r15,rbx
ffff800000107c5f:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107c64:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107c6b:	ff ff ff 
ffff800000107c6e:	48 01 d9             	add    rcx,rbx
ffff800000107c71:	ff d1                	call   rcx
ffff800000107c73:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107c77:	83 e0 08             	and    eax,0x8
ffff800000107c7a:	48 85 c0             	test   rax,rax
ffff800000107c7d:	74 2f                	je     ffff800000107cae <do_page_fault+0x1ea>
ffff800000107c7f:	48 b8 66 09 00 00 00 	movabs rax,0x966
ffff800000107c86:	00 00 00 
ffff800000107c89:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107c8d:	be 00 00 00 00       	mov    esi,0x0
ffff800000107c92:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107c97:	49 89 df             	mov    r15,rbx
ffff800000107c9a:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107c9f:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107ca6:	ff ff ff 
ffff800000107ca9:	48 01 d9             	add    rcx,rbx
ffff800000107cac:	ff d1                	call   rcx
ffff800000107cae:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107cb2:	83 e0 10             	and    eax,0x10
ffff800000107cb5:	48 85 c0             	test   rax,rax
ffff800000107cb8:	74 2f                	je     ffff800000107ce9 <do_page_fault+0x225>
ffff800000107cba:	48 b8 88 09 00 00 00 	movabs rax,0x988
ffff800000107cc1:	00 00 00 
ffff800000107cc4:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107cc8:	be 00 00 00 00       	mov    esi,0x0
ffff800000107ccd:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107cd2:	49 89 df             	mov    r15,rbx
ffff800000107cd5:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107cda:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107ce1:	ff ff ff 
ffff800000107ce4:	48 01 d9             	add    rcx,rbx
ffff800000107ce7:	ff d1                	call   rcx
ffff800000107ce9:	48 b8 a7 09 00 00 00 	movabs rax,0x9a7
ffff800000107cf0:	00 00 00 
ffff800000107cf3:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107cf7:	be 00 00 00 00       	mov    esi,0x0
ffff800000107cfc:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107d01:	49 89 df             	mov    r15,rbx
ffff800000107d04:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107d09:	48 b9 c1 94 ff ff ff 	movabs rcx,0xffffffffffff94c1
ffff800000107d10:	ff ff ff 
ffff800000107d13:	48 01 d9             	add    rcx,rbx
ffff800000107d16:	ff d1                	call   rcx
ffff800000107d18:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
ffff800000107d1c:	48 89 c1             	mov    rcx,rax
ffff800000107d1f:	48 b8 a9 09 00 00 00 	movabs rax,0x9a9
ffff800000107d26:	00 00 00 
ffff800000107d29:	48 8d 14 03          	lea    rdx,[rbx+rax*1]
ffff800000107d2d:	be 00 00 00 00       	mov    esi,0x0
ffff800000107d32:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107d37:	49 89 df             	mov    r15,rbx
ffff800000107d3a:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107d3f:	49 b8 c1 94 ff ff ff 	movabs r8,0xffffffffffff94c1
ffff800000107d46:	ff ff ff 
ffff800000107d49:	49 01 d8             	add    r8,rbx
ffff800000107d4c:	41 ff d0             	call   r8
ffff800000107d4f:	eb fe                	jmp    ffff800000107d4f <do_page_fault+0x28b>

ffff800000107d51 <do_x87_FPU_error>:
ffff800000107d51:	f3 0f 1e fa          	endbr64 
ffff800000107d55:	55                   	push   rbp
ffff800000107d56:	48 89 e5             	mov    rbp,rsp
ffff800000107d59:	41 57                	push   r15
ffff800000107d5b:	48 83 ec 28          	sub    rsp,0x28
ffff800000107d5f:	f3 0f 1e fa          	endbr64 
ffff800000107d63:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000107d5f <do_x87_FPU_error+0xe>
ffff800000107d6a:	49 bb 11 4a 00 00 00 	movabs r11,0x4a11
ffff800000107d71:	00 00 00 
ffff800000107d74:	4d 01 da             	add    r10,r11
ffff800000107d77:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000107d7b:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000107d7f:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000107d86:	00 
ffff800000107d87:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000107d8b:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107d91:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000107d95:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000107d99:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000107d9c:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000107da0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107da4:	49 89 c9             	mov    r9,rcx
ffff800000107da7:	49 89 d0             	mov    r8,rdx
ffff800000107daa:	48 89 c1             	mov    rcx,rax
ffff800000107dad:	48 b8 b8 09 00 00 00 	movabs rax,0x9b8
ffff800000107db4:	00 00 00 
ffff800000107db7:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff800000107dbb:	be 00 00 00 00       	mov    esi,0x0
ffff800000107dc0:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107dc5:	4d 89 d7             	mov    r15,r10
ffff800000107dc8:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107dcd:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff800000107dd4:	ff ff ff 
ffff800000107dd7:	4d 01 d3             	add    r11,r10
ffff800000107dda:	41 ff d3             	call   r11
ffff800000107ddd:	eb fe                	jmp    ffff800000107ddd <do_x87_FPU_error+0x8c>

ffff800000107ddf <do_alignment_check>:
ffff800000107ddf:	f3 0f 1e fa          	endbr64 
ffff800000107de3:	55                   	push   rbp
ffff800000107de4:	48 89 e5             	mov    rbp,rsp
ffff800000107de7:	41 57                	push   r15
ffff800000107de9:	48 83 ec 28          	sub    rsp,0x28
ffff800000107ded:	f3 0f 1e fa          	endbr64 
ffff800000107df1:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000107ded <do_alignment_check+0xe>
ffff800000107df8:	49 bb 83 49 00 00 00 	movabs r11,0x4983
ffff800000107dff:	00 00 00 
ffff800000107e02:	4d 01 da             	add    r10,r11
ffff800000107e05:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000107e09:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000107e0d:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000107e14:	00 
ffff800000107e15:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000107e19:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107e1f:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000107e23:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000107e27:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000107e2a:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000107e2e:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107e32:	49 89 c9             	mov    r9,rcx
ffff800000107e35:	49 89 d0             	mov    r8,rdx
ffff800000107e38:	48 89 c1             	mov    rcx,rax
ffff800000107e3b:	48 b8 00 0a 00 00 00 	movabs rax,0xa00
ffff800000107e42:	00 00 00 
ffff800000107e45:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff800000107e49:	be 00 00 00 00       	mov    esi,0x0
ffff800000107e4e:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107e53:	4d 89 d7             	mov    r15,r10
ffff800000107e56:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107e5b:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff800000107e62:	ff ff ff 
ffff800000107e65:	4d 01 d3             	add    r11,r10
ffff800000107e68:	41 ff d3             	call   r11
ffff800000107e6b:	eb fe                	jmp    ffff800000107e6b <do_alignment_check+0x8c>

ffff800000107e6d <do_machine_check>:
ffff800000107e6d:	f3 0f 1e fa          	endbr64 
ffff800000107e71:	55                   	push   rbp
ffff800000107e72:	48 89 e5             	mov    rbp,rsp
ffff800000107e75:	41 57                	push   r15
ffff800000107e77:	48 83 ec 28          	sub    rsp,0x28
ffff800000107e7b:	f3 0f 1e fa          	endbr64 
ffff800000107e7f:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000107e7b <do_machine_check+0xe>
ffff800000107e86:	49 bb f5 48 00 00 00 	movabs r11,0x48f5
ffff800000107e8d:	00 00 00 
ffff800000107e90:	4d 01 da             	add    r10,r11
ffff800000107e93:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000107e97:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000107e9b:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000107ea2:	00 
ffff800000107ea3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000107ea7:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107ead:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000107eb1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000107eb5:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000107eb8:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000107ebc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107ec0:	49 89 c9             	mov    r9,rcx
ffff800000107ec3:	49 89 d0             	mov    r8,rdx
ffff800000107ec6:	48 89 c1             	mov    rcx,rax
ffff800000107ec9:	48 b8 48 0a 00 00 00 	movabs rax,0xa48
ffff800000107ed0:	00 00 00 
ffff800000107ed3:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff800000107ed7:	be 00 00 00 00       	mov    esi,0x0
ffff800000107edc:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107ee1:	4d 89 d7             	mov    r15,r10
ffff800000107ee4:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107ee9:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff800000107ef0:	ff ff ff 
ffff800000107ef3:	4d 01 d3             	add    r11,r10
ffff800000107ef6:	41 ff d3             	call   r11
ffff800000107ef9:	eb fe                	jmp    ffff800000107ef9 <do_machine_check+0x8c>

ffff800000107efb <do_SIMD_exception>:
ffff800000107efb:	f3 0f 1e fa          	endbr64 
ffff800000107eff:	55                   	push   rbp
ffff800000107f00:	48 89 e5             	mov    rbp,rsp
ffff800000107f03:	41 57                	push   r15
ffff800000107f05:	48 83 ec 28          	sub    rsp,0x28
ffff800000107f09:	f3 0f 1e fa          	endbr64 
ffff800000107f0d:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000107f09 <do_SIMD_exception+0xe>
ffff800000107f14:	49 bb 67 48 00 00 00 	movabs r11,0x4867
ffff800000107f1b:	00 00 00 
ffff800000107f1e:	4d 01 da             	add    r10,r11
ffff800000107f21:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000107f25:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000107f29:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000107f30:	00 
ffff800000107f31:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000107f35:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107f3b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000107f3f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000107f43:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000107f46:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000107f4a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107f4e:	49 89 c9             	mov    r9,rcx
ffff800000107f51:	49 89 d0             	mov    r8,rdx
ffff800000107f54:	48 89 c1             	mov    rcx,rax
ffff800000107f57:	48 b8 90 0a 00 00 00 	movabs rax,0xa90
ffff800000107f5e:	00 00 00 
ffff800000107f61:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff800000107f65:	be 00 00 00 00       	mov    esi,0x0
ffff800000107f6a:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107f6f:	4d 89 d7             	mov    r15,r10
ffff800000107f72:	b8 00 00 00 00       	mov    eax,0x0
ffff800000107f77:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff800000107f7e:	ff ff ff 
ffff800000107f81:	4d 01 d3             	add    r11,r10
ffff800000107f84:	41 ff d3             	call   r11
ffff800000107f87:	eb fe                	jmp    ffff800000107f87 <do_SIMD_exception+0x8c>

ffff800000107f89 <do_virtualization_exception>:
ffff800000107f89:	f3 0f 1e fa          	endbr64 
ffff800000107f8d:	55                   	push   rbp
ffff800000107f8e:	48 89 e5             	mov    rbp,rsp
ffff800000107f91:	41 57                	push   r15
ffff800000107f93:	48 83 ec 28          	sub    rsp,0x28
ffff800000107f97:	f3 0f 1e fa          	endbr64 
ffff800000107f9b:	4c 8d 15 f5 ff ff ff 	lea    r10,[rip+0xfffffffffffffff5]        # ffff800000107f97 <do_virtualization_exception+0xe>
ffff800000107fa2:	49 bb d9 47 00 00 00 	movabs r11,0x47d9
ffff800000107fa9:	00 00 00 
ffff800000107fac:	4d 01 da             	add    r10,r11
ffff800000107faf:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
ffff800000107fb3:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
ffff800000107fb7:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
ffff800000107fbe:	00 
ffff800000107fbf:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
ffff800000107fc3:	48 05 98 00 00 00    	add    rax,0x98
ffff800000107fc9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
ffff800000107fcd:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
ffff800000107fd1:	48 8b 08             	mov    rcx,QWORD PTR [rax]
ffff800000107fd4:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
ffff800000107fd8:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
ffff800000107fdc:	49 89 c9             	mov    r9,rcx
ffff800000107fdf:	49 89 d0             	mov    r8,rdx
ffff800000107fe2:	48 89 c1             	mov    rcx,rax
ffff800000107fe5:	48 b8 d8 0a 00 00 00 	movabs rax,0xad8
ffff800000107fec:	00 00 00 
ffff800000107fef:	49 8d 14 02          	lea    rdx,[r10+rax*1]
ffff800000107ff3:	be 00 00 00 00       	mov    esi,0x0
ffff800000107ff8:	bf 00 00 ff 00       	mov    edi,0xff0000
ffff800000107ffd:	4d 89 d7             	mov    r15,r10
ffff800000108000:	b8 00 00 00 00       	mov    eax,0x0
ffff800000108005:	49 bb c1 94 ff ff ff 	movabs r11,0xffffffffffff94c1
ffff80000010800c:	ff ff ff 
ffff80000010800f:	4d 01 d3             	add    r11,r10
ffff800000108012:	41 ff d3             	call   r11
ffff800000108015:	eb fe                	jmp    ffff800000108015 <do_virtualization_exception+0x8c>

ffff800000108017 <sys_vector_init>:
ffff800000108017:	f3 0f 1e fa          	endbr64 
ffff80000010801b:	55                   	push   rbp
ffff80000010801c:	48 89 e5             	mov    rbp,rsp
ffff80000010801f:	53                   	push   rbx
ffff800000108020:	f3 0f 1e fa          	endbr64 
ffff800000108024:	48 8d 1d f5 ff ff ff 	lea    rbx,[rip+0xfffffffffffffff5]        # ffff800000108020 <sys_vector_init+0x9>
ffff80000010802b:	49 bb 50 47 00 00 00 	movabs r11,0x4750
ffff800000108032:	00 00 00 
ffff800000108035:	4c 01 db             	add    rbx,r11
ffff800000108038:	48 b8 50 ff ff ff ff 	movabs rax,0xffffffffffffff50
ffff80000010803f:	ff ff ff 
ffff800000108042:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff800000108046:	48 89 c2             	mov    rdx,rax
ffff800000108049:	be 01 00 00 00       	mov    esi,0x1
ffff80000010804e:	bf 00 00 00 00       	mov    edi,0x0
ffff800000108053:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff80000010805a:	ff ff ff 
ffff80000010805d:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000108061:	ff d0                	call   rax
ffff800000108063:	48 b8 68 ff ff ff ff 	movabs rax,0xffffffffffffff68
ffff80000010806a:	ff ff ff 
ffff80000010806d:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff800000108071:	48 89 c2             	mov    rdx,rax
ffff800000108074:	be 01 00 00 00       	mov    esi,0x1
ffff800000108079:	bf 01 00 00 00       	mov    edi,0x1
ffff80000010807e:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff800000108085:	ff ff ff 
ffff800000108088:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff80000010808c:	ff d0                	call   rax
ffff80000010808e:	48 b8 e8 ff ff ff ff 	movabs rax,0xffffffffffffffe8
ffff800000108095:	ff ff ff 
ffff800000108098:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff80000010809c:	48 89 c2             	mov    rdx,rax
ffff80000010809f:	be 01 00 00 00       	mov    esi,0x1
ffff8000001080a4:	bf 02 00 00 00       	mov    edi,0x2
ffff8000001080a9:	48 b8 90 78 ff ff ff 	movabs rax,0xffffffffffff7890
ffff8000001080b0:	ff ff ff 
ffff8000001080b3:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001080b7:	ff d0                	call   rax
ffff8000001080b9:	48 b8 f8 ff ff ff ff 	movabs rax,0xfffffffffffffff8
ffff8000001080c0:	ff ff ff 
ffff8000001080c3:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff8000001080c7:	48 89 c2             	mov    rdx,rax
ffff8000001080ca:	be 01 00 00 00       	mov    esi,0x1
ffff8000001080cf:	bf 03 00 00 00       	mov    edi,0x3
ffff8000001080d4:	48 b8 fa 79 ff ff ff 	movabs rax,0xffffffffffff79fa
ffff8000001080db:	ff ff ff 
ffff8000001080de:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001080e2:	ff d0                	call   rax
ffff8000001080e4:	48 b8 60 ff ff ff ff 	movabs rax,0xffffffffffffff60
ffff8000001080eb:	ff ff ff 
ffff8000001080ee:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff8000001080f2:	48 89 c2             	mov    rdx,rax
ffff8000001080f5:	be 01 00 00 00       	mov    esi,0x1
ffff8000001080fa:	bf 04 00 00 00       	mov    edi,0x4
ffff8000001080ff:	48 b8 fa 79 ff ff ff 	movabs rax,0xffffffffffff79fa
ffff800000108106:	ff ff ff 
ffff800000108109:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff80000010810d:	ff d0                	call   rax
ffff80000010810f:	48 b8 70 ff ff ff ff 	movabs rax,0xffffffffffffff70
ffff800000108116:	ff ff ff 
ffff800000108119:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff80000010811d:	48 89 c2             	mov    rdx,rax
ffff800000108120:	be 01 00 00 00       	mov    esi,0x1
ffff800000108125:	bf 05 00 00 00       	mov    edi,0x5
ffff80000010812a:	48 b8 fa 79 ff ff ff 	movabs rax,0xffffffffffff79fa
ffff800000108131:	ff ff ff 
ffff800000108134:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000108138:	ff d0                	call   rax
ffff80000010813a:	48 b8 98 ff ff ff ff 	movabs rax,0xffffffffffffff98
ffff800000108141:	ff ff ff 
ffff800000108144:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff800000108148:	48 89 c2             	mov    rdx,rax
ffff80000010814b:	be 01 00 00 00       	mov    esi,0x1
ffff800000108150:	bf 06 00 00 00       	mov    edi,0x6
ffff800000108155:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff80000010815c:	ff ff ff 
ffff80000010815f:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000108163:	ff d0                	call   rax
ffff800000108165:	48 b8 f0 ff ff ff ff 	movabs rax,0xfffffffffffffff0
ffff80000010816c:	ff ff ff 
ffff80000010816f:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff800000108173:	48 89 c2             	mov    rdx,rax
ffff800000108176:	be 01 00 00 00       	mov    esi,0x1
ffff80000010817b:	bf 07 00 00 00       	mov    edi,0x7
ffff800000108180:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff800000108187:	ff ff ff 
ffff80000010818a:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff80000010818e:	ff d0                	call   rax
ffff800000108190:	48 b8 b8 ff ff ff ff 	movabs rax,0xffffffffffffffb8
ffff800000108197:	ff ff ff 
ffff80000010819a:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff80000010819e:	48 89 c2             	mov    rdx,rax
ffff8000001081a1:	be 01 00 00 00       	mov    esi,0x1
ffff8000001081a6:	bf 08 00 00 00       	mov    edi,0x8
ffff8000001081ab:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff8000001081b2:	ff ff ff 
ffff8000001081b5:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001081b9:	ff d0                	call   rax
ffff8000001081bb:	48 b8 c8 ff ff ff ff 	movabs rax,0xffffffffffffffc8
ffff8000001081c2:	ff ff ff 
ffff8000001081c5:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff8000001081c9:	48 89 c2             	mov    rdx,rax
ffff8000001081cc:	be 01 00 00 00       	mov    esi,0x1
ffff8000001081d1:	bf 09 00 00 00       	mov    edi,0x9
ffff8000001081d6:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff8000001081dd:	ff ff ff 
ffff8000001081e0:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001081e4:	ff d0                	call   rax
ffff8000001081e6:	48 b8 78 ff ff ff ff 	movabs rax,0xffffffffffffff78
ffff8000001081ed:	ff ff ff 
ffff8000001081f0:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff8000001081f4:	48 89 c2             	mov    rdx,rax
ffff8000001081f7:	be 01 00 00 00       	mov    esi,0x1
ffff8000001081fc:	bf 0a 00 00 00       	mov    edi,0xa
ffff800000108201:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff800000108208:	ff ff ff 
ffff80000010820b:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff80000010820f:	ff d0                	call   rax
ffff800000108211:	48 b8 80 ff ff ff ff 	movabs rax,0xffffffffffffff80
ffff800000108218:	ff ff ff 
ffff80000010821b:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff80000010821f:	48 89 c2             	mov    rdx,rax
ffff800000108222:	be 01 00 00 00       	mov    esi,0x1
ffff800000108227:	bf 0b 00 00 00       	mov    edi,0xb
ffff80000010822c:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff800000108233:	ff ff ff 
ffff800000108236:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff80000010823a:	ff d0                	call   rax
ffff80000010823c:	48 b8 88 ff ff ff ff 	movabs rax,0xffffffffffffff88
ffff800000108243:	ff ff ff 
ffff800000108246:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff80000010824a:	48 89 c2             	mov    rdx,rax
ffff80000010824d:	be 01 00 00 00       	mov    esi,0x1
ffff800000108252:	bf 0c 00 00 00       	mov    edi,0xc
ffff800000108257:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff80000010825e:	ff ff ff 
ffff800000108261:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000108265:	ff d0                	call   rax
ffff800000108267:	48 b8 58 ff ff ff ff 	movabs rax,0xffffffffffffff58
ffff80000010826e:	ff ff ff 
ffff800000108271:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff800000108275:	48 89 c2             	mov    rdx,rax
ffff800000108278:	be 01 00 00 00       	mov    esi,0x1
ffff80000010827d:	bf 0d 00 00 00       	mov    edi,0xd
ffff800000108282:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff800000108289:	ff ff ff 
ffff80000010828c:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000108290:	ff d0                	call   rax
ffff800000108292:	48 b8 d0 ff ff ff ff 	movabs rax,0xffffffffffffffd0
ffff800000108299:	ff ff ff 
ffff80000010829c:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff8000001082a0:	48 89 c2             	mov    rdx,rax
ffff8000001082a3:	be 01 00 00 00       	mov    esi,0x1
ffff8000001082a8:	bf 0e 00 00 00       	mov    edi,0xe
ffff8000001082ad:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff8000001082b4:	ff ff ff 
ffff8000001082b7:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001082bb:	ff d0                	call   rax
ffff8000001082bd:	48 b8 b0 ff ff ff ff 	movabs rax,0xffffffffffffffb0
ffff8000001082c4:	ff ff ff 
ffff8000001082c7:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff8000001082cb:	48 89 c2             	mov    rdx,rax
ffff8000001082ce:	be 01 00 00 00       	mov    esi,0x1
ffff8000001082d3:	bf 10 00 00 00       	mov    edi,0x10
ffff8000001082d8:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff8000001082df:	ff ff ff 
ffff8000001082e2:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff8000001082e6:	ff d0                	call   rax
ffff8000001082e8:	48 b8 a8 ff ff ff ff 	movabs rax,0xffffffffffffffa8
ffff8000001082ef:	ff ff ff 
ffff8000001082f2:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff8000001082f6:	48 89 c2             	mov    rdx,rax
ffff8000001082f9:	be 01 00 00 00       	mov    esi,0x1
ffff8000001082fe:	bf 11 00 00 00       	mov    edi,0x11
ffff800000108303:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff80000010830a:	ff ff ff 
ffff80000010830d:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000108311:	ff d0                	call   rax
ffff800000108313:	48 b8 d8 ff ff ff ff 	movabs rax,0xffffffffffffffd8
ffff80000010831a:	ff ff ff 
ffff80000010831d:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff800000108321:	48 89 c2             	mov    rdx,rax
ffff800000108324:	be 01 00 00 00       	mov    esi,0x1
ffff800000108329:	bf 12 00 00 00       	mov    edi,0x12
ffff80000010832e:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff800000108335:	ff ff ff 
ffff800000108338:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff80000010833c:	ff d0                	call   rax
ffff80000010833e:	48 b8 e0 ff ff ff ff 	movabs rax,0xffffffffffffffe0
ffff800000108345:	ff ff ff 
ffff800000108348:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff80000010834c:	48 89 c2             	mov    rdx,rax
ffff80000010834f:	be 01 00 00 00       	mov    esi,0x1
ffff800000108354:	bf 13 00 00 00       	mov    edi,0x13
ffff800000108359:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff800000108360:	ff ff ff 
ffff800000108363:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000108367:	ff d0                	call   rax
ffff800000108369:	48 b8 c0 ff ff ff ff 	movabs rax,0xffffffffffffffc0
ffff800000108370:	ff ff ff 
ffff800000108373:	48 8b 04 03          	mov    rax,QWORD PTR [rbx+rax*1]
ffff800000108377:	48 89 c2             	mov    rdx,rax
ffff80000010837a:	be 01 00 00 00       	mov    esi,0x1
ffff80000010837f:	bf 14 00 00 00       	mov    edi,0x14
ffff800000108384:	48 b8 45 79 ff ff ff 	movabs rax,0xffffffffffff7945
ffff80000010838b:	ff ff ff 
ffff80000010838e:	48 8d 04 03          	lea    rax,[rbx+rax*1]
ffff800000108392:	ff d0                	call   rax
ffff800000108394:	90                   	nop
ffff800000108395:	5b                   	pop    rbx
ffff800000108396:	5d                   	pop    rbp
ffff800000108397:	c3                   	ret    

ffff800000108398 <RESTORE_ALL>:
ffff800000108398:	41 5f                	pop    r15
ffff80000010839a:	41 5e                	pop    r14
ffff80000010839c:	41 5d                	pop    r13
ffff80000010839e:	41 5c                	pop    r12
ffff8000001083a0:	41 5b                	pop    r11
ffff8000001083a2:	41 5a                	pop    r10
ffff8000001083a4:	41 59                	pop    r9
ffff8000001083a6:	41 58                	pop    r8
ffff8000001083a8:	5b                   	pop    rbx
ffff8000001083a9:	59                   	pop    rcx
ffff8000001083aa:	5a                   	pop    rdx
ffff8000001083ab:	5e                   	pop    rsi
ffff8000001083ac:	5f                   	pop    rdi
ffff8000001083ad:	5d                   	pop    rbp
ffff8000001083ae:	58                   	pop    rax
ffff8000001083af:	48 8e d8             	mov    ds,rax
ffff8000001083b2:	58                   	pop    rax
ffff8000001083b3:	48 8e c0             	mov    es,rax
ffff8000001083b6:	58                   	pop    rax
ffff8000001083b7:	48 83 c4 10          	add    rsp,0x10
ffff8000001083bb:	48 cf                	iretq  

ffff8000001083bd <ret_from_intr>:
ffff8000001083bd:	eb d9                	jmp    ffff800000108398 <RESTORE_ALL>

ffff8000001083bf <divide_error>:
ffff8000001083bf:	6a 00                	push   0x0
ffff8000001083c1:	50                   	push   rax
ffff8000001083c2:	48 8d 05 c7 e9 ff ff 	lea    rax,[rip+0xffffffffffffe9c7]        # ffff800000106d90 <do_divide_error>
ffff8000001083c9:	48 87 04 24          	xchg   QWORD PTR [rsp],rax

ffff8000001083cd <error_code>:
ffff8000001083cd:	50                   	push   rax
ffff8000001083ce:	48 8c c0             	mov    rax,es
ffff8000001083d1:	50                   	push   rax
ffff8000001083d2:	48 8c d8             	mov    rax,ds
ffff8000001083d5:	50                   	push   rax
ffff8000001083d6:	48 31 c0             	xor    rax,rax
ffff8000001083d9:	55                   	push   rbp
ffff8000001083da:	57                   	push   rdi
ffff8000001083db:	56                   	push   rsi
ffff8000001083dc:	52                   	push   rdx
ffff8000001083dd:	51                   	push   rcx
ffff8000001083de:	53                   	push   rbx
ffff8000001083df:	41 50                	push   r8
ffff8000001083e1:	41 51                	push   r9
ffff8000001083e3:	41 52                	push   r10
ffff8000001083e5:	41 53                	push   r11
ffff8000001083e7:	41 54                	push   r12
ffff8000001083e9:	41 55                	push   r13
ffff8000001083eb:	41 56                	push   r14
ffff8000001083ed:	41 57                	push   r15
ffff8000001083ef:	fc                   	cld    
ffff8000001083f0:	48 8b b4 24 90 00 00 	mov    rsi,QWORD PTR [rsp+0x90]
ffff8000001083f7:	00 
ffff8000001083f8:	48 8b 94 24 88 00 00 	mov    rdx,QWORD PTR [rsp+0x88]
ffff8000001083ff:	00 
ffff800000108400:	48 c7 c7 10 00 00 00 	mov    rdi,0x10
ffff800000108407:	48 8e df             	mov    ds,rdi
ffff80000010840a:	48 8e c7             	mov    es,rdi
ffff80000010840d:	48 89 e7             	mov    rdi,rsp
ffff800000108410:	ff d2                	call   rdx
ffff800000108412:	eb a9                	jmp    ffff8000001083bd <ret_from_intr>

ffff800000108414 <debug>:
ffff800000108414:	6a 00                	push   0x0
ffff800000108416:	50                   	push   rax
ffff800000108417:	48 8d 05 00 ea ff ff 	lea    rax,[rip+0xffffffffffffea00]        # ffff800000106e1e <do_debug>
ffff80000010841e:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff800000108422:	eb a9                	jmp    ffff8000001083cd <error_code>

ffff800000108424 <nmi>:
ffff800000108424:	50                   	push   rax
ffff800000108425:	fc                   	cld    
ffff800000108426:	50                   	push   rax
ffff800000108427:	50                   	push   rax
ffff800000108428:	48 8c c0             	mov    rax,es
ffff80000010842b:	50                   	push   rax
ffff80000010842c:	48 8c d8             	mov    rax,ds
ffff80000010842f:	50                   	push   rax
ffff800000108430:	48 31 c0             	xor    rax,rax
ffff800000108433:	55                   	push   rbp
ffff800000108434:	57                   	push   rdi
ffff800000108435:	56                   	push   rsi
ffff800000108436:	52                   	push   rdx
ffff800000108437:	51                   	push   rcx
ffff800000108438:	53                   	push   rbx
ffff800000108439:	41 50                	push   r8
ffff80000010843b:	41 51                	push   r9
ffff80000010843d:	41 52                	push   r10
ffff80000010843f:	41 53                	push   r11
ffff800000108441:	41 54                	push   r12
ffff800000108443:	41 55                	push   r13
ffff800000108445:	41 56                	push   r14
ffff800000108447:	41 57                	push   r15
ffff800000108449:	48 c7 c2 10 00 00 00 	mov    rdx,0x10
ffff800000108450:	48 8e da             	mov    ds,rdx
ffff800000108453:	48 8e c2             	mov    es,rdx
ffff800000108456:	48 c7 c6 00 00 00 00 	mov    rsi,0x0
ffff80000010845d:	48 89 e7             	mov    rdi,rsp
ffff800000108460:	e8 47 ea ff ff       	call   ffff800000106eac <do_nmi>
ffff800000108465:	e9 2e ff ff ff       	jmp    ffff800000108398 <RESTORE_ALL>

ffff80000010846a <int3>:
ffff80000010846a:	6a 00                	push   0x0
ffff80000010846c:	50                   	push   rax
ffff80000010846d:	48 8d 05 c6 ea ff ff 	lea    rax,[rip+0xffffffffffffeac6]        # ffff800000106f3a <do_int3>
ffff800000108474:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff800000108478:	e9 50 ff ff ff       	jmp    ffff8000001083cd <error_code>

ffff80000010847d <overflow>:
ffff80000010847d:	6a 00                	push   0x0
ffff80000010847f:	50                   	push   rax
ffff800000108480:	48 8d 05 41 eb ff ff 	lea    rax,[rip+0xffffffffffffeb41]        # ffff800000106fc8 <do_overflow>
ffff800000108487:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff80000010848b:	e9 3d ff ff ff       	jmp    ffff8000001083cd <error_code>

ffff800000108490 <bounds>:
ffff800000108490:	6a 00                	push   0x0
ffff800000108492:	50                   	push   rax
ffff800000108493:	48 8d 05 bc eb ff ff 	lea    rax,[rip+0xffffffffffffebbc]        # ffff800000107056 <do_bounds>
ffff80000010849a:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff80000010849e:	e9 2a ff ff ff       	jmp    ffff8000001083cd <error_code>

ffff8000001084a3 <undefined_opcode>:
ffff8000001084a3:	6a 00                	push   0x0
ffff8000001084a5:	50                   	push   rax
ffff8000001084a6:	48 8d 05 37 ec ff ff 	lea    rax,[rip+0xffffffffffffec37]        # ffff8000001070e4 <do_undefined_opcode>
ffff8000001084ad:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff8000001084b1:	e9 17 ff ff ff       	jmp    ffff8000001083cd <error_code>

ffff8000001084b6 <dev_not_available>:
ffff8000001084b6:	6a 00                	push   0x0
ffff8000001084b8:	50                   	push   rax
ffff8000001084b9:	48 8d 05 b2 ec ff ff 	lea    rax,[rip+0xffffffffffffecb2]        # ffff800000107172 <do_dev_not_available>
ffff8000001084c0:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff8000001084c4:	e9 04 ff ff ff       	jmp    ffff8000001083cd <error_code>

ffff8000001084c9 <double_fault>:
ffff8000001084c9:	50                   	push   rax
ffff8000001084ca:	48 8d 05 2f ed ff ff 	lea    rax,[rip+0xffffffffffffed2f]        # ffff800000107200 <do_double_fault>
ffff8000001084d1:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff8000001084d5:	e9 f3 fe ff ff       	jmp    ffff8000001083cd <error_code>

ffff8000001084da <coprocessor_segment_overrun>:
ffff8000001084da:	6a 00                	push   0x0
ffff8000001084dc:	50                   	push   rax
ffff8000001084dd:	48 8d 05 aa ed ff ff 	lea    rax,[rip+0xffffffffffffedaa]        # ffff80000010728e <do_coprocessor_segment_overrun>
ffff8000001084e4:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff8000001084e8:	e9 e0 fe ff ff       	jmp    ffff8000001083cd <error_code>

ffff8000001084ed <invalid_TSS>:
ffff8000001084ed:	50                   	push   rax
ffff8000001084ee:	48 8d 05 27 ee ff ff 	lea    rax,[rip+0xffffffffffffee27]        # ffff80000010731c <do_invalid_TSS>
ffff8000001084f5:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff8000001084f9:	e9 cf fe ff ff       	jmp    ffff8000001083cd <error_code>

ffff8000001084fe <segment_not_present>:
ffff8000001084fe:	50                   	push   rax
ffff8000001084ff:	48 8d 05 00 f0 ff ff 	lea    rax,[rip+0xfffffffffffff000]        # ffff800000107506 <do_segment_not_present>
ffff800000108506:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff80000010850a:	e9 be fe ff ff       	jmp    ffff8000001083cd <error_code>

ffff80000010850f <stack_segment_fault>:
ffff80000010850f:	50                   	push   rax
ffff800000108510:	48 8d 05 d9 f1 ff ff 	lea    rax,[rip+0xfffffffffffff1d9]        # ffff8000001076f0 <do_stack_segment_fault>
ffff800000108517:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff80000010851b:	e9 ad fe ff ff       	jmp    ffff8000001083cd <error_code>

ffff800000108520 <general_protection>:
ffff800000108520:	50                   	push   rax
ffff800000108521:	48 8d 05 b2 f3 ff ff 	lea    rax,[rip+0xfffffffffffff3b2]        # ffff8000001078da <do_general_protection>
ffff800000108528:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff80000010852c:	e9 9c fe ff ff       	jmp    ffff8000001083cd <error_code>

ffff800000108531 <page_fault>:
ffff800000108531:	50                   	push   rax
ffff800000108532:	48 8d 05 8b f5 ff ff 	lea    rax,[rip+0xfffffffffffff58b]        # ffff800000107ac4 <do_page_fault>
ffff800000108539:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff80000010853d:	e9 8b fe ff ff       	jmp    ffff8000001083cd <error_code>

ffff800000108542 <x87_FPU_error>:
ffff800000108542:	6a 00                	push   0x0
ffff800000108544:	50                   	push   rax
ffff800000108545:	48 8d 05 05 f8 ff ff 	lea    rax,[rip+0xfffffffffffff805]        # ffff800000107d51 <do_x87_FPU_error>
ffff80000010854c:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff800000108550:	e9 78 fe ff ff       	jmp    ffff8000001083cd <error_code>

ffff800000108555 <alignment_check>:
ffff800000108555:	50                   	push   rax
ffff800000108556:	48 8d 05 82 f8 ff ff 	lea    rax,[rip+0xfffffffffffff882]        # ffff800000107ddf <do_alignment_check>
ffff80000010855d:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff800000108561:	e9 67 fe ff ff       	jmp    ffff8000001083cd <error_code>

ffff800000108566 <machine_check>:
ffff800000108566:	6a 00                	push   0x0
ffff800000108568:	50                   	push   rax
ffff800000108569:	48 8d 05 fd f8 ff ff 	lea    rax,[rip+0xfffffffffffff8fd]        # ffff800000107e6d <do_machine_check>
ffff800000108570:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff800000108574:	e9 54 fe ff ff       	jmp    ffff8000001083cd <error_code>

ffff800000108579 <SIMD_exception>:
ffff800000108579:	6a 00                	push   0x0
ffff80000010857b:	50                   	push   rax
ffff80000010857c:	48 8d 05 78 f9 ff ff 	lea    rax,[rip+0xfffffffffffff978]        # ffff800000107efb <do_SIMD_exception>
ffff800000108583:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff800000108587:	e9 41 fe ff ff       	jmp    ffff8000001083cd <error_code>

ffff80000010858c <virtualization_exception>:
ffff80000010858c:	6a 00                	push   0x0
ffff80000010858e:	50                   	push   rax
ffff80000010858f:	48 8d 05 f3 f9 ff ff 	lea    rax,[rip+0xfffffffffffff9f3]        # ffff800000107f89 <do_virtualization_exception>
ffff800000108596:	48 87 04 24          	xchg   QWORD PTR [rsp],rax
ffff80000010859a:	e9 2e fe ff ff       	jmp    ffff8000001083cd <error_code>

Disassembly of section .data:

ffff8000001085a0 <GDT_Table>:
	...
ffff8000001085ac:	00 98 20 00 00 00    	add    BYTE PTR [rax+0x20],bl
ffff8000001085b2:	00 00                	add    BYTE PTR [rax],al
ffff8000001085b4:	00 92 00 00 00 00    	add    BYTE PTR [rdx+0x0],dl
	...
ffff8000001085ca:	00 00                	add    BYTE PTR [rax],al
ffff8000001085cc:	00 f8                	add    al,bh
ffff8000001085ce:	20 00                	and    BYTE PTR [rax],al
ffff8000001085d0:	00 00                	add    BYTE PTR [rax],al
ffff8000001085d2:	00 00                	add    BYTE PTR [rax],al
ffff8000001085d4:	00 f2                	add    dl,dh
ffff8000001085d6:	00 00                	add    BYTE PTR [rax],al
ffff8000001085d8:	ff                   	(bad)  
ffff8000001085d9:	ff 00                	inc    DWORD PTR [rax]
ffff8000001085db:	00 00                	add    BYTE PTR [rax],al
ffff8000001085dd:	9a                   	(bad)  
ffff8000001085de:	cf                   	iret   
ffff8000001085df:	00 ff                	add    bh,bh
ffff8000001085e1:	ff 00                	inc    DWORD PTR [rax]
ffff8000001085e3:	00 00                	add    BYTE PTR [rax],al
ffff8000001085e5:	92                   	xchg   edx,eax
ffff8000001085e6:	cf                   	iret   
	...

ffff800000108638 <GDT_END>:
ffff800000108638:	97                   	xchg   edi,eax
	...

ffff80000010863a <GDT_BASE>:
ffff80000010863a:	a0 85 10 00 00 80 ff 	movabs al,ds:0xffff8000001085
ffff800000108641:	ff  

ffff800000108642 <IDT_Table>:
	...

ffff800000109642 <IDT_END>:
ffff800000109642:	ff 0f                	dec    DWORD PTR [rdi]

ffff800000109644 <IDT_BASE>:
ffff800000109644:	42 86 10             	rex.X xchg BYTE PTR [rax],dl
ffff800000109647:	00 00                	add    BYTE PTR [rax],al
ffff800000109649:	80 ff ff             	cmp    bh,0xff

ffff80000010964c <TSS64_Table>:
	...

ffff8000001096b4 <TSS64_END>:
ffff8000001096b4:	67 00          	add    BYTE PTR [esi+edx*4+0x10],cl

ffff8000001096b6 <TSS64_BASE>:
ffff8000001096b6:	4c 96                	rex.WR xchg rsi,rax
ffff8000001096b8:	10 00                	adc    BYTE PTR [rax],al
ffff8000001096ba:	00 80 ff ff 00 00    	add    BYTE PTR [rax+0xffff],al

ffff8000001096c0 <font_ascii>:
	...
ffff8000001098d0:	00 10                	add    BYTE PTR [rax],dl
ffff8000001098d2:	10 10                	adc    BYTE PTR [rax],dl
ffff8000001098d4:	10 10                	adc    BYTE PTR [rax],dl
ffff8000001098d6:	10 10                	adc    BYTE PTR [rax],dl
ffff8000001098d8:	10 10                	adc    BYTE PTR [rax],dl
ffff8000001098da:	00 00                	add    BYTE PTR [rax],al
ffff8000001098dc:	10 10                	adc    BYTE PTR [rax],dl
ffff8000001098de:	00 00                	add    BYTE PTR [rax],al
ffff8000001098e0:	28 28                	sub    BYTE PTR [rax],ch
ffff8000001098e2:	28 00                	sub    BYTE PTR [rax],al
	...
ffff8000001098f0:	00 44 44 44          	add    BYTE PTR [rsp+rax*2+0x44],al
ffff8000001098f4:	fe 44 44 44          	inc    BYTE PTR [rsp+rax*2+0x44]
ffff8000001098f8:	44                   	rex.R
ffff8000001098f9:	44 fe 44 44 44       	rex.R inc BYTE PTR [rsp+rax*2+0x44]
ffff8000001098fe:	00 00                	add    BYTE PTR [rax],al
ffff800000109900:	10 3a                	adc    BYTE PTR [rdx],bh
ffff800000109902:	56                   	push   rsi
ffff800000109903:	92                   	xchg   edx,eax
ffff800000109904:	92                   	xchg   edx,eax
ffff800000109905:	90                   	nop
ffff800000109906:	50                   	push   rax
ffff800000109907:	38 14 12             	cmp    BYTE PTR [rdx+rdx*1],dl
ffff80000010990a:	92                   	xchg   edx,eax
ffff80000010990b:	92                   	xchg   edx,eax
ffff80000010990c:	d4                   	(bad)  
ffff80000010990d:	b8 10 10 62 92       	mov    eax,0x92621010
ffff800000109912:	94                   	xchg   esp,eax
ffff800000109913:	94                   	xchg   esp,eax
ffff800000109914:	68 08 10 10 20       	push   0x20101008
ffff800000109919:	2c 52                	sub    al,0x52
ffff80000010991b:	52                   	push   rdx
ffff80000010991c:	92                   	xchg   edx,eax
ffff80000010991d:	8c 00                	mov    WORD PTR [rax],es
ffff80000010991f:	00 00                	add    BYTE PTR [rax],al
ffff800000109921:	70 88                	jo     ffff8000001098ab <font_ascii+0x1eb>
ffff800000109923:	88 88 90 60 47 a2    	mov    BYTE PTR [rax-0x5db89f70],cl
ffff800000109929:	92                   	xchg   edx,eax
ffff80000010992a:	8a 84 46 39 00 00 04 	mov    al,BYTE PTR [rsi+rax*2+0x4000039]
ffff800000109931:	08 10                	or     BYTE PTR [rax],dl
	...
ffff80000010993f:	00 02                	add    BYTE PTR [rdx],al
ffff800000109941:	04 08                	add    al,0x8
ffff800000109943:	08 10                	or     BYTE PTR [rax],dl
ffff800000109945:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109947:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109949:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010994b:	08 08                	or     BYTE PTR [rax],cl
ffff80000010994d:	04 02                	add    al,0x2
ffff80000010994f:	00 80 40 20 20 10    	add    BYTE PTR [rax+0x10202040],al
ffff800000109955:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109957:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109959:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010995b:	20 20                	and    BYTE PTR [rax],ah
ffff80000010995d:	40 80 00 00          	rex add BYTE PTR [rax],0x0
ffff800000109961:	00 00                	add    BYTE PTR [rax],al
ffff800000109963:	00 00                	add    BYTE PTR [rax],al
ffff800000109965:	10 92 54 38 54 92    	adc    BYTE PTR [rdx-0x6dabc7ac],dl
ffff80000010996b:	10 00                	adc    BYTE PTR [rax],al
	...
ffff800000109975:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109977:	10 fe                	adc    dh,bh
ffff800000109979:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010997b:	10 00                	adc    BYTE PTR [rax],al
	...
ffff800000109989:	00 00                	add    BYTE PTR [rax],al
ffff80000010998b:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010998d:	08 08                	or     BYTE PTR [rax],cl
ffff80000010998f:	10 00                	adc    BYTE PTR [rax],al
ffff800000109991:	00 00                	add    BYTE PTR [rax],al
ffff800000109993:	00 00                	add    BYTE PTR [rax],al
ffff800000109995:	00 00                	add    BYTE PTR [rax],al
ffff800000109997:	00 fe                	add    dh,bh
	...
ffff8000001099a9:	00 00                	add    BYTE PTR [rax],al
ffff8000001099ab:	00 18                	add    BYTE PTR [rax],bl
ffff8000001099ad:	18 00                	sbb    BYTE PTR [rax],al
ffff8000001099af:	00 02                	add    BYTE PTR [rdx],al
ffff8000001099b1:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
ffff8000001099b4:	08 08                	or     BYTE PTR [rax],cl
ffff8000001099b6:	08 10                	or     BYTE PTR [rax],dl
ffff8000001099b8:	10 20                	adc    BYTE PTR [rax],ah
ffff8000001099ba:	20 40 40             	and    BYTE PTR [rax+0x40],al
ffff8000001099bd:	40 80 80 00 18 24 24 	rex add BYTE PTR [rax+0x24241800],0x42
ffff8000001099c4:	42 
ffff8000001099c5:	42                   	rex.X
ffff8000001099c6:	42                   	rex.X
ffff8000001099c7:	42                   	rex.X
ffff8000001099c8:	42                   	rex.X
ffff8000001099c9:	42                   	rex.X
ffff8000001099ca:	42 24 24             	rex.X and al,0x24
ffff8000001099cd:	18 00                	sbb    BYTE PTR [rax],al
ffff8000001099cf:	00 00                	add    BYTE PTR [rax],al
ffff8000001099d1:	08 18                	or     BYTE PTR [rax],bl
ffff8000001099d3:	28 08                	sub    BYTE PTR [rax],cl
ffff8000001099d5:	08 08                	or     BYTE PTR [rax],cl
ffff8000001099d7:	08 08                	or     BYTE PTR [rax],cl
ffff8000001099d9:	08 08                	or     BYTE PTR [rax],cl
ffff8000001099db:	08 08                	or     BYTE PTR [rax],cl
ffff8000001099dd:	3e 00 00             	add    BYTE PTR ds:[rax],al
ffff8000001099e0:	00 18                	add    BYTE PTR [rax],bl
ffff8000001099e2:	24 42                	and    al,0x42
ffff8000001099e4:	42 02 04 08          	add    al,BYTE PTR [rax+r9*1]
ffff8000001099e8:	10 20                	adc    BYTE PTR [rax],ah
ffff8000001099ea:	20 40 40             	and    BYTE PTR [rax+0x40],al
ffff8000001099ed:	7e 00                	jle    ffff8000001099ef <font_ascii+0x32f>
ffff8000001099ef:	00 00                	add    BYTE PTR [rax],al
ffff8000001099f1:	18 24 42             	sbb    BYTE PTR [rdx+rax*2],ah
ffff8000001099f4:	02 02                	add    al,BYTE PTR [rdx]
ffff8000001099f6:	04 18                	add    al,0x18
ffff8000001099f8:	04 02                	add    al,0x2
ffff8000001099fa:	02 42 24             	add    al,BYTE PTR [rdx+0x24]
ffff8000001099fd:	18 00                	sbb    BYTE PTR [rax],al
ffff8000001099ff:	00 00                	add    BYTE PTR [rax],al
ffff800000109a01:	0c 0c                	or     al,0xc
ffff800000109a03:	0c 14                	or     al,0x14
ffff800000109a05:	14 14                	adc    al,0x14
ffff800000109a07:	24 24                	and    al,0x24
ffff800000109a09:	44 7e 04             	rex.R jle ffff800000109a10 <font_ascii+0x350>
ffff800000109a0c:	04 1e                	add    al,0x1e
ffff800000109a0e:	00 00                	add    BYTE PTR [rax],al
ffff800000109a10:	00 7c 40 40          	add    BYTE PTR [rax+rax*2+0x40],bh
ffff800000109a14:	40 58                	rex pop rax
ffff800000109a16:	64 02 02             	add    al,BYTE PTR fs:[rdx]
ffff800000109a19:	02 02                	add    al,BYTE PTR [rdx]
ffff800000109a1b:	42 24 18             	rex.X and al,0x18
ffff800000109a1e:	00 00                	add    BYTE PTR [rax],al
ffff800000109a20:	00 18                	add    BYTE PTR [rax],bl
ffff800000109a22:	24 42                	and    al,0x42
ffff800000109a24:	40 58                	rex pop rax
ffff800000109a26:	64 42                	fs rex.X
ffff800000109a28:	42                   	rex.X
ffff800000109a29:	42                   	rex.X
ffff800000109a2a:	42                   	rex.X
ffff800000109a2b:	42 24 18             	rex.X and al,0x18
ffff800000109a2e:	00 00                	add    BYTE PTR [rax],al
ffff800000109a30:	00 7e 42             	add    BYTE PTR [rsi+0x42],bh
ffff800000109a33:	42 04 04             	rex.X add al,0x4
ffff800000109a36:	08 08                	or     BYTE PTR [rax],cl
ffff800000109a38:	08 10                	or     BYTE PTR [rax],dl
ffff800000109a3a:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109a3c:	10 38                	adc    BYTE PTR [rax],bh
ffff800000109a3e:	00 00                	add    BYTE PTR [rax],al
ffff800000109a40:	00 18                	add    BYTE PTR [rax],bl
ffff800000109a42:	24 42                	and    al,0x42
ffff800000109a44:	42                   	rex.X
ffff800000109a45:	42 24 18             	rex.X and al,0x18
ffff800000109a48:	24 42                	and    al,0x42
ffff800000109a4a:	42                   	rex.X
ffff800000109a4b:	42 24 18             	rex.X and al,0x18
ffff800000109a4e:	00 00                	add    BYTE PTR [rax],al
ffff800000109a50:	00 18                	add    BYTE PTR [rax],bl
ffff800000109a52:	24 42                	and    al,0x42
ffff800000109a54:	42                   	rex.X
ffff800000109a55:	42                   	rex.X
ffff800000109a56:	42                   	rex.X
ffff800000109a57:	42                   	rex.X
ffff800000109a58:	26 1a 02             	sbb    al,BYTE PTR es:[rdx]
ffff800000109a5b:	42 24 18             	rex.X and al,0x18
ffff800000109a5e:	00 00                	add    BYTE PTR [rax],al
ffff800000109a60:	00 00                	add    BYTE PTR [rax],al
ffff800000109a62:	00 00                	add    BYTE PTR [rax],al
ffff800000109a64:	00 18                	add    BYTE PTR [rax],bl
ffff800000109a66:	18 00                	sbb    BYTE PTR [rax],al
ffff800000109a68:	00 00                	add    BYTE PTR [rax],al
ffff800000109a6a:	00 00                	add    BYTE PTR [rax],al
ffff800000109a6c:	18 18                	sbb    BYTE PTR [rax],bl
ffff800000109a6e:	00 00                	add    BYTE PTR [rax],al
ffff800000109a70:	00 00                	add    BYTE PTR [rax],al
ffff800000109a72:	00 00                	add    BYTE PTR [rax],al
ffff800000109a74:	00 18                	add    BYTE PTR [rax],bl
ffff800000109a76:	18 00                	sbb    BYTE PTR [rax],al
ffff800000109a78:	00 00                	add    BYTE PTR [rax],al
ffff800000109a7a:	00 18                	add    BYTE PTR [rax],bl
ffff800000109a7c:	18 08                	sbb    BYTE PTR [rax],cl
ffff800000109a7e:	08 10                	or     BYTE PTR [rax],dl
ffff800000109a80:	00 02                	add    BYTE PTR [rdx],al
ffff800000109a82:	04 08                	add    al,0x8
ffff800000109a84:	10 20                	adc    BYTE PTR [rax],ah
ffff800000109a86:	40 80 80 40 20 10 08 	rex add BYTE PTR [rax+0x8102040],0x4
ffff800000109a8d:	04 
ffff800000109a8e:	02 00                	add    al,BYTE PTR [rax]
ffff800000109a90:	00 00                	add    BYTE PTR [rax],al
ffff800000109a92:	00 00                	add    BYTE PTR [rax],al
ffff800000109a94:	00 00                	add    BYTE PTR [rax],al
ffff800000109a96:	fe 00                	inc    BYTE PTR [rax]
ffff800000109a98:	00 fe                	add    dh,bh
ffff800000109a9a:	00 00                	add    BYTE PTR [rax],al
ffff800000109a9c:	00 00                	add    BYTE PTR [rax],al
ffff800000109a9e:	00 00                	add    BYTE PTR [rax],al
ffff800000109aa0:	00 80 40 20 10 08    	add    BYTE PTR [rax+0x8102040],al
ffff800000109aa6:	04 02                	add    al,0x2
ffff800000109aa8:	02 04 08             	add    al,BYTE PTR [rax+rcx*1]
ffff800000109aab:	10 20                	adc    BYTE PTR [rax],ah
ffff800000109aad:	40 80 00 00          	rex add BYTE PTR [rax],0x0
ffff800000109ab1:	38 44 82 82          	cmp    BYTE PTR [rdx+rax*4-0x7e],al
ffff800000109ab5:	82                   	(bad)  
ffff800000109ab6:	04 08                	add    al,0x8
ffff800000109ab8:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109aba:	00 00                	add    BYTE PTR [rax],al
ffff800000109abc:	18 18                	sbb    BYTE PTR [rax],bl
ffff800000109abe:	00 00                	add    BYTE PTR [rax],al
ffff800000109ac0:	00 38                	add    BYTE PTR [rax],bh
ffff800000109ac2:	44 82                	rex.R (bad) 
ffff800000109ac4:	9a                   	(bad)  
ffff800000109ac5:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000109ac6:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000109ac7:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000109ac8:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000109ac9:	aa                   	stos   BYTE PTR es:[rdi],al
ffff800000109aca:	9c                   	pushf  
ffff800000109acb:	80 46 38 00          	add    BYTE PTR [rsi+0x38],0x0
ffff800000109acf:	00 00                	add    BYTE PTR [rax],al
ffff800000109ad1:	18 18                	sbb    BYTE PTR [rax],bl
ffff800000109ad3:	18 18                	sbb    BYTE PTR [rax],bl
ffff800000109ad5:	24 24                	and    al,0x24
ffff800000109ad7:	24 24                	and    al,0x24
ffff800000109ad9:	7e 42                	jle    ffff800000109b1d <font_ascii+0x45d>
ffff800000109adb:	42                   	rex.X
ffff800000109adc:	42 e7 00             	rex.X out 0x0,eax
ffff800000109adf:	00 00                	add    BYTE PTR [rax],al
ffff800000109ae1:	f0 48                	lock rex.W
ffff800000109ae3:	44                   	rex.R
ffff800000109ae4:	44                   	rex.R
ffff800000109ae5:	44                   	rex.R
ffff800000109ae6:	48 78 44             	rex.W js ffff800000109b2d <font_ascii+0x46d>
ffff800000109ae9:	42                   	rex.X
ffff800000109aea:	42                   	rex.X
ffff800000109aeb:	42                   	rex.X
ffff800000109aec:	44 f8                	rex.R clc 
ffff800000109aee:	00 00                	add    BYTE PTR [rax],al
ffff800000109af0:	00 3a                	add    BYTE PTR [rdx],bh
ffff800000109af2:	46                   	rex.RX
ffff800000109af3:	42 82                	rex.X (bad) 
ffff800000109af5:	80 80 80 80 80 82 42 	add    BYTE PTR [rax-0x7d7f7f80],0x42
ffff800000109afc:	44 38 00             	cmp    BYTE PTR [rax],r8b
ffff800000109aff:	00 00                	add    BYTE PTR [rax],al
ffff800000109b01:	f8                   	clc    
ffff800000109b02:	44                   	rex.R
ffff800000109b03:	44                   	rex.R
ffff800000109b04:	42                   	rex.X
ffff800000109b05:	42                   	rex.X
ffff800000109b06:	42                   	rex.X
ffff800000109b07:	42                   	rex.X
ffff800000109b08:	42                   	rex.X
ffff800000109b09:	42                   	rex.X
ffff800000109b0a:	42                   	rex.X
ffff800000109b0b:	44                   	rex.R
ffff800000109b0c:	44 f8                	rex.R clc 
ffff800000109b0e:	00 00                	add    BYTE PTR [rax],al
ffff800000109b10:	00 fe                	add    dh,bh
ffff800000109b12:	42                   	rex.X
ffff800000109b13:	42                   	rex.X
ffff800000109b14:	40                   	rex
ffff800000109b15:	40                   	rex
ffff800000109b16:	44 7c 44             	rex.R jl ffff800000109b5d <font_ascii+0x49d>
ffff800000109b19:	40                   	rex
ffff800000109b1a:	40                   	rex
ffff800000109b1b:	42                   	rex.X
ffff800000109b1c:	42 fe 00             	rex.X inc BYTE PTR [rax]
ffff800000109b1f:	00 00                	add    BYTE PTR [rax],al
ffff800000109b21:	fe 42 42             	inc    BYTE PTR [rdx+0x42]
ffff800000109b24:	40                   	rex
ffff800000109b25:	40                   	rex
ffff800000109b26:	44 7c 44             	rex.R jl ffff800000109b6d <font_ascii+0x4ad>
ffff800000109b29:	44                   	rex.R
ffff800000109b2a:	40                   	rex
ffff800000109b2b:	40                   	rex
ffff800000109b2c:	40                   	rex
ffff800000109b2d:	f0 00 00             	lock add BYTE PTR [rax],al
ffff800000109b30:	00 3a                	add    BYTE PTR [rdx],bh
ffff800000109b32:	46                   	rex.RX
ffff800000109b33:	42 82                	rex.X (bad) 
ffff800000109b35:	80 80 9e 82 82 82 42 	add    BYTE PTR [rax-0x7d7d7d62],0x42
ffff800000109b3c:	46 38 00             	rex.RX cmp BYTE PTR [rax],r8b
ffff800000109b3f:	00 00                	add    BYTE PTR [rax],al
ffff800000109b41:	e7 42                	out    0x42,eax
ffff800000109b43:	42                   	rex.X
ffff800000109b44:	42                   	rex.X
ffff800000109b45:	42                   	rex.X
ffff800000109b46:	42 7e 42             	rex.X jle ffff800000109b8b <font_ascii+0x4cb>
ffff800000109b49:	42                   	rex.X
ffff800000109b4a:	42                   	rex.X
ffff800000109b4b:	42                   	rex.X
ffff800000109b4c:	42 e7 00             	rex.X out 0x0,eax
ffff800000109b4f:	00 00                	add    BYTE PTR [rax],al
ffff800000109b51:	7c 10                	jl     ffff800000109b63 <font_ascii+0x4a3>
ffff800000109b53:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109b55:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109b57:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109b59:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109b5b:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109b5d:	7c 00                	jl     ffff800000109b5f <font_ascii+0x49f>
ffff800000109b5f:	00 00                	add    BYTE PTR [rax],al
ffff800000109b61:	1f                   	(bad)  
ffff800000109b62:	04 04                	add    al,0x4
ffff800000109b64:	04 04                	add    al,0x4
ffff800000109b66:	04 04                	add    al,0x4
ffff800000109b68:	04 04                	add    al,0x4
ffff800000109b6a:	04 04                	add    al,0x4
ffff800000109b6c:	84 48 30             	test   BYTE PTR [rax+0x30],cl
ffff800000109b6f:	00 00                	add    BYTE PTR [rax],al
ffff800000109b71:	e7 42                	out    0x42,eax
ffff800000109b73:	44                   	rex.R
ffff800000109b74:	48 50                	rex.W push rax
ffff800000109b76:	50                   	push   rax
ffff800000109b77:	60                   	(bad)  
ffff800000109b78:	50                   	push   rax
ffff800000109b79:	50                   	push   rax
ffff800000109b7a:	48                   	rex.W
ffff800000109b7b:	44                   	rex.R
ffff800000109b7c:	42 e7 00             	rex.X out 0x0,eax
ffff800000109b7f:	00 00                	add    BYTE PTR [rax],al
ffff800000109b81:	f0 40                	lock rex
ffff800000109b83:	40                   	rex
ffff800000109b84:	40                   	rex
ffff800000109b85:	40                   	rex
ffff800000109b86:	40                   	rex
ffff800000109b87:	40                   	rex
ffff800000109b88:	40                   	rex
ffff800000109b89:	40                   	rex
ffff800000109b8a:	40                   	rex
ffff800000109b8b:	42                   	rex.X
ffff800000109b8c:	42 fe 00             	rex.X inc BYTE PTR [rax]
ffff800000109b8f:	00 00                	add    BYTE PTR [rax],al
ffff800000109b91:	c3                   	ret    
ffff800000109b92:	42                   	rex.X
ffff800000109b93:	66 66 66 5a          	data16 data16 pop dx
ffff800000109b97:	5a                   	pop    rdx
ffff800000109b98:	5a                   	pop    rdx
ffff800000109b99:	42                   	rex.X
ffff800000109b9a:	42                   	rex.X
ffff800000109b9b:	42                   	rex.X
ffff800000109b9c:	42 e7 00             	rex.X out 0x0,eax
ffff800000109b9f:	00 00                	add    BYTE PTR [rax],al
ffff800000109ba1:	c7 42 62 62 52 52 52 	mov    DWORD PTR [rdx+0x62],0x52525262
ffff800000109ba8:	4a                   	rex.WX
ffff800000109ba9:	4a                   	rex.WX
ffff800000109baa:	4a                   	rex.WX
ffff800000109bab:	46                   	rex.RX
ffff800000109bac:	46 e2 00             	rex.RX loop ffff800000109baf <font_ascii+0x4ef>
ffff800000109baf:	00 00                	add    BYTE PTR [rax],al
ffff800000109bb1:	38 44 82 82          	cmp    BYTE PTR [rdx+rax*4-0x7e],al
ffff800000109bb5:	82                   	(bad)  
ffff800000109bb6:	82                   	(bad)  
ffff800000109bb7:	82                   	(bad)  
ffff800000109bb8:	82                   	(bad)  
ffff800000109bb9:	82                   	(bad)  
ffff800000109bba:	82                   	(bad)  
ffff800000109bbb:	82                   	(bad)  
ffff800000109bbc:	44 38 00             	cmp    BYTE PTR [rax],r8b
ffff800000109bbf:	00 00                	add    BYTE PTR [rax],al
ffff800000109bc1:	f8                   	clc    
ffff800000109bc2:	44                   	rex.R
ffff800000109bc3:	42                   	rex.X
ffff800000109bc4:	42                   	rex.X
ffff800000109bc5:	42                   	rex.X
ffff800000109bc6:	44 78 40             	rex.R js ffff800000109c09 <font_ascii+0x549>
ffff800000109bc9:	40                   	rex
ffff800000109bca:	40                   	rex
ffff800000109bcb:	40                   	rex
ffff800000109bcc:	40                   	rex
ffff800000109bcd:	f0 00 00             	lock add BYTE PTR [rax],al
ffff800000109bd0:	00 38                	add    BYTE PTR [rax],bh
ffff800000109bd2:	44 82                	rex.R (bad) 
ffff800000109bd4:	82                   	(bad)  
ffff800000109bd5:	82                   	(bad)  
ffff800000109bd6:	82                   	(bad)  
ffff800000109bd7:	82                   	(bad)  
ffff800000109bd8:	82                   	(bad)  
ffff800000109bd9:	82                   	(bad)  
ffff800000109bda:	92                   	xchg   edx,eax
ffff800000109bdb:	8a 44 3a 00          	mov    al,BYTE PTR [rdx+rdi*1+0x0]
ffff800000109bdf:	00 00                	add    BYTE PTR [rax],al
ffff800000109be1:	fc                   	cld    
ffff800000109be2:	42                   	rex.X
ffff800000109be3:	42                   	rex.X
ffff800000109be4:	42                   	rex.X
ffff800000109be5:	42 7c 44             	rex.X jl ffff800000109c2c <font_ascii+0x56c>
ffff800000109be8:	42                   	rex.X
ffff800000109be9:	42                   	rex.X
ffff800000109bea:	42                   	rex.X
ffff800000109beb:	42                   	rex.X
ffff800000109bec:	42 e7 00             	rex.X out 0x0,eax
ffff800000109bef:	00 00                	add    BYTE PTR [rax],al
ffff800000109bf1:	3a 46 82             	cmp    al,BYTE PTR [rsi-0x7e]
ffff800000109bf4:	82                   	(bad)  
ffff800000109bf5:	80 40 38 04          	add    BYTE PTR [rax+0x38],0x4
ffff800000109bf9:	02 82 82 c4 b8 00    	add    al,BYTE PTR [rdx+0xb8c482]
ffff800000109bff:	00 00                	add    BYTE PTR [rax],al
ffff800000109c01:	fe                   	(bad)  
ffff800000109c02:	92                   	xchg   edx,eax
ffff800000109c03:	92                   	xchg   edx,eax
ffff800000109c04:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109c06:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109c08:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109c0a:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109c0c:	10 7c 00 00          	adc    BYTE PTR [rax+rax*1+0x0],bh
ffff800000109c10:	00 e7                	add    bh,ah
ffff800000109c12:	42                   	rex.X
ffff800000109c13:	42                   	rex.X
ffff800000109c14:	42                   	rex.X
ffff800000109c15:	42                   	rex.X
ffff800000109c16:	42                   	rex.X
ffff800000109c17:	42                   	rex.X
ffff800000109c18:	42                   	rex.X
ffff800000109c19:	42                   	rex.X
ffff800000109c1a:	42                   	rex.X
ffff800000109c1b:	42 24 3c             	rex.X and al,0x3c
ffff800000109c1e:	00 00                	add    BYTE PTR [rax],al
ffff800000109c20:	00 e7                	add    bh,ah
ffff800000109c22:	42                   	rex.X
ffff800000109c23:	42                   	rex.X
ffff800000109c24:	42                   	rex.X
ffff800000109c25:	42 24 24             	rex.X and al,0x24
ffff800000109c28:	24 24                	and    al,0x24
ffff800000109c2a:	18 18                	sbb    BYTE PTR [rax],bl
ffff800000109c2c:	18 18                	sbb    BYTE PTR [rax],bl
ffff800000109c2e:	00 00                	add    BYTE PTR [rax],al
ffff800000109c30:	00 e7                	add    bh,ah
ffff800000109c32:	42                   	rex.X
ffff800000109c33:	42                   	rex.X
ffff800000109c34:	42 5a                	rex.X pop rdx
ffff800000109c36:	5a                   	pop    rdx
ffff800000109c37:	5a                   	pop    rdx
ffff800000109c38:	5a                   	pop    rdx
ffff800000109c39:	24 24                	and    al,0x24
ffff800000109c3b:	24 24                	and    al,0x24
ffff800000109c3d:	24 00                	and    al,0x0
ffff800000109c3f:	00 00                	add    BYTE PTR [rax],al
ffff800000109c41:	e7 42                	out    0x42,eax
ffff800000109c43:	42 24 24             	rex.X and al,0x24
ffff800000109c46:	24 18                	and    al,0x18
ffff800000109c48:	24 24                	and    al,0x24
ffff800000109c4a:	24 42                	and    al,0x42
ffff800000109c4c:	42 e7 00             	rex.X out 0x0,eax
ffff800000109c4f:	00 00                	add    BYTE PTR [rax],al
ffff800000109c51:	ee                   	out    dx,al
ffff800000109c52:	44                   	rex.R
ffff800000109c53:	44                   	rex.R
ffff800000109c54:	44 28 28             	sub    BYTE PTR [rax],r13b
ffff800000109c57:	28 10                	sub    BYTE PTR [rax],dl
ffff800000109c59:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109c5b:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109c5d:	7c 00                	jl     ffff800000109c5f <font_ascii+0x59f>
ffff800000109c5f:	00 00                	add    BYTE PTR [rax],al
ffff800000109c61:	fe 84 84 08 08 10 10 	inc    BYTE PTR [rsp+rax*4+0x10100808]
ffff800000109c68:	20 20                	and    BYTE PTR [rax],ah
ffff800000109c6a:	40                   	rex
ffff800000109c6b:	42 82                	rex.X (bad) 
ffff800000109c6d:	fe 00                	inc    BYTE PTR [rax]
ffff800000109c6f:	00 00                	add    BYTE PTR [rax],al
ffff800000109c71:	3e 20 20             	and    BYTE PTR ds:[rax],ah
ffff800000109c74:	20 20                	and    BYTE PTR [rax],ah
ffff800000109c76:	20 20                	and    BYTE PTR [rax],ah
ffff800000109c78:	20 20                	and    BYTE PTR [rax],ah
ffff800000109c7a:	20 20                	and    BYTE PTR [rax],ah
ffff800000109c7c:	20 20                	and    BYTE PTR [rax],ah
ffff800000109c7e:	3e 00 80 80 40 40 20 	add    BYTE PTR ds:[rax+0x20404080],al
ffff800000109c85:	20 20                	and    BYTE PTR [rax],ah
ffff800000109c87:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109c89:	08 08                	or     BYTE PTR [rax],cl
ffff800000109c8b:	04 04                	add    al,0x4
ffff800000109c8d:	04 02                	add    al,0x2
ffff800000109c8f:	02 00                	add    al,BYTE PTR [rax]
ffff800000109c91:	7c 04                	jl     ffff800000109c97 <font_ascii+0x5d7>
ffff800000109c93:	04 04                	add    al,0x4
ffff800000109c95:	04 04                	add    al,0x4
ffff800000109c97:	04 04                	add    al,0x4
ffff800000109c99:	04 04                	add    al,0x4
ffff800000109c9b:	04 04                	add    al,0x4
ffff800000109c9d:	04 7c                	add    al,0x7c
ffff800000109c9f:	00 00                	add    BYTE PTR [rax],al
ffff800000109ca1:	10 28                	adc    BYTE PTR [rax],ch
ffff800000109ca3:	44 82                	rex.R (bad) 
	...
ffff800000109cbd:	00 fe                	add    dh,bh
ffff800000109cbf:	00 10                	add    BYTE PTR [rax],dl
ffff800000109cc1:	08 04 00             	or     BYTE PTR [rax+rax*1],al
	...
ffff800000109cd4:	00 70 08             	add    BYTE PTR [rax+0x8],dh
ffff800000109cd7:	04 3c                	add    al,0x3c
ffff800000109cd9:	44 84 84 8c 76 00 00 	test   BYTE PTR [rsp+rcx*4-0x3fffff8a],r8b
ffff800000109ce0:	c0 
ffff800000109ce1:	40                   	rex
ffff800000109ce2:	40                   	rex
ffff800000109ce3:	40                   	rex
ffff800000109ce4:	40 58                	rex pop rax
ffff800000109ce6:	64 42                	fs rex.X
ffff800000109ce8:	42                   	rex.X
ffff800000109ce9:	42                   	rex.X
ffff800000109cea:	42                   	rex.X
ffff800000109ceb:	42                   	rex.X
ffff800000109cec:	64 58                	fs pop rax
ffff800000109cee:	00 00                	add    BYTE PTR [rax],al
ffff800000109cf0:	00 00                	add    BYTE PTR [rax],al
ffff800000109cf2:	00 00                	add    BYTE PTR [rax],al
ffff800000109cf4:	00 30                	add    BYTE PTR [rax],dh
ffff800000109cf6:	4c 84 84 80 80 82 44 	rex.WR test BYTE PTR [rax+rax*4+0x38448280],r8b
ffff800000109cfd:	38 
ffff800000109cfe:	00 00                	add    BYTE PTR [rax],al
ffff800000109d00:	0c 04                	or     al,0x4
ffff800000109d02:	04 04                	add    al,0x4
ffff800000109d04:	04 34                	add    al,0x34
ffff800000109d06:	4c 84 84 84 84 84 4c 	rex.WR test BYTE PTR [rsp+rax*4+0x364c8484],r8b
ffff800000109d0d:	36 
ffff800000109d0e:	00 00                	add    BYTE PTR [rax],al
ffff800000109d10:	00 00                	add    BYTE PTR [rax],al
ffff800000109d12:	00 00                	add    BYTE PTR [rax],al
ffff800000109d14:	00 38                	add    BYTE PTR [rax],bh
ffff800000109d16:	44 82                	rex.R (bad) 
ffff800000109d18:	82                   	(bad)  
ffff800000109d19:	fc                   	cld    
ffff800000109d1a:	80 82 42 3c 00 00 0e 	add    BYTE PTR [rdx+0x3c42],0xe
ffff800000109d21:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d23:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d25:	7c 10                	jl     ffff800000109d37 <font_ascii+0x677>
ffff800000109d27:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d29:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d2b:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d2d:	7c 00                	jl     ffff800000109d2f <font_ascii+0x66f>
ffff800000109d2f:	00 00                	add    BYTE PTR [rax],al
ffff800000109d31:	00 00                	add    BYTE PTR [rax],al
ffff800000109d33:	00 00                	add    BYTE PTR [rax],al
ffff800000109d35:	36 4c 84 84 84 84 4c 	rex.WR test BYTE PTR ss:[rsp+rax*4+0x4344c84],r8b
ffff800000109d3c:	34 04 
ffff800000109d3e:	04 38                	add    al,0x38
ffff800000109d40:	c0 40 40 40          	rol    BYTE PTR [rax+0x40],0x40
ffff800000109d44:	40 58                	rex pop rax
ffff800000109d46:	64 42                	fs rex.X
ffff800000109d48:	42                   	rex.X
ffff800000109d49:	42                   	rex.X
ffff800000109d4a:	42                   	rex.X
ffff800000109d4b:	42                   	rex.X
ffff800000109d4c:	42 e3 00             	rex.X jrcxz ffff800000109d4f <font_ascii+0x68f>
ffff800000109d4f:	00 00                	add    BYTE PTR [rax],al
ffff800000109d51:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d53:	00 00                	add    BYTE PTR [rax],al
ffff800000109d55:	30 10                	xor    BYTE PTR [rax],dl
ffff800000109d57:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d59:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d5b:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d5d:	38 00                	cmp    BYTE PTR [rax],al
ffff800000109d5f:	00 00                	add    BYTE PTR [rax],al
ffff800000109d61:	04 04                	add    al,0x4
ffff800000109d63:	00 00                	add    BYTE PTR [rax],al
ffff800000109d65:	0c 04                	or     al,0x4
ffff800000109d67:	04 04                	add    al,0x4
ffff800000109d69:	04 04                	add    al,0x4
ffff800000109d6b:	04 04                	add    al,0x4
ffff800000109d6d:	08 08                	or     BYTE PTR [rax],cl
ffff800000109d6f:	30 c0                	xor    al,al
ffff800000109d71:	40                   	rex
ffff800000109d72:	40                   	rex
ffff800000109d73:	40                   	rex
ffff800000109d74:	40                   	rex
ffff800000109d75:	4e                   	rex.WRX
ffff800000109d76:	44                   	rex.R
ffff800000109d77:	48 50                	rex.W push rax
ffff800000109d79:	60                   	(bad)  
ffff800000109d7a:	50                   	push   rax
ffff800000109d7b:	48                   	rex.W
ffff800000109d7c:	44 e6 00             	rex.R out 0x0,al
ffff800000109d7f:	00 30                	add    BYTE PTR [rax],dh
ffff800000109d81:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d83:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d85:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d87:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d89:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d8b:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109d8d:	38 00                	cmp    BYTE PTR [rax],al
ffff800000109d8f:	00 00                	add    BYTE PTR [rax],al
ffff800000109d91:	00 00                	add    BYTE PTR [rax],al
ffff800000109d93:	00 00                	add    BYTE PTR [rax],al
ffff800000109d95:	f6 49 49 49          	test   BYTE PTR [rcx+0x49],0x49
ffff800000109d99:	49                   	rex.WB
ffff800000109d9a:	49                   	rex.WB
ffff800000109d9b:	49                   	rex.WB
ffff800000109d9c:	49 db 00             	rex.WB fild DWORD PTR [r8]
ffff800000109d9f:	00 00                	add    BYTE PTR [rax],al
ffff800000109da1:	00 00                	add    BYTE PTR [rax],al
ffff800000109da3:	00 00                	add    BYTE PTR [rax],al
ffff800000109da5:	d8 64 42 42          	fsub   DWORD PTR [rdx+rax*2+0x42]
ffff800000109da9:	42                   	rex.X
ffff800000109daa:	42                   	rex.X
ffff800000109dab:	42                   	rex.X
ffff800000109dac:	42 e3 00             	rex.X jrcxz ffff800000109daf <font_ascii+0x6ef>
ffff800000109daf:	00 00                	add    BYTE PTR [rax],al
ffff800000109db1:	00 00                	add    BYTE PTR [rax],al
ffff800000109db3:	00 00                	add    BYTE PTR [rax],al
ffff800000109db5:	38 44 82 82          	cmp    BYTE PTR [rdx+rax*4-0x7e],al
ffff800000109db9:	82                   	(bad)  
ffff800000109dba:	82                   	(bad)  
ffff800000109dbb:	82                   	(bad)  
ffff800000109dbc:	44 38 00             	cmp    BYTE PTR [rax],r8b
ffff800000109dbf:	00 00                	add    BYTE PTR [rax],al
ffff800000109dc1:	00 00                	add    BYTE PTR [rax],al
ffff800000109dc3:	00 d8                	add    al,bl
ffff800000109dc5:	64 42                	fs rex.X
ffff800000109dc7:	42                   	rex.X
ffff800000109dc8:	42                   	rex.X
ffff800000109dc9:	42                   	rex.X
ffff800000109dca:	42                   	rex.X
ffff800000109dcb:	64 58                	fs pop rax
ffff800000109dcd:	40                   	rex
ffff800000109dce:	40 e0 00             	rex loopne ffff800000109dd1 <font_ascii+0x711>
ffff800000109dd1:	00 00                	add    BYTE PTR [rax],al
ffff800000109dd3:	00 34 4c             	add    BYTE PTR [rsp+rcx*2],dh
ffff800000109dd6:	84 84 84 84 84 4c 34 	test   BYTE PTR [rsp+rax*4+0x344c8484],al
ffff800000109ddd:	04 04                	add    al,0x4
ffff800000109ddf:	0e                   	(bad)  
ffff800000109de0:	00 00                	add    BYTE PTR [rax],al
ffff800000109de2:	00 00                	add    BYTE PTR [rax],al
ffff800000109de4:	00 dc                	add    ah,bl
ffff800000109de6:	62 42                	(bad)  
ffff800000109de8:	40                   	rex
ffff800000109de9:	40                   	rex
ffff800000109dea:	40                   	rex
ffff800000109deb:	40                   	rex
ffff800000109dec:	40 e0 00             	rex loopne ffff800000109def <font_ascii+0x72f>
ffff800000109def:	00 00                	add    BYTE PTR [rax],al
ffff800000109df1:	00 00                	add    BYTE PTR [rax],al
ffff800000109df3:	00 00                	add    BYTE PTR [rax],al
ffff800000109df5:	7a 86                	jp     ffff800000109d7d <font_ascii+0x6bd>
ffff800000109df7:	82                   	(bad)  
ffff800000109df8:	c0 38 06             	sar    BYTE PTR [rax],0x6
ffff800000109dfb:	82                   	(bad)  
ffff800000109dfc:	c2 bc 00             	ret    0xbc
ffff800000109dff:	00 00                	add    BYTE PTR [rax],al
ffff800000109e01:	00 10                	add    BYTE PTR [rax],dl
ffff800000109e03:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e05:	7c 10                	jl     ffff800000109e17 <font_ascii+0x757>
ffff800000109e07:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e09:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e0b:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e0d:	0e                   	(bad)  
ffff800000109e0e:	00 00                	add    BYTE PTR [rax],al
ffff800000109e10:	00 00                	add    BYTE PTR [rax],al
ffff800000109e12:	00 00                	add    BYTE PTR [rax],al
ffff800000109e14:	00 c6                	add    dh,al
ffff800000109e16:	42                   	rex.X
ffff800000109e17:	42                   	rex.X
ffff800000109e18:	42                   	rex.X
ffff800000109e19:	42                   	rex.X
ffff800000109e1a:	42                   	rex.X
ffff800000109e1b:	42                   	rex.X
ffff800000109e1c:	46 3b 00             	rex.RX cmp r8d,DWORD PTR [rax]
ffff800000109e1f:	00 00                	add    BYTE PTR [rax],al
ffff800000109e21:	00 00                	add    BYTE PTR [rax],al
ffff800000109e23:	00 00                	add    BYTE PTR [rax],al
ffff800000109e25:	e7 42                	out    0x42,eax
ffff800000109e27:	42                   	rex.X
ffff800000109e28:	42 24 24             	rex.X and al,0x24
ffff800000109e2b:	24 18                	and    al,0x18
ffff800000109e2d:	18 00                	sbb    BYTE PTR [rax],al
ffff800000109e2f:	00 00                	add    BYTE PTR [rax],al
ffff800000109e31:	00 00                	add    BYTE PTR [rax],al
ffff800000109e33:	00 00                	add    BYTE PTR [rax],al
ffff800000109e35:	e7 42                	out    0x42,eax
ffff800000109e37:	42 5a                	rex.X pop rdx
ffff800000109e39:	5a                   	pop    rdx
ffff800000109e3a:	5a                   	pop    rdx
ffff800000109e3b:	24 24                	and    al,0x24
ffff800000109e3d:	24 00                	and    al,0x0
ffff800000109e3f:	00 00                	add    BYTE PTR [rax],al
ffff800000109e41:	00 00                	add    BYTE PTR [rax],al
ffff800000109e43:	00 00                	add    BYTE PTR [rax],al
ffff800000109e45:	c6 44 28 28 10       	mov    BYTE PTR [rax+rbp*1+0x28],0x10
ffff800000109e4a:	28 28                	sub    BYTE PTR [rax],ch
ffff800000109e4c:	44 c6 00 00          	rex.R mov BYTE PTR [rax],0x0
ffff800000109e50:	00 00                	add    BYTE PTR [rax],al
ffff800000109e52:	00 00                	add    BYTE PTR [rax],al
ffff800000109e54:	00 e7                	add    bh,ah
ffff800000109e56:	42                   	rex.X
ffff800000109e57:	42 24 24             	rex.X and al,0x24
ffff800000109e5a:	24 18                	and    al,0x18
ffff800000109e5c:	18 10                	sbb    BYTE PTR [rax],dl
ffff800000109e5e:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
ffff800000109e61:	00 00                	add    BYTE PTR [rax],al
ffff800000109e63:	00 00                	add    BYTE PTR [rax],al
ffff800000109e65:	fe 82 84 08 10 20    	inc    BYTE PTR [rdx+0x20100884]
ffff800000109e6b:	42 82                	rex.X (bad) 
ffff800000109e6d:	fe 00                	inc    BYTE PTR [rax]
ffff800000109e6f:	00 00                	add    BYTE PTR [rax],al
ffff800000109e71:	06                   	(bad)  
ffff800000109e72:	08 10                	or     BYTE PTR [rax],dl
ffff800000109e74:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e76:	10 60 10             	adc    BYTE PTR [rax+0x10],ah
ffff800000109e79:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e7b:	10 08                	adc    BYTE PTR [rax],cl
ffff800000109e7d:	06                   	(bad)  
ffff800000109e7e:	00 00                	add    BYTE PTR [rax],al
ffff800000109e80:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e82:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e84:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e86:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e88:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e8a:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e8c:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e8e:	10 10                	adc    BYTE PTR [rax],dl
ffff800000109e90:	00 60 10             	add    BYTE PTR [rax+0x10],ah
ffff800000109e93:	08 08                	or     BYTE PTR [rax],cl
ffff800000109e95:	08 08                	or     BYTE PTR [rax],cl
ffff800000109e97:	06                   	(bad)  
ffff800000109e98:	08 08                	or     BYTE PTR [rax],cl
ffff800000109e9a:	08 08                	or     BYTE PTR [rax],cl
ffff800000109e9c:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
ffff800000109e9f:	00 00                	add    BYTE PTR [rax],al
ffff800000109ea1:	72 8c                	jb     ffff800000109e2f <font_ascii+0x76f>
	...
ffff80000010a8cf:	00 00                	add    BYTE PTR [rax],al
ffff80000010a8d1:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a8d3:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a8d5:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a8d7:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a8d9:	10 00                	adc    BYTE PTR [rax],al
ffff80000010a8db:	00 10                	add    BYTE PTR [rax],dl
ffff80000010a8dd:	10 00                	adc    BYTE PTR [rax],al
ffff80000010a8df:	00 28                	add    BYTE PTR [rax],ch
ffff80000010a8e1:	28 28                	sub    BYTE PTR [rax],ch
	...
ffff80000010a8ef:	00 00                	add    BYTE PTR [rax],al
ffff80000010a8f1:	44                   	rex.R
ffff80000010a8f2:	44                   	rex.R
ffff80000010a8f3:	44 fe 44 44 44       	rex.R inc BYTE PTR [rsp+rax*2+0x44]
ffff80000010a8f8:	44                   	rex.R
ffff80000010a8f9:	44 fe 44 44 44       	rex.R inc BYTE PTR [rsp+rax*2+0x44]
ffff80000010a8fe:	00 00                	add    BYTE PTR [rax],al
ffff80000010a900:	10 3a                	adc    BYTE PTR [rdx],bh
ffff80000010a902:	56                   	push   rsi
ffff80000010a903:	92                   	xchg   edx,eax
ffff80000010a904:	92                   	xchg   edx,eax
ffff80000010a905:	90                   	nop
ffff80000010a906:	50                   	push   rax
ffff80000010a907:	38 14 12             	cmp    BYTE PTR [rdx+rdx*1],dl
ffff80000010a90a:	92                   	xchg   edx,eax
ffff80000010a90b:	92                   	xchg   edx,eax
ffff80000010a90c:	d4                   	(bad)  
ffff80000010a90d:	b8 10 10 62 92       	mov    eax,0x92621010
ffff80000010a912:	94                   	xchg   esp,eax
ffff80000010a913:	94                   	xchg   esp,eax
ffff80000010a914:	68 08 10 10 20       	push   0x20101008
ffff80000010a919:	2c 52                	sub    al,0x52
ffff80000010a91b:	52                   	push   rdx
ffff80000010a91c:	92                   	xchg   edx,eax
ffff80000010a91d:	8c 00                	mov    WORD PTR [rax],es
ffff80000010a91f:	00 00                	add    BYTE PTR [rax],al
ffff80000010a921:	70 88                	jo     ffff80000010a8ab <font_ascii+0x11eb>
ffff80000010a923:	88 88 90 60 47 a2    	mov    BYTE PTR [rax-0x5db89f70],cl
ffff80000010a929:	92                   	xchg   edx,eax
ffff80000010a92a:	8a 84 46 39 00 00 04 	mov    al,BYTE PTR [rsi+rax*2+0x4000039]
ffff80000010a931:	08 10                	or     BYTE PTR [rax],dl
	...
ffff80000010a93f:	00 02                	add    BYTE PTR [rdx],al
ffff80000010a941:	04 08                	add    al,0x8
ffff80000010a943:	08 10                	or     BYTE PTR [rax],dl
ffff80000010a945:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a947:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a949:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a94b:	08 08                	or     BYTE PTR [rax],cl
ffff80000010a94d:	04 02                	add    al,0x2
ffff80000010a94f:	00 80 40 20 20 10    	add    BYTE PTR [rax+0x10202040],al
ffff80000010a955:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a957:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a959:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a95b:	20 20                	and    BYTE PTR [rax],ah
ffff80000010a95d:	40 80 00 00          	rex add BYTE PTR [rax],0x0
ffff80000010a961:	00 00                	add    BYTE PTR [rax],al
ffff80000010a963:	00 00                	add    BYTE PTR [rax],al
ffff80000010a965:	10 92 54 38 54 92    	adc    BYTE PTR [rdx-0x6dabc7ac],dl
ffff80000010a96b:	10 00                	adc    BYTE PTR [rax],al
	...
ffff80000010a975:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a977:	10 fe                	adc    dh,bh
ffff80000010a979:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010a97b:	10 00                	adc    BYTE PTR [rax],al
	...
ffff80000010a989:	00 00                	add    BYTE PTR [rax],al
ffff80000010a98b:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010a98d:	08 08                	or     BYTE PTR [rax],cl
ffff80000010a98f:	10 00                	adc    BYTE PTR [rax],al
ffff80000010a991:	00 00                	add    BYTE PTR [rax],al
ffff80000010a993:	00 00                	add    BYTE PTR [rax],al
ffff80000010a995:	00 00                	add    BYTE PTR [rax],al
ffff80000010a997:	00 fe                	add    dh,bh
	...
ffff80000010a9a9:	00 00                	add    BYTE PTR [rax],al
ffff80000010a9ab:	00 18                	add    BYTE PTR [rax],bl
ffff80000010a9ad:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010a9af:	00 02                	add    BYTE PTR [rdx],al
ffff80000010a9b1:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
ffff80000010a9b4:	08 08                	or     BYTE PTR [rax],cl
ffff80000010a9b6:	08 10                	or     BYTE PTR [rax],dl
ffff80000010a9b8:	10 20                	adc    BYTE PTR [rax],ah
ffff80000010a9ba:	20 40 40             	and    BYTE PTR [rax+0x40],al
ffff80000010a9bd:	40 80 80 00 18 24 24 	rex add BYTE PTR [rax+0x24241800],0x42
ffff80000010a9c4:	42 
ffff80000010a9c5:	42                   	rex.X
ffff80000010a9c6:	42                   	rex.X
ffff80000010a9c7:	42                   	rex.X
ffff80000010a9c8:	42                   	rex.X
ffff80000010a9c9:	42                   	rex.X
ffff80000010a9ca:	42 24 24             	rex.X and al,0x24
ffff80000010a9cd:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010a9cf:	00 00                	add    BYTE PTR [rax],al
ffff80000010a9d1:	08 18                	or     BYTE PTR [rax],bl
ffff80000010a9d3:	28 08                	sub    BYTE PTR [rax],cl
ffff80000010a9d5:	08 08                	or     BYTE PTR [rax],cl
ffff80000010a9d7:	08 08                	or     BYTE PTR [rax],cl
ffff80000010a9d9:	08 08                	or     BYTE PTR [rax],cl
ffff80000010a9db:	08 08                	or     BYTE PTR [rax],cl
ffff80000010a9dd:	3e 00 00             	add    BYTE PTR ds:[rax],al
ffff80000010a9e0:	00 18                	add    BYTE PTR [rax],bl
ffff80000010a9e2:	24 42                	and    al,0x42
ffff80000010a9e4:	42 02 04 08          	add    al,BYTE PTR [rax+r9*1]
ffff80000010a9e8:	10 20                	adc    BYTE PTR [rax],ah
ffff80000010a9ea:	20 40 40             	and    BYTE PTR [rax+0x40],al
ffff80000010a9ed:	7e 00                	jle    ffff80000010a9ef <font_ascii+0x132f>
ffff80000010a9ef:	00 00                	add    BYTE PTR [rax],al
ffff80000010a9f1:	18 24 42             	sbb    BYTE PTR [rdx+rax*2],ah
ffff80000010a9f4:	02 02                	add    al,BYTE PTR [rdx]
ffff80000010a9f6:	04 18                	add    al,0x18
ffff80000010a9f8:	04 02                	add    al,0x2
ffff80000010a9fa:	02 42 24             	add    al,BYTE PTR [rdx+0x24]
ffff80000010a9fd:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010a9ff:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa01:	0c 0c                	or     al,0xc
ffff80000010aa03:	0c 14                	or     al,0x14
ffff80000010aa05:	14 14                	adc    al,0x14
ffff80000010aa07:	24 24                	and    al,0x24
ffff80000010aa09:	44 7e 04             	rex.R jle ffff80000010aa10 <font_ascii+0x1350>
ffff80000010aa0c:	04 1e                	add    al,0x1e
ffff80000010aa0e:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa10:	00 7c 40 40          	add    BYTE PTR [rax+rax*2+0x40],bh
ffff80000010aa14:	40 58                	rex pop rax
ffff80000010aa16:	64 02 02             	add    al,BYTE PTR fs:[rdx]
ffff80000010aa19:	02 02                	add    al,BYTE PTR [rdx]
ffff80000010aa1b:	42 24 18             	rex.X and al,0x18
ffff80000010aa1e:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa20:	00 18                	add    BYTE PTR [rax],bl
ffff80000010aa22:	24 42                	and    al,0x42
ffff80000010aa24:	40 58                	rex pop rax
ffff80000010aa26:	64 42                	fs rex.X
ffff80000010aa28:	42                   	rex.X
ffff80000010aa29:	42                   	rex.X
ffff80000010aa2a:	42                   	rex.X
ffff80000010aa2b:	42 24 18             	rex.X and al,0x18
ffff80000010aa2e:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa30:	00 7e 42             	add    BYTE PTR [rsi+0x42],bh
ffff80000010aa33:	42 04 04             	rex.X add al,0x4
ffff80000010aa36:	08 08                	or     BYTE PTR [rax],cl
ffff80000010aa38:	08 10                	or     BYTE PTR [rax],dl
ffff80000010aa3a:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010aa3c:	10 38                	adc    BYTE PTR [rax],bh
ffff80000010aa3e:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa40:	00 18                	add    BYTE PTR [rax],bl
ffff80000010aa42:	24 42                	and    al,0x42
ffff80000010aa44:	42                   	rex.X
ffff80000010aa45:	42 24 18             	rex.X and al,0x18
ffff80000010aa48:	24 42                	and    al,0x42
ffff80000010aa4a:	42                   	rex.X
ffff80000010aa4b:	42 24 18             	rex.X and al,0x18
ffff80000010aa4e:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa50:	00 18                	add    BYTE PTR [rax],bl
ffff80000010aa52:	24 42                	and    al,0x42
ffff80000010aa54:	42                   	rex.X
ffff80000010aa55:	42                   	rex.X
ffff80000010aa56:	42                   	rex.X
ffff80000010aa57:	42                   	rex.X
ffff80000010aa58:	26 1a 02             	sbb    al,BYTE PTR es:[rdx]
ffff80000010aa5b:	42 24 18             	rex.X and al,0x18
ffff80000010aa5e:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa60:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa62:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa64:	00 18                	add    BYTE PTR [rax],bl
ffff80000010aa66:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010aa68:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa6a:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa6c:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010aa6e:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa70:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa72:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa74:	00 18                	add    BYTE PTR [rax],bl
ffff80000010aa76:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010aa78:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa7a:	00 18                	add    BYTE PTR [rax],bl
ffff80000010aa7c:	18 08                	sbb    BYTE PTR [rax],cl
ffff80000010aa7e:	08 10                	or     BYTE PTR [rax],dl
ffff80000010aa80:	00 02                	add    BYTE PTR [rdx],al
ffff80000010aa82:	04 08                	add    al,0x8
ffff80000010aa84:	10 20                	adc    BYTE PTR [rax],ah
ffff80000010aa86:	40 80 80 40 20 10 08 	rex add BYTE PTR [rax+0x8102040],0x4
ffff80000010aa8d:	04 
ffff80000010aa8e:	02 00                	add    al,BYTE PTR [rax]
ffff80000010aa90:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa92:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa94:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa96:	fe 00                	inc    BYTE PTR [rax]
ffff80000010aa98:	00 fe                	add    dh,bh
ffff80000010aa9a:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa9c:	00 00                	add    BYTE PTR [rax],al
ffff80000010aa9e:	00 00                	add    BYTE PTR [rax],al
ffff80000010aaa0:	00 80 40 20 10 08    	add    BYTE PTR [rax+0x8102040],al
ffff80000010aaa6:	04 02                	add    al,0x2
ffff80000010aaa8:	02 04 08             	add    al,BYTE PTR [rax+rcx*1]
ffff80000010aaab:	10 20                	adc    BYTE PTR [rax],ah
ffff80000010aaad:	40 80 00 00          	rex add BYTE PTR [rax],0x0
ffff80000010aab1:	38 44 82 82          	cmp    BYTE PTR [rdx+rax*4-0x7e],al
ffff80000010aab5:	82                   	(bad)  
ffff80000010aab6:	04 08                	add    al,0x8
ffff80000010aab8:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010aaba:	00 00                	add    BYTE PTR [rax],al
ffff80000010aabc:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010aabe:	00 00                	add    BYTE PTR [rax],al
ffff80000010aac0:	00 38                	add    BYTE PTR [rax],bh
ffff80000010aac2:	44 82                	rex.R (bad) 
ffff80000010aac4:	9a                   	(bad)  
ffff80000010aac5:	aa                   	stos   BYTE PTR es:[rdi],al
ffff80000010aac6:	aa                   	stos   BYTE PTR es:[rdi],al
ffff80000010aac7:	aa                   	stos   BYTE PTR es:[rdi],al
ffff80000010aac8:	aa                   	stos   BYTE PTR es:[rdi],al
ffff80000010aac9:	aa                   	stos   BYTE PTR es:[rdi],al
ffff80000010aaca:	9c                   	pushf  
ffff80000010aacb:	80 46 38 00          	add    BYTE PTR [rsi+0x38],0x0
ffff80000010aacf:	00 00                	add    BYTE PTR [rax],al
ffff80000010aad1:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010aad3:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010aad5:	24 24                	and    al,0x24
ffff80000010aad7:	24 24                	and    al,0x24
ffff80000010aad9:	7e 42                	jle    ffff80000010ab1d <font_ascii+0x145d>
ffff80000010aadb:	42                   	rex.X
ffff80000010aadc:	42 e7 00             	rex.X out 0x0,eax
ffff80000010aadf:	00 00                	add    BYTE PTR [rax],al
ffff80000010aae1:	f0 48                	lock rex.W
ffff80000010aae3:	44                   	rex.R
ffff80000010aae4:	44                   	rex.R
ffff80000010aae5:	44                   	rex.R
ffff80000010aae6:	48 78 44             	rex.W js ffff80000010ab2d <font_ascii+0x146d>
ffff80000010aae9:	42                   	rex.X
ffff80000010aaea:	42                   	rex.X
ffff80000010aaeb:	42                   	rex.X
ffff80000010aaec:	44 f8                	rex.R clc 
ffff80000010aaee:	00 00                	add    BYTE PTR [rax],al
ffff80000010aaf0:	00 3a                	add    BYTE PTR [rdx],bh
ffff80000010aaf2:	46                   	rex.RX
ffff80000010aaf3:	42 82                	rex.X (bad) 
ffff80000010aaf5:	80 80 80 80 80 82 42 	add    BYTE PTR [rax-0x7d7f7f80],0x42
ffff80000010aafc:	44 38 00             	cmp    BYTE PTR [rax],r8b
ffff80000010aaff:	00 00                	add    BYTE PTR [rax],al
ffff80000010ab01:	f8                   	clc    
ffff80000010ab02:	44                   	rex.R
ffff80000010ab03:	44                   	rex.R
ffff80000010ab04:	42                   	rex.X
ffff80000010ab05:	42                   	rex.X
ffff80000010ab06:	42                   	rex.X
ffff80000010ab07:	42                   	rex.X
ffff80000010ab08:	42                   	rex.X
ffff80000010ab09:	42                   	rex.X
ffff80000010ab0a:	42                   	rex.X
ffff80000010ab0b:	44                   	rex.R
ffff80000010ab0c:	44 f8                	rex.R clc 
ffff80000010ab0e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ab10:	00 fe                	add    dh,bh
ffff80000010ab12:	42                   	rex.X
ffff80000010ab13:	42                   	rex.X
ffff80000010ab14:	40                   	rex
ffff80000010ab15:	40                   	rex
ffff80000010ab16:	44 7c 44             	rex.R jl ffff80000010ab5d <font_ascii+0x149d>
ffff80000010ab19:	40                   	rex
ffff80000010ab1a:	40                   	rex
ffff80000010ab1b:	42                   	rex.X
ffff80000010ab1c:	42 fe 00             	rex.X inc BYTE PTR [rax]
ffff80000010ab1f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ab21:	fe 42 42             	inc    BYTE PTR [rdx+0x42]
ffff80000010ab24:	40                   	rex
ffff80000010ab25:	40                   	rex
ffff80000010ab26:	44 7c 44             	rex.R jl ffff80000010ab6d <font_ascii+0x14ad>
ffff80000010ab29:	44                   	rex.R
ffff80000010ab2a:	40                   	rex
ffff80000010ab2b:	40                   	rex
ffff80000010ab2c:	40                   	rex
ffff80000010ab2d:	f0 00 00             	lock add BYTE PTR [rax],al
ffff80000010ab30:	00 3a                	add    BYTE PTR [rdx],bh
ffff80000010ab32:	46                   	rex.RX
ffff80000010ab33:	42 82                	rex.X (bad) 
ffff80000010ab35:	80 80 9e 82 82 82 42 	add    BYTE PTR [rax-0x7d7d7d62],0x42
ffff80000010ab3c:	46 38 00             	rex.RX cmp BYTE PTR [rax],r8b
ffff80000010ab3f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ab41:	e7 42                	out    0x42,eax
ffff80000010ab43:	42                   	rex.X
ffff80000010ab44:	42                   	rex.X
ffff80000010ab45:	42                   	rex.X
ffff80000010ab46:	42 7e 42             	rex.X jle ffff80000010ab8b <font_ascii+0x14cb>
ffff80000010ab49:	42                   	rex.X
ffff80000010ab4a:	42                   	rex.X
ffff80000010ab4b:	42                   	rex.X
ffff80000010ab4c:	42 e7 00             	rex.X out 0x0,eax
ffff80000010ab4f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ab51:	7c 10                	jl     ffff80000010ab63 <font_ascii+0x14a3>
ffff80000010ab53:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ab55:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ab57:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ab59:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ab5b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ab5d:	7c 00                	jl     ffff80000010ab5f <font_ascii+0x149f>
ffff80000010ab5f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ab61:	1f                   	(bad)  
ffff80000010ab62:	04 04                	add    al,0x4
ffff80000010ab64:	04 04                	add    al,0x4
ffff80000010ab66:	04 04                	add    al,0x4
ffff80000010ab68:	04 04                	add    al,0x4
ffff80000010ab6a:	04 04                	add    al,0x4
ffff80000010ab6c:	84 48 30             	test   BYTE PTR [rax+0x30],cl
ffff80000010ab6f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ab71:	e7 42                	out    0x42,eax
ffff80000010ab73:	44                   	rex.R
ffff80000010ab74:	48 50                	rex.W push rax
ffff80000010ab76:	50                   	push   rax
ffff80000010ab77:	60                   	(bad)  
ffff80000010ab78:	50                   	push   rax
ffff80000010ab79:	50                   	push   rax
ffff80000010ab7a:	48                   	rex.W
ffff80000010ab7b:	44                   	rex.R
ffff80000010ab7c:	42 e7 00             	rex.X out 0x0,eax
ffff80000010ab7f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ab81:	f0 40                	lock rex
ffff80000010ab83:	40                   	rex
ffff80000010ab84:	40                   	rex
ffff80000010ab85:	40                   	rex
ffff80000010ab86:	40                   	rex
ffff80000010ab87:	40                   	rex
ffff80000010ab88:	40                   	rex
ffff80000010ab89:	40                   	rex
ffff80000010ab8a:	40                   	rex
ffff80000010ab8b:	42                   	rex.X
ffff80000010ab8c:	42 fe 00             	rex.X inc BYTE PTR [rax]
ffff80000010ab8f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ab91:	c3                   	ret    
ffff80000010ab92:	42                   	rex.X
ffff80000010ab93:	66 66 66 5a          	data16 data16 pop dx
ffff80000010ab97:	5a                   	pop    rdx
ffff80000010ab98:	5a                   	pop    rdx
ffff80000010ab99:	42                   	rex.X
ffff80000010ab9a:	42                   	rex.X
ffff80000010ab9b:	42                   	rex.X
ffff80000010ab9c:	42 e7 00             	rex.X out 0x0,eax
ffff80000010ab9f:	00 00                	add    BYTE PTR [rax],al
ffff80000010aba1:	c7 42 62 62 52 52 52 	mov    DWORD PTR [rdx+0x62],0x52525262
ffff80000010aba8:	4a                   	rex.WX
ffff80000010aba9:	4a                   	rex.WX
ffff80000010abaa:	4a                   	rex.WX
ffff80000010abab:	46                   	rex.RX
ffff80000010abac:	46 e2 00             	rex.RX loop ffff80000010abaf <font_ascii+0x14ef>
ffff80000010abaf:	00 00                	add    BYTE PTR [rax],al
ffff80000010abb1:	38 44 82 82          	cmp    BYTE PTR [rdx+rax*4-0x7e],al
ffff80000010abb5:	82                   	(bad)  
ffff80000010abb6:	82                   	(bad)  
ffff80000010abb7:	82                   	(bad)  
ffff80000010abb8:	82                   	(bad)  
ffff80000010abb9:	82                   	(bad)  
ffff80000010abba:	82                   	(bad)  
ffff80000010abbb:	82                   	(bad)  
ffff80000010abbc:	44 38 00             	cmp    BYTE PTR [rax],r8b
ffff80000010abbf:	00 00                	add    BYTE PTR [rax],al
ffff80000010abc1:	f8                   	clc    
ffff80000010abc2:	44                   	rex.R
ffff80000010abc3:	42                   	rex.X
ffff80000010abc4:	42                   	rex.X
ffff80000010abc5:	42                   	rex.X
ffff80000010abc6:	44 78 40             	rex.R js ffff80000010ac09 <font_ascii+0x1549>
ffff80000010abc9:	40                   	rex
ffff80000010abca:	40                   	rex
ffff80000010abcb:	40                   	rex
ffff80000010abcc:	40                   	rex
ffff80000010abcd:	f0 00 00             	lock add BYTE PTR [rax],al
ffff80000010abd0:	00 38                	add    BYTE PTR [rax],bh
ffff80000010abd2:	44 82                	rex.R (bad) 
ffff80000010abd4:	82                   	(bad)  
ffff80000010abd5:	82                   	(bad)  
ffff80000010abd6:	82                   	(bad)  
ffff80000010abd7:	82                   	(bad)  
ffff80000010abd8:	82                   	(bad)  
ffff80000010abd9:	82                   	(bad)  
ffff80000010abda:	92                   	xchg   edx,eax
ffff80000010abdb:	8a 44 3a 00          	mov    al,BYTE PTR [rdx+rdi*1+0x0]
ffff80000010abdf:	00 00                	add    BYTE PTR [rax],al
ffff80000010abe1:	fc                   	cld    
ffff80000010abe2:	42                   	rex.X
ffff80000010abe3:	42                   	rex.X
ffff80000010abe4:	42                   	rex.X
ffff80000010abe5:	42 7c 44             	rex.X jl ffff80000010ac2c <font_ascii+0x156c>
ffff80000010abe8:	42                   	rex.X
ffff80000010abe9:	42                   	rex.X
ffff80000010abea:	42                   	rex.X
ffff80000010abeb:	42                   	rex.X
ffff80000010abec:	42 e7 00             	rex.X out 0x0,eax
ffff80000010abef:	00 00                	add    BYTE PTR [rax],al
ffff80000010abf1:	3a 46 82             	cmp    al,BYTE PTR [rsi-0x7e]
ffff80000010abf4:	82                   	(bad)  
ffff80000010abf5:	80 40 38 04          	add    BYTE PTR [rax+0x38],0x4
ffff80000010abf9:	02 82 82 c4 b8 00    	add    al,BYTE PTR [rdx+0xb8c482]
ffff80000010abff:	00 00                	add    BYTE PTR [rax],al
ffff80000010ac01:	fe                   	(bad)  
ffff80000010ac02:	92                   	xchg   edx,eax
ffff80000010ac03:	92                   	xchg   edx,eax
ffff80000010ac04:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ac06:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ac08:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ac0a:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ac0c:	10 7c 00 00          	adc    BYTE PTR [rax+rax*1+0x0],bh
ffff80000010ac10:	00 e7                	add    bh,ah
ffff80000010ac12:	42                   	rex.X
ffff80000010ac13:	42                   	rex.X
ffff80000010ac14:	42                   	rex.X
ffff80000010ac15:	42                   	rex.X
ffff80000010ac16:	42                   	rex.X
ffff80000010ac17:	42                   	rex.X
ffff80000010ac18:	42                   	rex.X
ffff80000010ac19:	42                   	rex.X
ffff80000010ac1a:	42                   	rex.X
ffff80000010ac1b:	42 24 3c             	rex.X and al,0x3c
ffff80000010ac1e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ac20:	00 e7                	add    bh,ah
ffff80000010ac22:	42                   	rex.X
ffff80000010ac23:	42                   	rex.X
ffff80000010ac24:	42                   	rex.X
ffff80000010ac25:	42 24 24             	rex.X and al,0x24
ffff80000010ac28:	24 24                	and    al,0x24
ffff80000010ac2a:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010ac2c:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010ac2e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ac30:	00 e7                	add    bh,ah
ffff80000010ac32:	42                   	rex.X
ffff80000010ac33:	42                   	rex.X
ffff80000010ac34:	42 5a                	rex.X pop rdx
ffff80000010ac36:	5a                   	pop    rdx
ffff80000010ac37:	5a                   	pop    rdx
ffff80000010ac38:	5a                   	pop    rdx
ffff80000010ac39:	24 24                	and    al,0x24
ffff80000010ac3b:	24 24                	and    al,0x24
ffff80000010ac3d:	24 00                	and    al,0x0
ffff80000010ac3f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ac41:	e7 42                	out    0x42,eax
ffff80000010ac43:	42 24 24             	rex.X and al,0x24
ffff80000010ac46:	24 18                	and    al,0x18
ffff80000010ac48:	24 24                	and    al,0x24
ffff80000010ac4a:	24 42                	and    al,0x42
ffff80000010ac4c:	42 e7 00             	rex.X out 0x0,eax
ffff80000010ac4f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ac51:	ee                   	out    dx,al
ffff80000010ac52:	44                   	rex.R
ffff80000010ac53:	44                   	rex.R
ffff80000010ac54:	44 28 28             	sub    BYTE PTR [rax],r13b
ffff80000010ac57:	28 10                	sub    BYTE PTR [rax],dl
ffff80000010ac59:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ac5b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ac5d:	7c 00                	jl     ffff80000010ac5f <font_ascii+0x159f>
ffff80000010ac5f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ac61:	fe 84 84 08 08 10 10 	inc    BYTE PTR [rsp+rax*4+0x10100808]
ffff80000010ac68:	20 20                	and    BYTE PTR [rax],ah
ffff80000010ac6a:	40                   	rex
ffff80000010ac6b:	42 82                	rex.X (bad) 
ffff80000010ac6d:	fe 00                	inc    BYTE PTR [rax]
ffff80000010ac6f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ac71:	3e 20 20             	and    BYTE PTR ds:[rax],ah
ffff80000010ac74:	20 20                	and    BYTE PTR [rax],ah
ffff80000010ac76:	20 20                	and    BYTE PTR [rax],ah
ffff80000010ac78:	20 20                	and    BYTE PTR [rax],ah
ffff80000010ac7a:	20 20                	and    BYTE PTR [rax],ah
ffff80000010ac7c:	20 20                	and    BYTE PTR [rax],ah
ffff80000010ac7e:	3e 00 80 80 40 40 20 	add    BYTE PTR ds:[rax+0x20404080],al
ffff80000010ac85:	20 20                	and    BYTE PTR [rax],ah
ffff80000010ac87:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ac89:	08 08                	or     BYTE PTR [rax],cl
ffff80000010ac8b:	04 04                	add    al,0x4
ffff80000010ac8d:	04 02                	add    al,0x2
ffff80000010ac8f:	02 00                	add    al,BYTE PTR [rax]
ffff80000010ac91:	7c 04                	jl     ffff80000010ac97 <font_ascii+0x15d7>
ffff80000010ac93:	04 04                	add    al,0x4
ffff80000010ac95:	04 04                	add    al,0x4
ffff80000010ac97:	04 04                	add    al,0x4
ffff80000010ac99:	04 04                	add    al,0x4
ffff80000010ac9b:	04 04                	add    al,0x4
ffff80000010ac9d:	04 7c                	add    al,0x7c
ffff80000010ac9f:	00 00                	add    BYTE PTR [rax],al
ffff80000010aca1:	10 28                	adc    BYTE PTR [rax],ch
ffff80000010aca3:	44 82                	rex.R (bad) 
	...
ffff80000010acbd:	00 fe                	add    dh,bh
ffff80000010acbf:	00 10                	add    BYTE PTR [rax],dl
ffff80000010acc1:	08 04 00             	or     BYTE PTR [rax+rax*1],al
	...
ffff80000010acd4:	00 70 08             	add    BYTE PTR [rax+0x8],dh
ffff80000010acd7:	04 3c                	add    al,0x3c
ffff80000010acd9:	44 84 84 8c 76 00 00 	test   BYTE PTR [rsp+rcx*4-0x3fffff8a],r8b
ffff80000010ace0:	c0 
ffff80000010ace1:	40                   	rex
ffff80000010ace2:	40                   	rex
ffff80000010ace3:	40                   	rex
ffff80000010ace4:	40 58                	rex pop rax
ffff80000010ace6:	64 42                	fs rex.X
ffff80000010ace8:	42                   	rex.X
ffff80000010ace9:	42                   	rex.X
ffff80000010acea:	42                   	rex.X
ffff80000010aceb:	42                   	rex.X
ffff80000010acec:	64 58                	fs pop rax
ffff80000010acee:	00 00                	add    BYTE PTR [rax],al
ffff80000010acf0:	00 00                	add    BYTE PTR [rax],al
ffff80000010acf2:	00 00                	add    BYTE PTR [rax],al
ffff80000010acf4:	00 30                	add    BYTE PTR [rax],dh
ffff80000010acf6:	4c 84 84 80 80 82 44 	rex.WR test BYTE PTR [rax+rax*4+0x38448280],r8b
ffff80000010acfd:	38 
ffff80000010acfe:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad00:	0c 04                	or     al,0x4
ffff80000010ad02:	04 04                	add    al,0x4
ffff80000010ad04:	04 34                	add    al,0x34
ffff80000010ad06:	4c 84 84 84 84 84 4c 	rex.WR test BYTE PTR [rsp+rax*4+0x364c8484],r8b
ffff80000010ad0d:	36 
ffff80000010ad0e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad10:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad12:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad14:	00 38                	add    BYTE PTR [rax],bh
ffff80000010ad16:	44 82                	rex.R (bad) 
ffff80000010ad18:	82                   	(bad)  
ffff80000010ad19:	fc                   	cld    
ffff80000010ad1a:	80 82 42 3c 00 00 0e 	add    BYTE PTR [rdx+0x3c42],0xe
ffff80000010ad21:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad23:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad25:	7c 10                	jl     ffff80000010ad37 <font_ascii+0x1677>
ffff80000010ad27:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad29:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad2b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad2d:	7c 00                	jl     ffff80000010ad2f <font_ascii+0x166f>
ffff80000010ad2f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad31:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad33:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad35:	36 4c 84 84 84 84 4c 	rex.WR test BYTE PTR ss:[rsp+rax*4+0x4344c84],r8b
ffff80000010ad3c:	34 04 
ffff80000010ad3e:	04 38                	add    al,0x38
ffff80000010ad40:	c0 40 40 40          	rol    BYTE PTR [rax+0x40],0x40
ffff80000010ad44:	40 58                	rex pop rax
ffff80000010ad46:	64 42                	fs rex.X
ffff80000010ad48:	42                   	rex.X
ffff80000010ad49:	42                   	rex.X
ffff80000010ad4a:	42                   	rex.X
ffff80000010ad4b:	42                   	rex.X
ffff80000010ad4c:	42 e3 00             	rex.X jrcxz ffff80000010ad4f <font_ascii+0x168f>
ffff80000010ad4f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad51:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad53:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad55:	30 10                	xor    BYTE PTR [rax],dl
ffff80000010ad57:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad59:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad5b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad5d:	38 00                	cmp    BYTE PTR [rax],al
ffff80000010ad5f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad61:	04 04                	add    al,0x4
ffff80000010ad63:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad65:	0c 04                	or     al,0x4
ffff80000010ad67:	04 04                	add    al,0x4
ffff80000010ad69:	04 04                	add    al,0x4
ffff80000010ad6b:	04 04                	add    al,0x4
ffff80000010ad6d:	08 08                	or     BYTE PTR [rax],cl
ffff80000010ad6f:	30 c0                	xor    al,al
ffff80000010ad71:	40                   	rex
ffff80000010ad72:	40                   	rex
ffff80000010ad73:	40                   	rex
ffff80000010ad74:	40                   	rex
ffff80000010ad75:	4e                   	rex.WRX
ffff80000010ad76:	44                   	rex.R
ffff80000010ad77:	48 50                	rex.W push rax
ffff80000010ad79:	60                   	(bad)  
ffff80000010ad7a:	50                   	push   rax
ffff80000010ad7b:	48                   	rex.W
ffff80000010ad7c:	44 e6 00             	rex.R out 0x0,al
ffff80000010ad7f:	00 30                	add    BYTE PTR [rax],dh
ffff80000010ad81:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad83:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad85:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad87:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad89:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad8b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ad8d:	38 00                	cmp    BYTE PTR [rax],al
ffff80000010ad8f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad91:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad93:	00 00                	add    BYTE PTR [rax],al
ffff80000010ad95:	f6 49 49 49          	test   BYTE PTR [rcx+0x49],0x49
ffff80000010ad99:	49                   	rex.WB
ffff80000010ad9a:	49                   	rex.WB
ffff80000010ad9b:	49                   	rex.WB
ffff80000010ad9c:	49 db 00             	rex.WB fild DWORD PTR [r8]
ffff80000010ad9f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ada1:	00 00                	add    BYTE PTR [rax],al
ffff80000010ada3:	00 00                	add    BYTE PTR [rax],al
ffff80000010ada5:	d8 64 42 42          	fsub   DWORD PTR [rdx+rax*2+0x42]
ffff80000010ada9:	42                   	rex.X
ffff80000010adaa:	42                   	rex.X
ffff80000010adab:	42                   	rex.X
ffff80000010adac:	42 e3 00             	rex.X jrcxz ffff80000010adaf <font_ascii+0x16ef>
ffff80000010adaf:	00 00                	add    BYTE PTR [rax],al
ffff80000010adb1:	00 00                	add    BYTE PTR [rax],al
ffff80000010adb3:	00 00                	add    BYTE PTR [rax],al
ffff80000010adb5:	38 44 82 82          	cmp    BYTE PTR [rdx+rax*4-0x7e],al
ffff80000010adb9:	82                   	(bad)  
ffff80000010adba:	82                   	(bad)  
ffff80000010adbb:	82                   	(bad)  
ffff80000010adbc:	44 38 00             	cmp    BYTE PTR [rax],r8b
ffff80000010adbf:	00 00                	add    BYTE PTR [rax],al
ffff80000010adc1:	00 00                	add    BYTE PTR [rax],al
ffff80000010adc3:	00 d8                	add    al,bl
ffff80000010adc5:	64 42                	fs rex.X
ffff80000010adc7:	42                   	rex.X
ffff80000010adc8:	42                   	rex.X
ffff80000010adc9:	42                   	rex.X
ffff80000010adca:	42                   	rex.X
ffff80000010adcb:	64 58                	fs pop rax
ffff80000010adcd:	40                   	rex
ffff80000010adce:	40 e0 00             	rex loopne ffff80000010add1 <font_ascii+0x1711>
ffff80000010add1:	00 00                	add    BYTE PTR [rax],al
ffff80000010add3:	00 34 4c             	add    BYTE PTR [rsp+rcx*2],dh
ffff80000010add6:	84 84 84 84 84 4c 34 	test   BYTE PTR [rsp+rax*4+0x344c8484],al
ffff80000010addd:	04 04                	add    al,0x4
ffff80000010addf:	0e                   	(bad)  
ffff80000010ade0:	00 00                	add    BYTE PTR [rax],al
ffff80000010ade2:	00 00                	add    BYTE PTR [rax],al
ffff80000010ade4:	00 dc                	add    ah,bl
ffff80000010ade6:	62 42                	(bad)  
ffff80000010ade8:	40                   	rex
ffff80000010ade9:	40                   	rex
ffff80000010adea:	40                   	rex
ffff80000010adeb:	40                   	rex
ffff80000010adec:	40 e0 00             	rex loopne ffff80000010adef <font_ascii+0x172f>
ffff80000010adef:	00 00                	add    BYTE PTR [rax],al
ffff80000010adf1:	00 00                	add    BYTE PTR [rax],al
ffff80000010adf3:	00 00                	add    BYTE PTR [rax],al
ffff80000010adf5:	7a 86                	jp     ffff80000010ad7d <font_ascii+0x16bd>
ffff80000010adf7:	82                   	(bad)  
ffff80000010adf8:	c0 38 06             	sar    BYTE PTR [rax],0x6
ffff80000010adfb:	82                   	(bad)  
ffff80000010adfc:	c2 bc 00             	ret    0xbc
ffff80000010adff:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae01:	00 10                	add    BYTE PTR [rax],dl
ffff80000010ae03:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae05:	7c 10                	jl     ffff80000010ae17 <font_ascii+0x1757>
ffff80000010ae07:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae09:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae0b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae0d:	0e                   	(bad)  
ffff80000010ae0e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae10:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae12:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae14:	00 c6                	add    dh,al
ffff80000010ae16:	42                   	rex.X
ffff80000010ae17:	42                   	rex.X
ffff80000010ae18:	42                   	rex.X
ffff80000010ae19:	42                   	rex.X
ffff80000010ae1a:	42                   	rex.X
ffff80000010ae1b:	42                   	rex.X
ffff80000010ae1c:	46 3b 00             	rex.RX cmp r8d,DWORD PTR [rax]
ffff80000010ae1f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae21:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae23:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae25:	e7 42                	out    0x42,eax
ffff80000010ae27:	42                   	rex.X
ffff80000010ae28:	42 24 24             	rex.X and al,0x24
ffff80000010ae2b:	24 18                	and    al,0x18
ffff80000010ae2d:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010ae2f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae31:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae33:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae35:	e7 42                	out    0x42,eax
ffff80000010ae37:	42 5a                	rex.X pop rdx
ffff80000010ae39:	5a                   	pop    rdx
ffff80000010ae3a:	5a                   	pop    rdx
ffff80000010ae3b:	24 24                	and    al,0x24
ffff80000010ae3d:	24 00                	and    al,0x0
ffff80000010ae3f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae41:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae43:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae45:	c6 44 28 28 10       	mov    BYTE PTR [rax+rbp*1+0x28],0x10
ffff80000010ae4a:	28 28                	sub    BYTE PTR [rax],ch
ffff80000010ae4c:	44 c6 00 00          	rex.R mov BYTE PTR [rax],0x0
ffff80000010ae50:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae52:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae54:	00 e7                	add    bh,ah
ffff80000010ae56:	42                   	rex.X
ffff80000010ae57:	42 24 24             	rex.X and al,0x24
ffff80000010ae5a:	24 18                	and    al,0x18
ffff80000010ae5c:	18 10                	sbb    BYTE PTR [rax],dl
ffff80000010ae5e:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
ffff80000010ae61:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae63:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae65:	fe 82 84 08 10 20    	inc    BYTE PTR [rdx+0x20100884]
ffff80000010ae6b:	42 82                	rex.X (bad) 
ffff80000010ae6d:	fe 00                	inc    BYTE PTR [rax]
ffff80000010ae6f:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae71:	06                   	(bad)  
ffff80000010ae72:	08 10                	or     BYTE PTR [rax],dl
ffff80000010ae74:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae76:	10 60 10             	adc    BYTE PTR [rax+0x10],ah
ffff80000010ae79:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae7b:	10 08                	adc    BYTE PTR [rax],cl
ffff80000010ae7d:	06                   	(bad)  
ffff80000010ae7e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ae80:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae82:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae84:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae86:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae88:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae8a:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae8c:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae8e:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ae90:	00 60 10             	add    BYTE PTR [rax+0x10],ah
ffff80000010ae93:	08 08                	or     BYTE PTR [rax],cl
ffff80000010ae95:	08 08                	or     BYTE PTR [rax],cl
ffff80000010ae97:	06                   	(bad)  
ffff80000010ae98:	08 08                	or     BYTE PTR [rax],cl
ffff80000010ae9a:	08 08                	or     BYTE PTR [rax],cl
ffff80000010ae9c:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
ffff80000010ae9f:	00 00                	add    BYTE PTR [rax],al
ffff80000010aea1:	72 8c                	jb     ffff80000010ae2f <font_ascii+0x176f>
	...
ffff80000010b8cf:	00 00                	add    BYTE PTR [rax],al
ffff80000010b8d1:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b8d3:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b8d5:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b8d7:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b8d9:	10 00                	adc    BYTE PTR [rax],al
ffff80000010b8db:	00 10                	add    BYTE PTR [rax],dl
ffff80000010b8dd:	10 00                	adc    BYTE PTR [rax],al
ffff80000010b8df:	00 28                	add    BYTE PTR [rax],ch
ffff80000010b8e1:	28 28                	sub    BYTE PTR [rax],ch
	...
ffff80000010b8ef:	00 00                	add    BYTE PTR [rax],al
ffff80000010b8f1:	44                   	rex.R
ffff80000010b8f2:	44                   	rex.R
ffff80000010b8f3:	44 fe 44 44 44       	rex.R inc BYTE PTR [rsp+rax*2+0x44]
ffff80000010b8f8:	44                   	rex.R
ffff80000010b8f9:	44 fe 44 44 44       	rex.R inc BYTE PTR [rsp+rax*2+0x44]
ffff80000010b8fe:	00 00                	add    BYTE PTR [rax],al
ffff80000010b900:	10 3a                	adc    BYTE PTR [rdx],bh
ffff80000010b902:	56                   	push   rsi
ffff80000010b903:	92                   	xchg   edx,eax
ffff80000010b904:	92                   	xchg   edx,eax
ffff80000010b905:	90                   	nop
ffff80000010b906:	50                   	push   rax
ffff80000010b907:	38 14 12             	cmp    BYTE PTR [rdx+rdx*1],dl
ffff80000010b90a:	92                   	xchg   edx,eax
ffff80000010b90b:	92                   	xchg   edx,eax
ffff80000010b90c:	d4                   	(bad)  
ffff80000010b90d:	b8 10 10 62 92       	mov    eax,0x92621010
ffff80000010b912:	94                   	xchg   esp,eax
ffff80000010b913:	94                   	xchg   esp,eax
ffff80000010b914:	68 08 10 10 20       	push   0x20101008
ffff80000010b919:	2c 52                	sub    al,0x52
ffff80000010b91b:	52                   	push   rdx
ffff80000010b91c:	92                   	xchg   edx,eax
ffff80000010b91d:	8c 00                	mov    WORD PTR [rax],es
ffff80000010b91f:	00 00                	add    BYTE PTR [rax],al
ffff80000010b921:	70 88                	jo     ffff80000010b8ab <font_ascii+0x21eb>
ffff80000010b923:	88 88 90 60 47 a2    	mov    BYTE PTR [rax-0x5db89f70],cl
ffff80000010b929:	92                   	xchg   edx,eax
ffff80000010b92a:	8a 84 46 39 00 00 04 	mov    al,BYTE PTR [rsi+rax*2+0x4000039]
ffff80000010b931:	08 10                	or     BYTE PTR [rax],dl
	...
ffff80000010b93f:	00 02                	add    BYTE PTR [rdx],al
ffff80000010b941:	04 08                	add    al,0x8
ffff80000010b943:	08 10                	or     BYTE PTR [rax],dl
ffff80000010b945:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b947:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b949:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b94b:	08 08                	or     BYTE PTR [rax],cl
ffff80000010b94d:	04 02                	add    al,0x2
ffff80000010b94f:	00 80 40 20 20 10    	add    BYTE PTR [rax+0x10202040],al
ffff80000010b955:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b957:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b959:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b95b:	20 20                	and    BYTE PTR [rax],ah
ffff80000010b95d:	40 80 00 00          	rex add BYTE PTR [rax],0x0
ffff80000010b961:	00 00                	add    BYTE PTR [rax],al
ffff80000010b963:	00 00                	add    BYTE PTR [rax],al
ffff80000010b965:	10 92 54 38 54 92    	adc    BYTE PTR [rdx-0x6dabc7ac],dl
ffff80000010b96b:	10 00                	adc    BYTE PTR [rax],al
	...
ffff80000010b975:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b977:	10 fe                	adc    dh,bh
ffff80000010b979:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010b97b:	10 00                	adc    BYTE PTR [rax],al
	...
ffff80000010b989:	00 00                	add    BYTE PTR [rax],al
ffff80000010b98b:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010b98d:	08 08                	or     BYTE PTR [rax],cl
ffff80000010b98f:	10 00                	adc    BYTE PTR [rax],al
ffff80000010b991:	00 00                	add    BYTE PTR [rax],al
ffff80000010b993:	00 00                	add    BYTE PTR [rax],al
ffff80000010b995:	00 00                	add    BYTE PTR [rax],al
ffff80000010b997:	00 fe                	add    dh,bh
	...
ffff80000010b9a9:	00 00                	add    BYTE PTR [rax],al
ffff80000010b9ab:	00 18                	add    BYTE PTR [rax],bl
ffff80000010b9ad:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010b9af:	00 02                	add    BYTE PTR [rdx],al
ffff80000010b9b1:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
ffff80000010b9b4:	08 08                	or     BYTE PTR [rax],cl
ffff80000010b9b6:	08 10                	or     BYTE PTR [rax],dl
ffff80000010b9b8:	10 20                	adc    BYTE PTR [rax],ah
ffff80000010b9ba:	20 40 40             	and    BYTE PTR [rax+0x40],al
ffff80000010b9bd:	40 80 80 00 18 24 24 	rex add BYTE PTR [rax+0x24241800],0x42
ffff80000010b9c4:	42 
ffff80000010b9c5:	42                   	rex.X
ffff80000010b9c6:	42                   	rex.X
ffff80000010b9c7:	42                   	rex.X
ffff80000010b9c8:	42                   	rex.X
ffff80000010b9c9:	42                   	rex.X
ffff80000010b9ca:	42 24 24             	rex.X and al,0x24
ffff80000010b9cd:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010b9cf:	00 00                	add    BYTE PTR [rax],al
ffff80000010b9d1:	08 18                	or     BYTE PTR [rax],bl
ffff80000010b9d3:	28 08                	sub    BYTE PTR [rax],cl
ffff80000010b9d5:	08 08                	or     BYTE PTR [rax],cl
ffff80000010b9d7:	08 08                	or     BYTE PTR [rax],cl
ffff80000010b9d9:	08 08                	or     BYTE PTR [rax],cl
ffff80000010b9db:	08 08                	or     BYTE PTR [rax],cl
ffff80000010b9dd:	3e 00 00             	add    BYTE PTR ds:[rax],al
ffff80000010b9e0:	00 18                	add    BYTE PTR [rax],bl
ffff80000010b9e2:	24 42                	and    al,0x42
ffff80000010b9e4:	42 02 04 08          	add    al,BYTE PTR [rax+r9*1]
ffff80000010b9e8:	10 20                	adc    BYTE PTR [rax],ah
ffff80000010b9ea:	20 40 40             	and    BYTE PTR [rax+0x40],al
ffff80000010b9ed:	7e 00                	jle    ffff80000010b9ef <font_ascii+0x232f>
ffff80000010b9ef:	00 00                	add    BYTE PTR [rax],al
ffff80000010b9f1:	18 24 42             	sbb    BYTE PTR [rdx+rax*2],ah
ffff80000010b9f4:	02 02                	add    al,BYTE PTR [rdx]
ffff80000010b9f6:	04 18                	add    al,0x18
ffff80000010b9f8:	04 02                	add    al,0x2
ffff80000010b9fa:	02 42 24             	add    al,BYTE PTR [rdx+0x24]
ffff80000010b9fd:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010b9ff:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba01:	0c 0c                	or     al,0xc
ffff80000010ba03:	0c 14                	or     al,0x14
ffff80000010ba05:	14 14                	adc    al,0x14
ffff80000010ba07:	24 24                	and    al,0x24
ffff80000010ba09:	44 7e 04             	rex.R jle ffff80000010ba10 <font_ascii+0x2350>
ffff80000010ba0c:	04 1e                	add    al,0x1e
ffff80000010ba0e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba10:	00 7c 40 40          	add    BYTE PTR [rax+rax*2+0x40],bh
ffff80000010ba14:	40 58                	rex pop rax
ffff80000010ba16:	64 02 02             	add    al,BYTE PTR fs:[rdx]
ffff80000010ba19:	02 02                	add    al,BYTE PTR [rdx]
ffff80000010ba1b:	42 24 18             	rex.X and al,0x18
ffff80000010ba1e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba20:	00 18                	add    BYTE PTR [rax],bl
ffff80000010ba22:	24 42                	and    al,0x42
ffff80000010ba24:	40 58                	rex pop rax
ffff80000010ba26:	64 42                	fs rex.X
ffff80000010ba28:	42                   	rex.X
ffff80000010ba29:	42                   	rex.X
ffff80000010ba2a:	42                   	rex.X
ffff80000010ba2b:	42 24 18             	rex.X and al,0x18
ffff80000010ba2e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba30:	00 7e 42             	add    BYTE PTR [rsi+0x42],bh
ffff80000010ba33:	42 04 04             	rex.X add al,0x4
ffff80000010ba36:	08 08                	or     BYTE PTR [rax],cl
ffff80000010ba38:	08 10                	or     BYTE PTR [rax],dl
ffff80000010ba3a:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010ba3c:	10 38                	adc    BYTE PTR [rax],bh
ffff80000010ba3e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba40:	00 18                	add    BYTE PTR [rax],bl
ffff80000010ba42:	24 42                	and    al,0x42
ffff80000010ba44:	42                   	rex.X
ffff80000010ba45:	42 24 18             	rex.X and al,0x18
ffff80000010ba48:	24 42                	and    al,0x42
ffff80000010ba4a:	42                   	rex.X
ffff80000010ba4b:	42 24 18             	rex.X and al,0x18
ffff80000010ba4e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba50:	00 18                	add    BYTE PTR [rax],bl
ffff80000010ba52:	24 42                	and    al,0x42
ffff80000010ba54:	42                   	rex.X
ffff80000010ba55:	42                   	rex.X
ffff80000010ba56:	42                   	rex.X
ffff80000010ba57:	42                   	rex.X
ffff80000010ba58:	26 1a 02             	sbb    al,BYTE PTR es:[rdx]
ffff80000010ba5b:	42 24 18             	rex.X and al,0x18
ffff80000010ba5e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba60:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba62:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba64:	00 18                	add    BYTE PTR [rax],bl
ffff80000010ba66:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010ba68:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba6a:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba6c:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010ba6e:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba70:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba72:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba74:	00 18                	add    BYTE PTR [rax],bl
ffff80000010ba76:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010ba78:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba7a:	00 18                	add    BYTE PTR [rax],bl
ffff80000010ba7c:	18 08                	sbb    BYTE PTR [rax],cl
ffff80000010ba7e:	08 10                	or     BYTE PTR [rax],dl
ffff80000010ba80:	00 02                	add    BYTE PTR [rdx],al
ffff80000010ba82:	04 08                	add    al,0x8
ffff80000010ba84:	10 20                	adc    BYTE PTR [rax],ah
ffff80000010ba86:	40 80 80 40 20 10 08 	rex add BYTE PTR [rax+0x8102040],0x4
ffff80000010ba8d:	04 
ffff80000010ba8e:	02 00                	add    al,BYTE PTR [rax]
ffff80000010ba90:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba92:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba94:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba96:	fe 00                	inc    BYTE PTR [rax]
ffff80000010ba98:	00 fe                	add    dh,bh
ffff80000010ba9a:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba9c:	00 00                	add    BYTE PTR [rax],al
ffff80000010ba9e:	00 00                	add    BYTE PTR [rax],al
ffff80000010baa0:	00 80 40 20 10 08    	add    BYTE PTR [rax+0x8102040],al
ffff80000010baa6:	04 02                	add    al,0x2
ffff80000010baa8:	02 04 08             	add    al,BYTE PTR [rax+rcx*1]
ffff80000010baab:	10 20                	adc    BYTE PTR [rax],ah
ffff80000010baad:	40 80 00 00          	rex add BYTE PTR [rax],0x0
ffff80000010bab1:	38 44 82 82          	cmp    BYTE PTR [rdx+rax*4-0x7e],al
ffff80000010bab5:	82                   	(bad)  
ffff80000010bab6:	04 08                	add    al,0x8
ffff80000010bab8:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010baba:	00 00                	add    BYTE PTR [rax],al
ffff80000010babc:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010babe:	00 00                	add    BYTE PTR [rax],al
ffff80000010bac0:	00 38                	add    BYTE PTR [rax],bh
ffff80000010bac2:	44 82                	rex.R (bad) 
ffff80000010bac4:	9a                   	(bad)  
ffff80000010bac5:	aa                   	stos   BYTE PTR es:[rdi],al
ffff80000010bac6:	aa                   	stos   BYTE PTR es:[rdi],al
ffff80000010bac7:	aa                   	stos   BYTE PTR es:[rdi],al
ffff80000010bac8:	aa                   	stos   BYTE PTR es:[rdi],al
ffff80000010bac9:	aa                   	stos   BYTE PTR es:[rdi],al
ffff80000010baca:	9c                   	pushf  
ffff80000010bacb:	80 46 38 00          	add    BYTE PTR [rsi+0x38],0x0
ffff80000010bacf:	00 00                	add    BYTE PTR [rax],al
ffff80000010bad1:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010bad3:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010bad5:	24 24                	and    al,0x24
ffff80000010bad7:	24 24                	and    al,0x24
ffff80000010bad9:	7e 42                	jle    ffff80000010bb1d <font_ascii+0x245d>
ffff80000010badb:	42                   	rex.X
ffff80000010badc:	42 e7 00             	rex.X out 0x0,eax
ffff80000010badf:	00 00                	add    BYTE PTR [rax],al
ffff80000010bae1:	f0 48                	lock rex.W
ffff80000010bae3:	44                   	rex.R
ffff80000010bae4:	44                   	rex.R
ffff80000010bae5:	44                   	rex.R
ffff80000010bae6:	48 78 44             	rex.W js ffff80000010bb2d <font_ascii+0x246d>
ffff80000010bae9:	42                   	rex.X
ffff80000010baea:	42                   	rex.X
ffff80000010baeb:	42                   	rex.X
ffff80000010baec:	44 f8                	rex.R clc 
ffff80000010baee:	00 00                	add    BYTE PTR [rax],al
ffff80000010baf0:	00 3a                	add    BYTE PTR [rdx],bh
ffff80000010baf2:	46                   	rex.RX
ffff80000010baf3:	42 82                	rex.X (bad) 
ffff80000010baf5:	80 80 80 80 80 82 42 	add    BYTE PTR [rax-0x7d7f7f80],0x42
ffff80000010bafc:	44 38 00             	cmp    BYTE PTR [rax],r8b
ffff80000010baff:	00 00                	add    BYTE PTR [rax],al
ffff80000010bb01:	f8                   	clc    
ffff80000010bb02:	44                   	rex.R
ffff80000010bb03:	44                   	rex.R
ffff80000010bb04:	42                   	rex.X
ffff80000010bb05:	42                   	rex.X
ffff80000010bb06:	42                   	rex.X
ffff80000010bb07:	42                   	rex.X
ffff80000010bb08:	42                   	rex.X
ffff80000010bb09:	42                   	rex.X
ffff80000010bb0a:	42                   	rex.X
ffff80000010bb0b:	44                   	rex.R
ffff80000010bb0c:	44 f8                	rex.R clc 
ffff80000010bb0e:	00 00                	add    BYTE PTR [rax],al
ffff80000010bb10:	00 fe                	add    dh,bh
ffff80000010bb12:	42                   	rex.X
ffff80000010bb13:	42                   	rex.X
ffff80000010bb14:	40                   	rex
ffff80000010bb15:	40                   	rex
ffff80000010bb16:	44 7c 44             	rex.R jl ffff80000010bb5d <font_ascii+0x249d>
ffff80000010bb19:	40                   	rex
ffff80000010bb1a:	40                   	rex
ffff80000010bb1b:	42                   	rex.X
ffff80000010bb1c:	42 fe 00             	rex.X inc BYTE PTR [rax]
ffff80000010bb1f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bb21:	fe 42 42             	inc    BYTE PTR [rdx+0x42]
ffff80000010bb24:	40                   	rex
ffff80000010bb25:	40                   	rex
ffff80000010bb26:	44 7c 44             	rex.R jl ffff80000010bb6d <font_ascii+0x24ad>
ffff80000010bb29:	44                   	rex.R
ffff80000010bb2a:	40                   	rex
ffff80000010bb2b:	40                   	rex
ffff80000010bb2c:	40                   	rex
ffff80000010bb2d:	f0 00 00             	lock add BYTE PTR [rax],al
ffff80000010bb30:	00 3a                	add    BYTE PTR [rdx],bh
ffff80000010bb32:	46                   	rex.RX
ffff80000010bb33:	42 82                	rex.X (bad) 
ffff80000010bb35:	80 80 9e 82 82 82 42 	add    BYTE PTR [rax-0x7d7d7d62],0x42
ffff80000010bb3c:	46 38 00             	rex.RX cmp BYTE PTR [rax],r8b
ffff80000010bb3f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bb41:	e7 42                	out    0x42,eax
ffff80000010bb43:	42                   	rex.X
ffff80000010bb44:	42                   	rex.X
ffff80000010bb45:	42                   	rex.X
ffff80000010bb46:	42 7e 42             	rex.X jle ffff80000010bb8b <font_ascii+0x24cb>
ffff80000010bb49:	42                   	rex.X
ffff80000010bb4a:	42                   	rex.X
ffff80000010bb4b:	42                   	rex.X
ffff80000010bb4c:	42 e7 00             	rex.X out 0x0,eax
ffff80000010bb4f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bb51:	7c 10                	jl     ffff80000010bb63 <font_ascii+0x24a3>
ffff80000010bb53:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bb55:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bb57:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bb59:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bb5b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bb5d:	7c 00                	jl     ffff80000010bb5f <font_ascii+0x249f>
ffff80000010bb5f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bb61:	1f                   	(bad)  
ffff80000010bb62:	04 04                	add    al,0x4
ffff80000010bb64:	04 04                	add    al,0x4
ffff80000010bb66:	04 04                	add    al,0x4
ffff80000010bb68:	04 04                	add    al,0x4
ffff80000010bb6a:	04 04                	add    al,0x4
ffff80000010bb6c:	84 48 30             	test   BYTE PTR [rax+0x30],cl
ffff80000010bb6f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bb71:	e7 42                	out    0x42,eax
ffff80000010bb73:	44                   	rex.R
ffff80000010bb74:	48 50                	rex.W push rax
ffff80000010bb76:	50                   	push   rax
ffff80000010bb77:	60                   	(bad)  
ffff80000010bb78:	50                   	push   rax
ffff80000010bb79:	50                   	push   rax
ffff80000010bb7a:	48                   	rex.W
ffff80000010bb7b:	44                   	rex.R
ffff80000010bb7c:	42 e7 00             	rex.X out 0x0,eax
ffff80000010bb7f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bb81:	f0 40                	lock rex
ffff80000010bb83:	40                   	rex
ffff80000010bb84:	40                   	rex
ffff80000010bb85:	40                   	rex
ffff80000010bb86:	40                   	rex
ffff80000010bb87:	40                   	rex
ffff80000010bb88:	40                   	rex
ffff80000010bb89:	40                   	rex
ffff80000010bb8a:	40                   	rex
ffff80000010bb8b:	42                   	rex.X
ffff80000010bb8c:	42 fe 00             	rex.X inc BYTE PTR [rax]
ffff80000010bb8f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bb91:	c3                   	ret    
ffff80000010bb92:	42                   	rex.X
ffff80000010bb93:	66 66 66 5a          	data16 data16 pop dx
ffff80000010bb97:	5a                   	pop    rdx
ffff80000010bb98:	5a                   	pop    rdx
ffff80000010bb99:	42                   	rex.X
ffff80000010bb9a:	42                   	rex.X
ffff80000010bb9b:	42                   	rex.X
ffff80000010bb9c:	42 e7 00             	rex.X out 0x0,eax
ffff80000010bb9f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bba1:	c7 42 62 62 52 52 52 	mov    DWORD PTR [rdx+0x62],0x52525262
ffff80000010bba8:	4a                   	rex.WX
ffff80000010bba9:	4a                   	rex.WX
ffff80000010bbaa:	4a                   	rex.WX
ffff80000010bbab:	46                   	rex.RX
ffff80000010bbac:	46 e2 00             	rex.RX loop ffff80000010bbaf <font_ascii+0x24ef>
ffff80000010bbaf:	00 00                	add    BYTE PTR [rax],al
ffff80000010bbb1:	38 44 82 82          	cmp    BYTE PTR [rdx+rax*4-0x7e],al
ffff80000010bbb5:	82                   	(bad)  
ffff80000010bbb6:	82                   	(bad)  
ffff80000010bbb7:	82                   	(bad)  
ffff80000010bbb8:	82                   	(bad)  
ffff80000010bbb9:	82                   	(bad)  
ffff80000010bbba:	82                   	(bad)  
ffff80000010bbbb:	82                   	(bad)  
ffff80000010bbbc:	44 38 00             	cmp    BYTE PTR [rax],r8b
ffff80000010bbbf:	00 00                	add    BYTE PTR [rax],al
ffff80000010bbc1:	f8                   	clc    
ffff80000010bbc2:	44                   	rex.R
ffff80000010bbc3:	42                   	rex.X
ffff80000010bbc4:	42                   	rex.X
ffff80000010bbc5:	42                   	rex.X
ffff80000010bbc6:	44 78 40             	rex.R js ffff80000010bc09 <font_ascii+0x2549>
ffff80000010bbc9:	40                   	rex
ffff80000010bbca:	40                   	rex
ffff80000010bbcb:	40                   	rex
ffff80000010bbcc:	40                   	rex
ffff80000010bbcd:	f0 00 00             	lock add BYTE PTR [rax],al
ffff80000010bbd0:	00 38                	add    BYTE PTR [rax],bh
ffff80000010bbd2:	44 82                	rex.R (bad) 
ffff80000010bbd4:	82                   	(bad)  
ffff80000010bbd5:	82                   	(bad)  
ffff80000010bbd6:	82                   	(bad)  
ffff80000010bbd7:	82                   	(bad)  
ffff80000010bbd8:	82                   	(bad)  
ffff80000010bbd9:	82                   	(bad)  
ffff80000010bbda:	92                   	xchg   edx,eax
ffff80000010bbdb:	8a 44 3a 00          	mov    al,BYTE PTR [rdx+rdi*1+0x0]
ffff80000010bbdf:	00 00                	add    BYTE PTR [rax],al
ffff80000010bbe1:	fc                   	cld    
ffff80000010bbe2:	42                   	rex.X
ffff80000010bbe3:	42                   	rex.X
ffff80000010bbe4:	42                   	rex.X
ffff80000010bbe5:	42 7c 44             	rex.X jl ffff80000010bc2c <font_ascii+0x256c>
ffff80000010bbe8:	42                   	rex.X
ffff80000010bbe9:	42                   	rex.X
ffff80000010bbea:	42                   	rex.X
ffff80000010bbeb:	42                   	rex.X
ffff80000010bbec:	42 e7 00             	rex.X out 0x0,eax
ffff80000010bbef:	00 00                	add    BYTE PTR [rax],al
ffff80000010bbf1:	3a 46 82             	cmp    al,BYTE PTR [rsi-0x7e]
ffff80000010bbf4:	82                   	(bad)  
ffff80000010bbf5:	80 40 38 04          	add    BYTE PTR [rax+0x38],0x4
ffff80000010bbf9:	02 82 82 c4 b8 00    	add    al,BYTE PTR [rdx+0xb8c482]
ffff80000010bbff:	00 00                	add    BYTE PTR [rax],al
ffff80000010bc01:	fe                   	(bad)  
ffff80000010bc02:	92                   	xchg   edx,eax
ffff80000010bc03:	92                   	xchg   edx,eax
ffff80000010bc04:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bc06:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bc08:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bc0a:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bc0c:	10 7c 00 00          	adc    BYTE PTR [rax+rax*1+0x0],bh
ffff80000010bc10:	00 e7                	add    bh,ah
ffff80000010bc12:	42                   	rex.X
ffff80000010bc13:	42                   	rex.X
ffff80000010bc14:	42                   	rex.X
ffff80000010bc15:	42                   	rex.X
ffff80000010bc16:	42                   	rex.X
ffff80000010bc17:	42                   	rex.X
ffff80000010bc18:	42                   	rex.X
ffff80000010bc19:	42                   	rex.X
ffff80000010bc1a:	42                   	rex.X
ffff80000010bc1b:	42 24 3c             	rex.X and al,0x3c
ffff80000010bc1e:	00 00                	add    BYTE PTR [rax],al
ffff80000010bc20:	00 e7                	add    bh,ah
ffff80000010bc22:	42                   	rex.X
ffff80000010bc23:	42                   	rex.X
ffff80000010bc24:	42                   	rex.X
ffff80000010bc25:	42 24 24             	rex.X and al,0x24
ffff80000010bc28:	24 24                	and    al,0x24
ffff80000010bc2a:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010bc2c:	18 18                	sbb    BYTE PTR [rax],bl
ffff80000010bc2e:	00 00                	add    BYTE PTR [rax],al
ffff80000010bc30:	00 e7                	add    bh,ah
ffff80000010bc32:	42                   	rex.X
ffff80000010bc33:	42                   	rex.X
ffff80000010bc34:	42 5a                	rex.X pop rdx
ffff80000010bc36:	5a                   	pop    rdx
ffff80000010bc37:	5a                   	pop    rdx
ffff80000010bc38:	5a                   	pop    rdx
ffff80000010bc39:	24 24                	and    al,0x24
ffff80000010bc3b:	24 24                	and    al,0x24
ffff80000010bc3d:	24 00                	and    al,0x0
ffff80000010bc3f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bc41:	e7 42                	out    0x42,eax
ffff80000010bc43:	42 24 24             	rex.X and al,0x24
ffff80000010bc46:	24 18                	and    al,0x18
ffff80000010bc48:	24 24                	and    al,0x24
ffff80000010bc4a:	24 42                	and    al,0x42
ffff80000010bc4c:	42 e7 00             	rex.X out 0x0,eax
ffff80000010bc4f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bc51:	ee                   	out    dx,al
ffff80000010bc52:	44                   	rex.R
ffff80000010bc53:	44                   	rex.R
ffff80000010bc54:	44 28 28             	sub    BYTE PTR [rax],r13b
ffff80000010bc57:	28 10                	sub    BYTE PTR [rax],dl
ffff80000010bc59:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bc5b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bc5d:	7c 00                	jl     ffff80000010bc5f <font_ascii+0x259f>
ffff80000010bc5f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bc61:	fe 84 84 08 08 10 10 	inc    BYTE PTR [rsp+rax*4+0x10100808]
ffff80000010bc68:	20 20                	and    BYTE PTR [rax],ah
ffff80000010bc6a:	40                   	rex
ffff80000010bc6b:	42 82                	rex.X (bad) 
ffff80000010bc6d:	fe 00                	inc    BYTE PTR [rax]
ffff80000010bc6f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bc71:	3e 20 20             	and    BYTE PTR ds:[rax],ah
ffff80000010bc74:	20 20                	and    BYTE PTR [rax],ah
ffff80000010bc76:	20 20                	and    BYTE PTR [rax],ah
ffff80000010bc78:	20 20                	and    BYTE PTR [rax],ah
ffff80000010bc7a:	20 20                	and    BYTE PTR [rax],ah
ffff80000010bc7c:	20 20                	and    BYTE PTR [rax],ah
ffff80000010bc7e:	3e 00 80 80 40 40 20 	add    BYTE PTR ds:[rax+0x20404080],al
ffff80000010bc85:	20 20                	and    BYTE PTR [rax],ah
ffff80000010bc87:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bc89:	08 08                	or     BYTE PTR [rax],cl
ffff80000010bc8b:	04 04                	add    al,0x4
ffff80000010bc8d:	04 02                	add    al,0x2
ffff80000010bc8f:	02 00                	add    al,BYTE PTR [rax]
ffff80000010bc91:	7c 04                	jl     ffff80000010bc97 <font_ascii+0x25d7>
ffff80000010bc93:	04 04                	add    al,0x4
ffff80000010bc95:	04 04                	add    al,0x4
ffff80000010bc97:	04 04                	add    al,0x4
ffff80000010bc99:	04 04                	add    al,0x4
ffff80000010bc9b:	04 04                	add    al,0x4
ffff80000010bc9d:	04 7c                	add    al,0x7c
ffff80000010bc9f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bca1:	10 28                	adc    BYTE PTR [rax],ch
ffff80000010bca3:	44 82                	rex.R (bad) 
	...
ffff80000010bcbd:	00 fe                	add    dh,bh
ffff80000010bcbf:	00 10                	add    BYTE PTR [rax],dl
ffff80000010bcc1:	08 04 00             	or     BYTE PTR [rax+rax*1],al
	...
ffff80000010bcd4:	00 70 08             	add    BYTE PTR [rax+0x8],dh
ffff80000010bcd7:	04 3c                	add    al,0x3c
ffff80000010bcd9:	44 84 84 8c 76 00 00 	test   BYTE PTR [rsp+rcx*4-0x3fffff8a],r8b
ffff80000010bce0:	c0 
ffff80000010bce1:	40                   	rex
ffff80000010bce2:	40                   	rex
ffff80000010bce3:	40                   	rex
ffff80000010bce4:	40 58                	rex pop rax
ffff80000010bce6:	64 42                	fs rex.X
ffff80000010bce8:	42                   	rex.X
ffff80000010bce9:	42                   	rex.X
ffff80000010bcea:	42                   	rex.X
ffff80000010bceb:	42                   	rex.X
ffff80000010bcec:	64 58                	fs pop rax
ffff80000010bcee:	00 00                	add    BYTE PTR [rax],al
ffff80000010bcf0:	00 00                	add    BYTE PTR [rax],al
ffff80000010bcf2:	00 00                	add    BYTE PTR [rax],al
ffff80000010bcf4:	00 30                	add    BYTE PTR [rax],dh
ffff80000010bcf6:	4c 84 84 80 80 82 44 	rex.WR test BYTE PTR [rax+rax*4+0x38448280],r8b
ffff80000010bcfd:	38 
ffff80000010bcfe:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd00:	0c 04                	or     al,0x4
ffff80000010bd02:	04 04                	add    al,0x4
ffff80000010bd04:	04 34                	add    al,0x34
ffff80000010bd06:	4c 84 84 84 84 84 4c 	rex.WR test BYTE PTR [rsp+rax*4+0x364c8484],r8b
ffff80000010bd0d:	36 
ffff80000010bd0e:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd10:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd12:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd14:	00 38                	add    BYTE PTR [rax],bh
ffff80000010bd16:	44 82                	rex.R (bad) 
ffff80000010bd18:	82                   	(bad)  
ffff80000010bd19:	fc                   	cld    
ffff80000010bd1a:	80 82 42 3c 00 00 0e 	add    BYTE PTR [rdx+0x3c42],0xe
ffff80000010bd21:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd23:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd25:	7c 10                	jl     ffff80000010bd37 <font_ascii+0x2677>
ffff80000010bd27:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd29:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd2b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd2d:	7c 00                	jl     ffff80000010bd2f <font_ascii+0x266f>
ffff80000010bd2f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd31:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd33:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd35:	36 4c 84 84 84 84 4c 	rex.WR test BYTE PTR ss:[rsp+rax*4+0x4344c84],r8b
ffff80000010bd3c:	34 04 
ffff80000010bd3e:	04 38                	add    al,0x38
ffff80000010bd40:	c0 40 40 40          	rol    BYTE PTR [rax+0x40],0x40
ffff80000010bd44:	40 58                	rex pop rax
ffff80000010bd46:	64 42                	fs rex.X
ffff80000010bd48:	42                   	rex.X
ffff80000010bd49:	42                   	rex.X
ffff80000010bd4a:	42                   	rex.X
ffff80000010bd4b:	42                   	rex.X
ffff80000010bd4c:	42 e3 00             	rex.X jrcxz ffff80000010bd4f <font_ascii+0x268f>
ffff80000010bd4f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd51:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd53:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd55:	30 10                	xor    BYTE PTR [rax],dl
ffff80000010bd57:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd59:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd5b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd5d:	38 00                	cmp    BYTE PTR [rax],al
ffff80000010bd5f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd61:	04 04                	add    al,0x4
ffff80000010bd63:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd65:	0c 04                	or     al,0x4
ffff80000010bd67:	04 04                	add    al,0x4
ffff80000010bd69:	04 04                	add    al,0x4
ffff80000010bd6b:	04 04                	add    al,0x4
ffff80000010bd6d:	08 08                	or     BYTE PTR [rax],cl
ffff80000010bd6f:	30 c0                	xor    al,al
ffff80000010bd71:	40                   	rex
ffff80000010bd72:	40                   	rex
ffff80000010bd73:	40                   	rex
ffff80000010bd74:	40                   	rex
ffff80000010bd75:	4e                   	rex.WRX
ffff80000010bd76:	44                   	rex.R
ffff80000010bd77:	48 50                	rex.W push rax
ffff80000010bd79:	60                   	(bad)  
ffff80000010bd7a:	50                   	push   rax
ffff80000010bd7b:	48                   	rex.W
ffff80000010bd7c:	44 e6 00             	rex.R out 0x0,al
ffff80000010bd7f:	00 30                	add    BYTE PTR [rax],dh
ffff80000010bd81:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd83:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd85:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd87:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd89:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd8b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010bd8d:	38 00                	cmp    BYTE PTR [rax],al
ffff80000010bd8f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd91:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd93:	00 00                	add    BYTE PTR [rax],al
ffff80000010bd95:	f6 49 49 49          	test   BYTE PTR [rcx+0x49],0x49
ffff80000010bd99:	49                   	rex.WB
ffff80000010bd9a:	49                   	rex.WB
ffff80000010bd9b:	49                   	rex.WB
ffff80000010bd9c:	49 db 00             	rex.WB fild DWORD PTR [r8]
ffff80000010bd9f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bda1:	00 00                	add    BYTE PTR [rax],al
ffff80000010bda3:	00 00                	add    BYTE PTR [rax],al
ffff80000010bda5:	d8 64 42 42          	fsub   DWORD PTR [rdx+rax*2+0x42]
ffff80000010bda9:	42                   	rex.X
ffff80000010bdaa:	42                   	rex.X
ffff80000010bdab:	42                   	rex.X
ffff80000010bdac:	42 e3 00             	rex.X jrcxz ffff80000010bdaf <font_ascii+0x26ef>
ffff80000010bdaf:	00 00                	add    BYTE PTR [rax],al
ffff80000010bdb1:	00 00                	add    BYTE PTR [rax],al
ffff80000010bdb3:	00 00                	add    BYTE PTR [rax],al
ffff80000010bdb5:	38 44 82 82          	cmp    BYTE PTR [rdx+rax*4-0x7e],al
ffff80000010bdb9:	82                   	(bad)  
ffff80000010bdba:	82                   	(bad)  
ffff80000010bdbb:	82                   	(bad)  
ffff80000010bdbc:	44 38 00             	cmp    BYTE PTR [rax],r8b
ffff80000010bdbf:	00 00                	add    BYTE PTR [rax],al
ffff80000010bdc1:	00 00                	add    BYTE PTR [rax],al
ffff80000010bdc3:	00 d8                	add    al,bl
ffff80000010bdc5:	64 42                	fs rex.X
ffff80000010bdc7:	42                   	rex.X
ffff80000010bdc8:	42                   	rex.X
ffff80000010bdc9:	42                   	rex.X
ffff80000010bdca:	42                   	rex.X
ffff80000010bdcb:	64 58                	fs pop rax
ffff80000010bdcd:	40                   	rex
ffff80000010bdce:	40 e0 00             	rex loopne ffff80000010bdd1 <font_ascii+0x2711>
ffff80000010bdd1:	00 00                	add    BYTE PTR [rax],al
ffff80000010bdd3:	00 34 4c             	add    BYTE PTR [rsp+rcx*2],dh
ffff80000010bdd6:	84 84 84 84 84 4c 34 	test   BYTE PTR [rsp+rax*4+0x344c8484],al
ffff80000010bddd:	04 04                	add    al,0x4
ffff80000010bddf:	0e                   	(bad)  
ffff80000010bde0:	00 00                	add    BYTE PTR [rax],al
ffff80000010bde2:	00 00                	add    BYTE PTR [rax],al
ffff80000010bde4:	00 dc                	add    ah,bl
ffff80000010bde6:	62 42                	(bad)  
ffff80000010bde8:	40                   	rex
ffff80000010bde9:	40                   	rex
ffff80000010bdea:	40                   	rex
ffff80000010bdeb:	40                   	rex
ffff80000010bdec:	40 e0 00             	rex loopne ffff80000010bdef <font_ascii+0x272f>
ffff80000010bdef:	00 00                	add    BYTE PTR [rax],al
ffff80000010bdf1:	00 00                	add    BYTE PTR [rax],al
ffff80000010bdf3:	00 00                	add    BYTE PTR [rax],al
ffff80000010bdf5:	7a 86                	jp     ffff80000010bd7d <font_ascii+0x26bd>
ffff80000010bdf7:	82                   	(bad)  
ffff80000010bdf8:	c0 38 06             	sar    BYTE PTR [rax],0x6
ffff80000010bdfb:	82                   	(bad)  
ffff80000010bdfc:	c2 bc 00             	ret    0xbc
ffff80000010bdff:	00 00                	add    BYTE PTR [rax],al
ffff80000010be01:	00 10                	add    BYTE PTR [rax],dl
ffff80000010be03:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be05:	7c 10                	jl     ffff80000010be17 <font_ascii+0x2757>
ffff80000010be07:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be09:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be0b:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be0d:	0e                   	(bad)  
ffff80000010be0e:	00 00                	add    BYTE PTR [rax],al
ffff80000010be10:	00 00                	add    BYTE PTR [rax],al
ffff80000010be12:	00 00                	add    BYTE PTR [rax],al
ffff80000010be14:	00 c6                	add    dh,al
ffff80000010be16:	42                   	rex.X
ffff80000010be17:	42                   	rex.X
ffff80000010be18:	42                   	rex.X
ffff80000010be19:	42                   	rex.X
ffff80000010be1a:	42                   	rex.X
ffff80000010be1b:	42                   	rex.X
ffff80000010be1c:	46 3b 00             	rex.RX cmp r8d,DWORD PTR [rax]
ffff80000010be1f:	00 00                	add    BYTE PTR [rax],al
ffff80000010be21:	00 00                	add    BYTE PTR [rax],al
ffff80000010be23:	00 00                	add    BYTE PTR [rax],al
ffff80000010be25:	e7 42                	out    0x42,eax
ffff80000010be27:	42                   	rex.X
ffff80000010be28:	42 24 24             	rex.X and al,0x24
ffff80000010be2b:	24 18                	and    al,0x18
ffff80000010be2d:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010be2f:	00 00                	add    BYTE PTR [rax],al
ffff80000010be31:	00 00                	add    BYTE PTR [rax],al
ffff80000010be33:	00 00                	add    BYTE PTR [rax],al
ffff80000010be35:	e7 42                	out    0x42,eax
ffff80000010be37:	42 5a                	rex.X pop rdx
ffff80000010be39:	5a                   	pop    rdx
ffff80000010be3a:	5a                   	pop    rdx
ffff80000010be3b:	24 24                	and    al,0x24
ffff80000010be3d:	24 00                	and    al,0x0
ffff80000010be3f:	00 00                	add    BYTE PTR [rax],al
ffff80000010be41:	00 00                	add    BYTE PTR [rax],al
ffff80000010be43:	00 00                	add    BYTE PTR [rax],al
ffff80000010be45:	c6 44 28 28 10       	mov    BYTE PTR [rax+rbp*1+0x28],0x10
ffff80000010be4a:	28 28                	sub    BYTE PTR [rax],ch
ffff80000010be4c:	44 c6 00 00          	rex.R mov BYTE PTR [rax],0x0
ffff80000010be50:	00 00                	add    BYTE PTR [rax],al
ffff80000010be52:	00 00                	add    BYTE PTR [rax],al
ffff80000010be54:	00 e7                	add    bh,ah
ffff80000010be56:	42                   	rex.X
ffff80000010be57:	42 24 24             	rex.X and al,0x24
ffff80000010be5a:	24 18                	and    al,0x18
ffff80000010be5c:	18 10                	sbb    BYTE PTR [rax],dl
ffff80000010be5e:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
ffff80000010be61:	00 00                	add    BYTE PTR [rax],al
ffff80000010be63:	00 00                	add    BYTE PTR [rax],al
ffff80000010be65:	fe 82 84 08 10 20    	inc    BYTE PTR [rdx+0x20100884]
ffff80000010be6b:	42 82                	rex.X (bad) 
ffff80000010be6d:	fe 00                	inc    BYTE PTR [rax]
ffff80000010be6f:	00 00                	add    BYTE PTR [rax],al
ffff80000010be71:	06                   	(bad)  
ffff80000010be72:	08 10                	or     BYTE PTR [rax],dl
ffff80000010be74:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be76:	10 60 10             	adc    BYTE PTR [rax+0x10],ah
ffff80000010be79:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be7b:	10 08                	adc    BYTE PTR [rax],cl
ffff80000010be7d:	06                   	(bad)  
ffff80000010be7e:	00 00                	add    BYTE PTR [rax],al
ffff80000010be80:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be82:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be84:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be86:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be88:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be8a:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be8c:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be8e:	10 10                	adc    BYTE PTR [rax],dl
ffff80000010be90:	00 60 10             	add    BYTE PTR [rax+0x10],ah
ffff80000010be93:	08 08                	or     BYTE PTR [rax],cl
ffff80000010be95:	08 08                	or     BYTE PTR [rax],cl
ffff80000010be97:	06                   	(bad)  
ffff80000010be98:	08 08                	or     BYTE PTR [rax],cl
ffff80000010be9a:	08 08                	or     BYTE PTR [rax],cl
ffff80000010be9c:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
ffff80000010be9f:	00 00                	add    BYTE PTR [rax],al
ffff80000010bea1:	72 8c                	jb     ffff80000010be2f <font_ascii+0x276f>
	...

Disassembly of section .got:

ffff80000010c6c0 <.got>:
ffff80000010c6c0:	bf 83 10 00 00       	mov    edi,0x1083
ffff80000010c6c5:	80 ff ff             	cmp    bh,0xff
ffff80000010c6c8:	20 85 10 00 00 80    	and    BYTE PTR [rbp-0x7ffffff0],al
ffff80000010c6ce:	ff                   	(bad)  
ffff80000010c6cf:	ff                   	(bad)  
ffff80000010c6d0:	7d 84                	jge    ffff80000010c656 <font_ascii+0x2f96>
ffff80000010c6d2:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c6d4:	00 80 ff ff 14 84    	add    BYTE PTR [rax-0x7beb0001],al
ffff80000010c6da:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c6dc:	00 80 ff ff 90 84    	add    BYTE PTR [rax-0x7b6f0001],al
ffff80000010c6e2:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c6e4:	00 80 ff ff ed 84    	add    BYTE PTR [rax-0x7b120001],al
ffff80000010c6ea:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c6ec:	00 80 ff ff fe 84    	add    BYTE PTR [rax-0x7b010001],al
ffff80000010c6f2:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c6f4:	00 80 ff ff 0f 85    	add    BYTE PTR [rax-0x7af00001],al
ffff80000010c6fa:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c6fc:	00 80 ff ff 42 86    	add    BYTE PTR [rax-0x79bd0001],al
ffff80000010c702:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c704:	00 80 ff ff a3 84    	add    BYTE PTR [rax-0x7b5c0001],al
ffff80000010c70a:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c70c:	00 80 ff ff 4c 96    	add    BYTE PTR [rax-0x69b30001],al
ffff80000010c712:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c714:	00 80 ff ff 55 85    	add    BYTE PTR [rax-0x7aaa0001],al
ffff80000010c71a:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c71c:	00 80 ff ff 42 85    	add    BYTE PTR [rax-0x7abd0001],al
ffff80000010c722:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c724:	00 80 ff ff c9 84    	add    BYTE PTR [rax-0x7b360001],al
ffff80000010c72a:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c72c:	00 80 ff ff 8c 85    	add    BYTE PTR [rax-0x7a730001],al
ffff80000010c732:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c734:	00 80 ff ff da 84    	add    BYTE PTR [rax-0x7b250001],al
ffff80000010c73a:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c73c:	00 80 ff ff 31 85    	add    BYTE PTR [rax-0x7ace0001],al
ffff80000010c742:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c744:	00 80 ff ff 66 85    	add    BYTE PTR [rax-0x7a990001],al
ffff80000010c74a:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c74c:	00 80 ff ff 79 85    	add    BYTE PTR [rax-0x7a860001],al
ffff80000010c752:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c754:	00 80 ff ff 24 84    	add    BYTE PTR [rax-0x7bdb0001],al
ffff80000010c75a:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c75c:	00 80 ff ff b6 84    	add    BYTE PTR [rax-0x7b490001],al
ffff80000010c762:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c764:	00 80 ff ff 6a 84    	add    BYTE PTR [rax-0x7b950001],al
ffff80000010c76a:	10 00                	adc    BYTE PTR [rax],al
ffff80000010c76c:	00                   	.byte 0x0
ffff80000010c76d:	80 ff ff             	cmp    bh,0xff

Disassembly of section .got.plt:

ffff80000010c770 <_GLOBAL_OFFSET_TABLE_>:
	...

Disassembly of section .rodata:

ffff80000010c788 <_rodata>:
ffff80000010c788:	66 64 67 6b 68 64 6b 	imul   bp,WORD PTR fs:[eax+0x64],0x6b
ffff80000010c78f:	67 68 00       	addr32 push 0x6c654800

ffff80000010c792 <.LC1>:
ffff80000010c792:	48                   	rex.W
ffff80000010c793:	65 6c                	gs ins BYTE PTR es:[rdi],dx
ffff80000010c795:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010c796:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010c797:	20 57 6f             	and    BYTE PTR [rdi+0x6f],dl
ffff80000010c79a:	72 6c                	jb     ffff80000010c808 <.LC1+0x38>
ffff80000010c79c:	64 20 25 73 21 0a 00 	and    BYTE PTR fs:[rip+0xa2173],ah        # ffff8000001ae916 <_end+0x9b8ee>
ffff80000010c7a3:	00 00                	add    BYTE PTR [rax],al
ffff80000010c7a5:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010c7a8 <.LC0>:
ffff80000010c7a8:	30 31                	xor    BYTE PTR [rcx],dh
ffff80000010c7aa:	32 33                	xor    dh,BYTE PTR [rbx]
ffff80000010c7ac:	34 35                	xor    al,0x35
ffff80000010c7ae:	36 37                	ss (bad) 
ffff80000010c7b0:	38 39                	cmp    BYTE PTR [rcx],bh
ffff80000010c7b2:	41                   	rex.B
ffff80000010c7b3:	42                   	rex.X
ffff80000010c7b4:	43                   	rex.XB
ffff80000010c7b5:	44                   	rex.R
ffff80000010c7b6:	45                   	rex.RB
ffff80000010c7b7:	46                   	rex.RX
ffff80000010c7b8:	47                   	rex.RXB
ffff80000010c7b9:	48                   	rex.W
ffff80000010c7ba:	49                   	rex.WB
ffff80000010c7bb:	4a                   	rex.WX
ffff80000010c7bc:	4b                   	rex.WXB
ffff80000010c7bd:	4c                   	rex.WR
ffff80000010c7be:	4d                   	rex.WRB
ffff80000010c7bf:	4e                   	rex.WRX
ffff80000010c7c0:	4f 50                	rex.WRXB push r8
ffff80000010c7c2:	51                   	push   rcx
ffff80000010c7c3:	52                   	push   rdx
ffff80000010c7c4:	53                   	push   rbx
ffff80000010c7c5:	54                   	push   rsp
ffff80000010c7c6:	55                   	push   rbp
ffff80000010c7c7:	56                   	push   rsi
ffff80000010c7c8:	57                   	push   rdi
ffff80000010c7c9:	58                   	pop    rax
ffff80000010c7ca:	59                   	pop    rcx
ffff80000010c7cb:	5a                   	pop    rdx
ffff80000010c7cc:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010c7d0 <.LC1>:
ffff80000010c7d0:	30 31                	xor    BYTE PTR [rcx],dh
ffff80000010c7d2:	32 33                	xor    dh,BYTE PTR [rbx]
ffff80000010c7d4:	34 35                	xor    al,0x35
ffff80000010c7d6:	36 37                	ss (bad) 
ffff80000010c7d8:	38 39                	cmp    BYTE PTR [rcx],bh
ffff80000010c7da:	61                   	(bad)  
ffff80000010c7db:	62 63 64 65 66       	(bad)
ffff80000010c7e0:	67 68 69 6a 6b 6c    	addr32 push 0x6c6b6a69
ffff80000010c7e6:	6d                   	ins    DWORD PTR es:[rdi],dx
ffff80000010c7e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010c7e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010c7e9:	70 71                	jo     ffff80000010c85c <.LC1+0x8c>
ffff80000010c7eb:	72 73                	jb     ffff80000010c860 <.LC1+0x90>
ffff80000010c7ed:	74 75                	je     ffff80000010c864 <.LC1+0x94>
ffff80000010c7ef:	76 77                	jbe    ffff80000010c868 <.LC1+0x98>
ffff80000010c7f1:	78 79                	js     ffff80000010c86c <.LC1+0x9c>
ffff80000010c7f3:	7a 00                	jp     ffff80000010c7f5 <.LC1+0x25>
ffff80000010c7f5:	00 00                	add    BYTE PTR [rax],al
ffff80000010c7f7:	00 94 8b ff ff ff ff 	add    BYTE PTR [rbx+rcx*4-0x1],dl
ffff80000010c7fe:	ff                   	(bad)  
ffff80000010c7ff:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c805:	ff                   	(bad)  
ffff80000010c806:	ff                   	(bad)  
ffff80000010c807:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c80d:	ff                   	(bad)  
ffff80000010c80e:	ff                   	(bad)  
ffff80000010c80f:	ff 9a 8b ff ff ff    	call   FWORD PTR [rdx-0x75]
ffff80000010c815:	ff                   	(bad)  
ffff80000010c816:	ff                   	(bad)  
ffff80000010c817:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c81d:	ff                   	(bad)  
ffff80000010c81e:	ff                   	(bad)  
ffff80000010c81f:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c825:	ff                   	(bad)  
ffff80000010c826:	ff                   	(bad)  
ffff80000010c827:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c82d:	ff                   	(bad)  
ffff80000010c82e:	ff                   	(bad)  
ffff80000010c82f:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c835:	ff                   	(bad)  
ffff80000010c836:	ff                   	(bad)  
ffff80000010c837:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c83d:	ff                   	(bad)  
ffff80000010c83e:	ff                   	(bad)  
ffff80000010c83f:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c845:	ff                   	(bad)  
ffff80000010c846:	ff                   	(bad)  
ffff80000010c847:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c84d:	ff                   	(bad)  
ffff80000010c84e:	ff                   	(bad)  
ffff80000010c84f:	ff 8e 8b ff ff ff    	dec    DWORD PTR [rsi-0x75]
ffff80000010c855:	ff                   	(bad)  
ffff80000010c856:	ff                   	(bad)  
ffff80000010c857:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c85d:	ff                   	(bad)  
ffff80000010c85e:	ff                   	(bad)  
ffff80000010c85f:	ff 88 8b ff ff ff    	dec    DWORD PTR [rax-0x75]
ffff80000010c865:	ff                   	(bad)  
ffff80000010c866:	ff                   	(bad)  
ffff80000010c867:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c86d:	ff                   	(bad)  
ffff80000010c86e:	ff                   	(bad)  
ffff80000010c86f:	ff a6 8b ff ff ff    	jmp    QWORD PTR [rsi-0x75]
ffff80000010c875:	ff                   	(bad)  
ffff80000010c876:	ff                   	(bad)  
ffff80000010c877:	ff a0 8b ff ff ff    	jmp    QWORD PTR [rax-0x75]
ffff80000010c87d:	ff                   	(bad)  
ffff80000010c87e:	ff                   	(bad)  
ffff80000010c87f:	ff 31                	push   QWORD PTR [rcx]
ffff80000010c881:	93                   	xchg   ebx,eax
ffff80000010c882:	ff                   	(bad)  
ffff80000010c883:	ff                   	(bad)  
ffff80000010c884:	ff                   	(bad)  
ffff80000010c885:	ff                   	(bad)  
ffff80000010c886:	ff                   	(bad)  
ffff80000010c887:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c88a:	ff                   	(bad)  
ffff80000010c88b:	ff                   	(bad)  
ffff80000010c88c:	ff                   	(bad)  
ffff80000010c88d:	ff                   	(bad)  
ffff80000010c88e:	ff                   	(bad)  
ffff80000010c88f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c892:	ff                   	(bad)  
ffff80000010c893:	ff                   	(bad)  
ffff80000010c894:	ff                   	(bad)  
ffff80000010c895:	ff                   	(bad)  
ffff80000010c896:	ff                   	(bad)  
ffff80000010c897:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c89a:	ff                   	(bad)  
ffff80000010c89b:	ff                   	(bad)  
ffff80000010c89c:	ff                   	(bad)  
ffff80000010c89d:	ff                   	(bad)  
ffff80000010c89e:	ff                   	(bad)  
ffff80000010c89f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8a2:	ff                   	(bad)  
ffff80000010c8a3:	ff                   	(bad)  
ffff80000010c8a4:	ff                   	(bad)  
ffff80000010c8a5:	ff                   	(bad)  
ffff80000010c8a6:	ff                   	(bad)  
ffff80000010c8a7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8aa:	ff                   	(bad)  
ffff80000010c8ab:	ff                   	(bad)  
ffff80000010c8ac:	ff                   	(bad)  
ffff80000010c8ad:	ff                   	(bad)  
ffff80000010c8ae:	ff                   	(bad)  
ffff80000010c8af:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8b2:	ff                   	(bad)  
ffff80000010c8b3:	ff                   	(bad)  
ffff80000010c8b4:	ff                   	(bad)  
ffff80000010c8b5:	ff                   	(bad)  
ffff80000010c8b6:	ff                   	(bad)  
ffff80000010c8b7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8ba:	ff                   	(bad)  
ffff80000010c8bb:	ff                   	(bad)  
ffff80000010c8bc:	ff                   	(bad)  
ffff80000010c8bd:	ff                   	(bad)  
ffff80000010c8be:	ff                   	(bad)  
ffff80000010c8bf:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8c2:	ff                   	(bad)  
ffff80000010c8c3:	ff                   	(bad)  
ffff80000010c8c4:	ff                   	(bad)  
ffff80000010c8c5:	ff                   	(bad)  
ffff80000010c8c6:	ff                   	(bad)  
ffff80000010c8c7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8ca:	ff                   	(bad)  
ffff80000010c8cb:	ff                   	(bad)  
ffff80000010c8cc:	ff                   	(bad)  
ffff80000010c8cd:	ff                   	(bad)  
ffff80000010c8ce:	ff                   	(bad)  
ffff80000010c8cf:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8d2:	ff                   	(bad)  
ffff80000010c8d3:	ff                   	(bad)  
ffff80000010c8d4:	ff                   	(bad)  
ffff80000010c8d5:	ff                   	(bad)  
ffff80000010c8d6:	ff                   	(bad)  
ffff80000010c8d7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8da:	ff                   	(bad)  
ffff80000010c8db:	ff                   	(bad)  
ffff80000010c8dc:	ff                   	(bad)  
ffff80000010c8dd:	ff                   	(bad)  
ffff80000010c8de:	ff                   	(bad)  
ffff80000010c8df:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8e2:	ff                   	(bad)  
ffff80000010c8e3:	ff                   	(bad)  
ffff80000010c8e4:	ff                   	(bad)  
ffff80000010c8e5:	ff                   	(bad)  
ffff80000010c8e6:	ff                   	(bad)  
ffff80000010c8e7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8ea:	ff                   	(bad)  
ffff80000010c8eb:	ff                   	(bad)  
ffff80000010c8ec:	ff                   	(bad)  
ffff80000010c8ed:	ff                   	(bad)  
ffff80000010c8ee:	ff                   	(bad)  
ffff80000010c8ef:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8f2:	ff                   	(bad)  
ffff80000010c8f3:	ff                   	(bad)  
ffff80000010c8f4:	ff                   	(bad)  
ffff80000010c8f5:	ff                   	(bad)  
ffff80000010c8f6:	ff                   	(bad)  
ffff80000010c8f7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c8fa:	ff                   	(bad)  
ffff80000010c8fb:	ff                   	(bad)  
ffff80000010c8fc:	ff                   	(bad)  
ffff80000010c8fd:	ff                   	(bad)  
ffff80000010c8fe:	ff                   	(bad)  
ffff80000010c8ff:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c902:	ff                   	(bad)  
ffff80000010c903:	ff                   	(bad)  
ffff80000010c904:	ff                   	(bad)  
ffff80000010c905:	ff                   	(bad)  
ffff80000010c906:	ff                   	(bad)  
ffff80000010c907:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c90a:	ff                   	(bad)  
ffff80000010c90b:	ff                   	(bad)  
ffff80000010c90c:	ff                   	(bad)  
ffff80000010c90d:	ff                   	(bad)  
ffff80000010c90e:	ff                   	(bad)  
ffff80000010c90f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c912:	ff                   	(bad)  
ffff80000010c913:	ff                   	(bad)  
ffff80000010c914:	ff                   	(bad)  
ffff80000010c915:	ff                   	(bad)  
ffff80000010c916:	ff                   	(bad)  
ffff80000010c917:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c91a:	ff                   	(bad)  
ffff80000010c91b:	ff                   	(bad)  
ffff80000010c91c:	ff                   	(bad)  
ffff80000010c91d:	ff                   	(bad)  
ffff80000010c91e:	ff                   	(bad)  
ffff80000010c91f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c922:	ff                   	(bad)  
ffff80000010c923:	ff                   	(bad)  
ffff80000010c924:	ff                   	(bad)  
ffff80000010c925:	ff                   	(bad)  
ffff80000010c926:	ff                   	(bad)  
ffff80000010c927:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c92a:	ff                   	(bad)  
ffff80000010c92b:	ff                   	(bad)  
ffff80000010c92c:	ff                   	(bad)  
ffff80000010c92d:	ff                   	(bad)  
ffff80000010c92e:	ff                   	(bad)  
ffff80000010c92f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c932:	ff                   	(bad)  
ffff80000010c933:	ff                   	(bad)  
ffff80000010c934:	ff                   	(bad)  
ffff80000010c935:	ff                   	(bad)  
ffff80000010c936:	ff                   	(bad)  
ffff80000010c937:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c93a:	ff                   	(bad)  
ffff80000010c93b:	ff                   	(bad)  
ffff80000010c93c:	ff                   	(bad)  
ffff80000010c93d:	ff                   	(bad)  
ffff80000010c93e:	ff                   	(bad)  
ffff80000010c93f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c942:	ff                   	(bad)  
ffff80000010c943:	ff                   	(bad)  
ffff80000010c944:	ff                   	(bad)  
ffff80000010c945:	ff                   	(bad)  
ffff80000010c946:	ff                   	(bad)  
ffff80000010c947:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c94a:	ff                   	(bad)  
ffff80000010c94b:	ff                   	(bad)  
ffff80000010c94c:	ff                   	(bad)  
ffff80000010c94d:	ff                   	(bad)  
ffff80000010c94e:	ff                   	(bad)  
ffff80000010c94f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c952:	ff                   	(bad)  
ffff80000010c953:	ff                   	(bad)  
ffff80000010c954:	ff                   	(bad)  
ffff80000010c955:	ff                   	(bad)  
ffff80000010c956:	ff                   	(bad)  
ffff80000010c957:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c95a:	ff                   	(bad)  
ffff80000010c95b:	ff                   	(bad)  
ffff80000010c95c:	ff                   	(bad)  
ffff80000010c95d:	ff                   	(bad)  
ffff80000010c95e:	ff                   	(bad)  
ffff80000010c95f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c962:	ff                   	(bad)  
ffff80000010c963:	ff                   	(bad)  
ffff80000010c964:	ff                   	(bad)  
ffff80000010c965:	ff                   	(bad)  
ffff80000010c966:	ff                   	(bad)  
ffff80000010c967:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c96a:	ff                   	(bad)  
ffff80000010c96b:	ff                   	(bad)  
ffff80000010c96c:	ff                   	(bad)  
ffff80000010c96d:	ff                   	(bad)  
ffff80000010c96e:	ff                   	(bad)  
ffff80000010c96f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c972:	ff                   	(bad)  
ffff80000010c973:	ff                   	(bad)  
ffff80000010c974:	ff                   	(bad)  
ffff80000010c975:	ff                   	(bad)  
ffff80000010c976:	ff                   	(bad)  
ffff80000010c977:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c97a:	ff                   	(bad)  
ffff80000010c97b:	ff                   	(bad)  
ffff80000010c97c:	ff                   	(bad)  
ffff80000010c97d:	ff                   	(bad)  
ffff80000010c97e:	ff                   	(bad)  
ffff80000010c97f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c982:	ff                   	(bad)  
ffff80000010c983:	ff                   	(bad)  
ffff80000010c984:	ff                   	(bad)  
ffff80000010c985:	ff                   	(bad)  
ffff80000010c986:	ff                   	(bad)  
ffff80000010c987:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c98a:	ff                   	(bad)  
ffff80000010c98b:	ff                   	(bad)  
ffff80000010c98c:	ff                   	(bad)  
ffff80000010c98d:	ff                   	(bad)  
ffff80000010c98e:	ff                   	(bad)  
ffff80000010c98f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c992:	ff                   	(bad)  
ffff80000010c993:	ff                   	(bad)  
ffff80000010c994:	ff                   	(bad)  
ffff80000010c995:	ff                   	(bad)  
ffff80000010c996:	ff                   	(bad)  
ffff80000010c997:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c99a:	ff                   	(bad)  
ffff80000010c99b:	ff                   	(bad)  
ffff80000010c99c:	ff                   	(bad)  
ffff80000010c99d:	ff                   	(bad)  
ffff80000010c99e:	ff                   	(bad)  
ffff80000010c99f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9a2:	ff                   	(bad)  
ffff80000010c9a3:	ff                   	(bad)  
ffff80000010c9a4:	ff                   	(bad)  
ffff80000010c9a5:	ff                   	(bad)  
ffff80000010c9a6:	ff                   	(bad)  
ffff80000010c9a7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9aa:	ff                   	(bad)  
ffff80000010c9ab:	ff                   	(bad)  
ffff80000010c9ac:	ff                   	(bad)  
ffff80000010c9ad:	ff                   	(bad)  
ffff80000010c9ae:	ff                   	(bad)  
ffff80000010c9af:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9b2:	ff                   	(bad)  
ffff80000010c9b3:	ff                   	(bad)  
ffff80000010c9b4:	ff                   	(bad)  
ffff80000010c9b5:	ff                   	(bad)  
ffff80000010c9b6:	ff                   	(bad)  
ffff80000010c9b7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9ba:	ff                   	(bad)  
ffff80000010c9bb:	ff                   	(bad)  
ffff80000010c9bc:	ff                   	(bad)  
ffff80000010c9bd:	ff                   	(bad)  
ffff80000010c9be:	ff                   	(bad)  
ffff80000010c9bf:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9c2:	ff                   	(bad)  
ffff80000010c9c3:	ff                   	(bad)  
ffff80000010c9c4:	ff                   	(bad)  
ffff80000010c9c5:	ff                   	(bad)  
ffff80000010c9c6:	ff                   	(bad)  
ffff80000010c9c7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9ca:	ff                   	(bad)  
ffff80000010c9cb:	ff                   	(bad)  
ffff80000010c9cc:	ff                   	(bad)  
ffff80000010c9cd:	ff                   	(bad)  
ffff80000010c9ce:	ff                   	(bad)  
ffff80000010c9cf:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9d2:	ff                   	(bad)  
ffff80000010c9d3:	ff                   	(bad)  
ffff80000010c9d4:	ff                   	(bad)  
ffff80000010c9d5:	ff                   	(bad)  
ffff80000010c9d6:	ff                   	(bad)  
ffff80000010c9d7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9da:	ff                   	(bad)  
ffff80000010c9db:	ff                   	(bad)  
ffff80000010c9dc:	ff                   	(bad)  
ffff80000010c9dd:	ff                   	(bad)  
ffff80000010c9de:	ff                   	(bad)  
ffff80000010c9df:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9e2:	ff                   	(bad)  
ffff80000010c9e3:	ff                   	(bad)  
ffff80000010c9e4:	ff                   	(bad)  
ffff80000010c9e5:	ff                   	(bad)  
ffff80000010c9e6:	ff                   	(bad)  
ffff80000010c9e7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9ea:	ff                   	(bad)  
ffff80000010c9eb:	ff                   	(bad)  
ffff80000010c9ec:	ff                   	(bad)  
ffff80000010c9ed:	ff                   	(bad)  
ffff80000010c9ee:	ff                   	(bad)  
ffff80000010c9ef:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9f2:	ff                   	(bad)  
ffff80000010c9f3:	ff                   	(bad)  
ffff80000010c9f4:	ff                   	(bad)  
ffff80000010c9f5:	ff                   	(bad)  
ffff80000010c9f6:	ff                   	(bad)  
ffff80000010c9f7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010c9fa:	ff                   	(bad)  
ffff80000010c9fb:	ff                   	(bad)  
ffff80000010c9fc:	ff                   	(bad)  
ffff80000010c9fd:	ff                   	(bad)  
ffff80000010c9fe:	ff                   	(bad)  
ffff80000010c9ff:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca02:	ff                   	(bad)  
ffff80000010ca03:	ff                   	(bad)  
ffff80000010ca04:	ff                   	(bad)  
ffff80000010ca05:	ff                   	(bad)  
ffff80000010ca06:	ff                   	(bad)  
ffff80000010ca07:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca0a:	ff                   	(bad)  
ffff80000010ca0b:	ff                   	(bad)  
ffff80000010ca0c:	ff                   	(bad)  
ffff80000010ca0d:	ff                   	(bad)  
ffff80000010ca0e:	ff                   	(bad)  
ffff80000010ca0f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca12:	ff                   	(bad)  
ffff80000010ca13:	ff                   	(bad)  
ffff80000010ca14:	ff                   	(bad)  
ffff80000010ca15:	ff                   	(bad)  
ffff80000010ca16:	ff                   	(bad)  
ffff80000010ca17:	ff 52 90             	call   QWORD PTR [rdx-0x70]
ffff80000010ca1a:	ff                   	(bad)  
ffff80000010ca1b:	ff                   	(bad)  
ffff80000010ca1c:	ff                   	(bad)  
ffff80000010ca1d:	ff                   	(bad)  
ffff80000010ca1e:	ff                   	(bad)  
ffff80000010ca1f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca22:	ff                   	(bad)  
ffff80000010ca23:	ff                   	(bad)  
ffff80000010ca24:	ff                   	(bad)  
ffff80000010ca25:	ff                   	(bad)  
ffff80000010ca26:	ff                   	(bad)  
ffff80000010ca27:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca2a:	ff                   	(bad)  
ffff80000010ca2b:	ff                   	(bad)  
ffff80000010ca2c:	ff                   	(bad)  
ffff80000010ca2d:	ff                   	(bad)  
ffff80000010ca2e:	ff                   	(bad)  
ffff80000010ca2f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca32:	ff                   	(bad)  
ffff80000010ca33:	ff                   	(bad)  
ffff80000010ca34:	ff                   	(bad)  
ffff80000010ca35:	ff                   	(bad)  
ffff80000010ca36:	ff                   	(bad)  
ffff80000010ca37:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca3a:	ff                   	(bad)  
ffff80000010ca3b:	ff                   	(bad)  
ffff80000010ca3c:	ff                   	(bad)  
ffff80000010ca3d:	ff                   	(bad)  
ffff80000010ca3e:	ff                   	(bad)  
ffff80000010ca3f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca42:	ff                   	(bad)  
ffff80000010ca43:	ff                   	(bad)  
ffff80000010ca44:	ff                   	(bad)  
ffff80000010ca45:	ff                   	(bad)  
ffff80000010ca46:	ff                   	(bad)  
ffff80000010ca47:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca4a:	ff                   	(bad)  
ffff80000010ca4b:	ff                   	(bad)  
ffff80000010ca4c:	ff                   	(bad)  
ffff80000010ca4d:	ff                   	(bad)  
ffff80000010ca4e:	ff                   	(bad)  
ffff80000010ca4f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca52:	ff                   	(bad)  
ffff80000010ca53:	ff                   	(bad)  
ffff80000010ca54:	ff                   	(bad)  
ffff80000010ca55:	ff                   	(bad)  
ffff80000010ca56:	ff                   	(bad)  
ffff80000010ca57:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca5a:	ff                   	(bad)  
ffff80000010ca5b:	ff                   	(bad)  
ffff80000010ca5c:	ff                   	(bad)  
ffff80000010ca5d:	ff                   	(bad)  
ffff80000010ca5e:	ff                   	(bad)  
ffff80000010ca5f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca62:	ff                   	(bad)  
ffff80000010ca63:	ff                   	(bad)  
ffff80000010ca64:	ff                   	(bad)  
ffff80000010ca65:	ff                   	(bad)  
ffff80000010ca66:	ff                   	(bad)  
ffff80000010ca67:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca6a:	ff                   	(bad)  
ffff80000010ca6b:	ff                   	(bad)  
ffff80000010ca6c:	ff                   	(bad)  
ffff80000010ca6d:	ff                   	(bad)  
ffff80000010ca6e:	ff                   	(bad)  
ffff80000010ca6f:	ff 07                	inc    DWORD PTR [rdi]
ffff80000010ca71:	8d                   	(bad)  
ffff80000010ca72:	ff                   	(bad)  
ffff80000010ca73:	ff                   	(bad)  
ffff80000010ca74:	ff                   	(bad)  
ffff80000010ca75:	ff                   	(bad)  
ffff80000010ca76:	ff                   	(bad)  
ffff80000010ca77:	ff 5e 91             	call   FWORD PTR [rsi-0x6f]
ffff80000010ca7a:	ff                   	(bad)  
ffff80000010ca7b:	ff                   	(bad)  
ffff80000010ca7c:	ff                   	(bad)  
ffff80000010ca7d:	ff                   	(bad)  
ffff80000010ca7e:	ff                   	(bad)  
ffff80000010ca7f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca82:	ff                   	(bad)  
ffff80000010ca83:	ff                   	(bad)  
ffff80000010ca84:	ff                   	(bad)  
ffff80000010ca85:	ff                   	(bad)  
ffff80000010ca86:	ff                   	(bad)  
ffff80000010ca87:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca8a:	ff                   	(bad)  
ffff80000010ca8b:	ff                   	(bad)  
ffff80000010ca8c:	ff                   	(bad)  
ffff80000010ca8d:	ff                   	(bad)  
ffff80000010ca8e:	ff                   	(bad)  
ffff80000010ca8f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca92:	ff                   	(bad)  
ffff80000010ca93:	ff                   	(bad)  
ffff80000010ca94:	ff                   	(bad)  
ffff80000010ca95:	ff                   	(bad)  
ffff80000010ca96:	ff                   	(bad)  
ffff80000010ca97:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010ca9a:	ff                   	(bad)  
ffff80000010ca9b:	ff                   	(bad)  
ffff80000010ca9c:	ff                   	(bad)  
ffff80000010ca9d:	ff                   	(bad)  
ffff80000010ca9e:	ff                   	(bad)  
ffff80000010ca9f:	ff 5e 91             	call   FWORD PTR [rsi-0x6f]
ffff80000010caa2:	ff                   	(bad)  
ffff80000010caa3:	ff                   	(bad)  
ffff80000010caa4:	ff                   	(bad)  
ffff80000010caa5:	ff                   	(bad)  
ffff80000010caa6:	ff                   	(bad)  
ffff80000010caa7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010caaa:	ff                   	(bad)  
ffff80000010caab:	ff                   	(bad)  
ffff80000010caac:	ff                   	(bad)  
ffff80000010caad:	ff                   	(bad)  
ffff80000010caae:	ff                   	(bad)  
ffff80000010caaf:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010cab2:	ff                   	(bad)  
ffff80000010cab3:	ff                   	(bad)  
ffff80000010cab4:	ff                   	(bad)  
ffff80000010cab5:	ff                   	(bad)  
ffff80000010cab6:	ff                   	(bad)  
ffff80000010cab7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010caba:	ff                   	(bad)  
ffff80000010cabb:	ff                   	(bad)  
ffff80000010cabc:	ff                   	(bad)  
ffff80000010cabd:	ff                   	(bad)  
ffff80000010cabe:	ff                   	(bad)  
ffff80000010cabf:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010cac2:	ff                   	(bad)  
ffff80000010cac3:	ff                   	(bad)  
ffff80000010cac4:	ff                   	(bad)  
ffff80000010cac5:	ff                   	(bad)  
ffff80000010cac6:	ff                   	(bad)  
ffff80000010cac7:	ff 6e 92             	jmp    FWORD PTR [rsi-0x6e]
ffff80000010caca:	ff                   	(bad)  
ffff80000010cacb:	ff                   	(bad)  
ffff80000010cacc:	ff                   	(bad)  
ffff80000010cacd:	ff                   	(bad)  
ffff80000010cace:	ff                   	(bad)  
ffff80000010cacf:	ff af 8e ff ff ff    	jmp    FWORD PTR [rdi-0x72]
ffff80000010cad5:	ff                   	(bad)  
ffff80000010cad6:	ff                   	(bad)  
ffff80000010cad7:	ff                   	(bad)  
ffff80000010cad8:	bb 8f ff ff ff       	mov    ebx,0xffffff8f
ffff80000010cadd:	ff                   	(bad)  
ffff80000010cade:	ff                   	(bad)  
ffff80000010cadf:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010cae2:	ff                   	(bad)  
ffff80000010cae3:	ff                   	(bad)  
ffff80000010cae4:	ff                   	(bad)  
ffff80000010cae5:	ff                   	(bad)  
ffff80000010cae6:	ff                   	(bad)  
ffff80000010cae7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010caea:	ff                   	(bad)  
ffff80000010caeb:	ff                   	(bad)  
ffff80000010caec:	ff                   	(bad)  
ffff80000010caed:	ff                   	(bad)  
ffff80000010caee:	ff                   	(bad)  
ffff80000010caef:	ff a1 8d ff ff ff    	jmp    QWORD PTR [rcx-0x73]
ffff80000010caf5:	ff                   	(bad)  
ffff80000010caf6:	ff                   	(bad)  
ffff80000010caf7:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010cafa:	ff                   	(bad)  
ffff80000010cafb:	ff                   	(bad)  
ffff80000010cafc:	ff                   	(bad)  
ffff80000010cafd:	ff                   	(bad)  
ffff80000010cafe:	ff                   	(bad)  
ffff80000010caff:	ff 62 91             	jmp    QWORD PTR [rdx-0x6f]
ffff80000010cb02:	ff                   	(bad)  
ffff80000010cb03:	ff                   	(bad)  
ffff80000010cb04:	ff                   	(bad)  
ffff80000010cb05:	ff                   	(bad)  
ffff80000010cb06:	ff                   	(bad)  
ffff80000010cb07:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010cb0a:	ff                   	(bad)  
ffff80000010cb0b:	ff                   	(bad)  
ffff80000010cb0c:	ff                   	(bad)  
ffff80000010cb0d:	ff                   	(bad)  
ffff80000010cb0e:	ff                   	(bad)  
ffff80000010cb0f:	ff 42 93             	inc    DWORD PTR [rdx-0x6d]
ffff80000010cb12:	ff                   	(bad)  
ffff80000010cb13:	ff                   	(bad)  
ffff80000010cb14:	ff                   	(bad)  
ffff80000010cb15:	ff                   	(bad)  
ffff80000010cb16:	ff                   	(bad)  
ffff80000010cb17:	ff 4e 90             	dec    DWORD PTR [rsi-0x70]
ffff80000010cb1a:	ff                   	(bad)  
ffff80000010cb1b:	ff                   	(bad)  
ffff80000010cb1c:	ff                   	(bad)  
ffff80000010cb1d:	ff                   	(bad)  
ffff80000010cb1e:	ff                   	(bad)  
ffff80000010cb1f:	ff             	jmp    QWORD PTR [rdi+rbp*2+0x5f]

ffff80000010cb20 <.LC0>:
ffff80000010cb20:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cb22:	5f                   	pop    rdi
ffff80000010cb23:	64 69 76 69 64 65 5f 	imul   esi,DWORD PTR fs:[rsi+0x69],0x655f6564
ffff80000010cb2a:	65 
ffff80000010cb2b:	72 72                	jb     ffff80000010cb9f <.LC2+0x7>
ffff80000010cb2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cb2e:	72 28                	jb     ffff80000010cb58 <.LC0+0x38>
ffff80000010cb30:	30 29                	xor    BYTE PTR [rcx],ch
ffff80000010cb32:	2c 45                	sub    al,0x45
ffff80000010cb34:	52                   	push   rdx
ffff80000010cb35:	52                   	push   rdx
ffff80000010cb36:	4f 52                	rex.WRXB push r10
ffff80000010cb38:	5f                   	pop    rdi
ffff80000010cb39:	43                   	rex.XB
ffff80000010cb3a:	4f                   	rex.WRXB
ffff80000010cb3b:	44                   	rex.R
ffff80000010cb3c:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841fb66 <_end+0x3830cb3e>
ffff80000010cb43:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cb44:	78 2c                	js     ffff80000010cb72 <.LC1+0x12>
ffff80000010cb46:	52                   	push   rdx
ffff80000010cb47:	53                   	push   rbx
ffff80000010cb48:	50                   	push   rax
ffff80000010cb49:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fb72 <_end+0x3830cb4a>
ffff80000010cb4f:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cb50:	78 2c                	js     ffff80000010cb7e <.LC1+0x1e>
ffff80000010cb52:	52                   	push   rdx
ffff80000010cb53:	49 50                	rex.WB push r8
ffff80000010cb55:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fb7e <_end+0x3830cb56>
ffff80000010cb5b:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cb5c:	78 0a                	js     ffff80000010cb68 <.LC1+0x8>
	...

ffff80000010cb60 <.LC1>:
ffff80000010cb60:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cb62:	5f                   	pop    rdi
ffff80000010cb63:	64 65 62             	fs gs (bad) 
ffff80000010cb66:	75 67                	jne    ffff80000010cbcf <.LC2+0x37>
ffff80000010cb68:	28 31                	sub    BYTE PTR [rcx],dh
ffff80000010cb6a:	29 2c 45 52 52 4f 52 	sub    DWORD PTR [rax*2+0x524f5252],ebp
ffff80000010cb71:	5f                   	pop    rdi
ffff80000010cb72:	43                   	rex.XB
ffff80000010cb73:	4f                   	rex.WRXB
ffff80000010cb74:	44                   	rex.R
ffff80000010cb75:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841fb9f <_end+0x3830cb77>
ffff80000010cb7c:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cb7d:	78 2c                	js     ffff80000010cbab <.LC2+0x13>
ffff80000010cb7f:	52                   	push   rdx
ffff80000010cb80:	53                   	push   rbx
ffff80000010cb81:	50                   	push   rax
ffff80000010cb82:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fbab <_end+0x3830cb83>
ffff80000010cb88:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cb89:	78 2c                	js     ffff80000010cbb7 <.LC2+0x1f>
ffff80000010cb8b:	52                   	push   rdx
ffff80000010cb8c:	49 50                	rex.WB push r8
ffff80000010cb8e:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fbb7 <_end+0x3830cb8f>
ffff80000010cb94:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cb95:	78 0a                	js     ffff80000010cba1 <.LC2+0x9>
	...

ffff80000010cb98 <.LC2>:
ffff80000010cb98:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cb9a:	5f                   	pop    rdi
ffff80000010cb9b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010cb9c:	6d                   	ins    DWORD PTR es:[rdi],dx
ffff80000010cb9d:	69 28 32 29 2c 45    	imul   ebp,DWORD PTR [rax],0x452c2932
ffff80000010cba3:	52                   	push   rdx
ffff80000010cba4:	52                   	push   rdx
ffff80000010cba5:	4f 52                	rex.WRXB push r10
ffff80000010cba7:	5f                   	pop    rdi
ffff80000010cba8:	43                   	rex.XB
ffff80000010cba9:	4f                   	rex.WRXB
ffff80000010cbaa:	44                   	rex.R
ffff80000010cbab:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841fbd5 <_end+0x3830cbad>
ffff80000010cbb2:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cbb3:	78 2c                	js     ffff80000010cbe1 <.LC3+0x11>
ffff80000010cbb5:	52                   	push   rdx
ffff80000010cbb6:	53                   	push   rbx
ffff80000010cbb7:	50                   	push   rax
ffff80000010cbb8:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fbe1 <_end+0x3830cbb9>
ffff80000010cbbe:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cbbf:	78 2c                	js     ffff80000010cbed <.LC3+0x1d>
ffff80000010cbc1:	52                   	push   rdx
ffff80000010cbc2:	49 50                	rex.WB push r8
ffff80000010cbc4:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fbed <_end+0x3830cbc5>
ffff80000010cbca:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cbcb:	78 0a                	js     ffff80000010cbd7 <.LC3+0x7>
ffff80000010cbcd:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010cbd0 <.LC3>:
ffff80000010cbd0:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cbd2:	5f                   	pop    rdi
ffff80000010cbd3:	69 6e 74 33 28 33 29 	imul   ebp,DWORD PTR [rsi+0x74],0x29332833
ffff80000010cbda:	2c 45                	sub    al,0x45
ffff80000010cbdc:	52                   	push   rdx
ffff80000010cbdd:	52                   	push   rdx
ffff80000010cbde:	4f 52                	rex.WRXB push r10
ffff80000010cbe0:	5f                   	pop    rdi
ffff80000010cbe1:	43                   	rex.XB
ffff80000010cbe2:	4f                   	rex.WRXB
ffff80000010cbe3:	44                   	rex.R
ffff80000010cbe4:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841fc0e <_end+0x3830cbe6>
ffff80000010cbeb:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cbec:	78 2c                	js     ffff80000010cc1a <.LC4+0x12>
ffff80000010cbee:	52                   	push   rdx
ffff80000010cbef:	53                   	push   rbx
ffff80000010cbf0:	50                   	push   rax
ffff80000010cbf1:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fc1a <_end+0x3830cbf2>
ffff80000010cbf7:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cbf8:	78 2c                	js     ffff80000010cc26 <.LC4+0x1e>
ffff80000010cbfa:	52                   	push   rdx
ffff80000010cbfb:	49 50                	rex.WB push r8
ffff80000010cbfd:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fc26 <_end+0x3830cbfe>
ffff80000010cc03:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cc04:	78 0a                	js     ffff80000010cc10 <.LC4+0x8>
	...

ffff80000010cc08 <.LC4>:
ffff80000010cc08:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cc0a:	5f                   	pop    rdi
ffff80000010cc0b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cc0c:	76 65                	jbe    ffff80000010cc73 <.LC5+0x2b>
ffff80000010cc0e:	72 66                	jb     ffff80000010cc76 <.LC5+0x2e>
ffff80000010cc10:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cc11:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cc12:	77 28                	ja     ffff80000010cc3c <.LC4+0x34>
ffff80000010cc14:	34 29                	xor    al,0x29
ffff80000010cc16:	2c 45                	sub    al,0x45
ffff80000010cc18:	52                   	push   rdx
ffff80000010cc19:	52                   	push   rdx
ffff80000010cc1a:	4f 52                	rex.WRXB push r10
ffff80000010cc1c:	5f                   	pop    rdi
ffff80000010cc1d:	43                   	rex.XB
ffff80000010cc1e:	4f                   	rex.WRXB
ffff80000010cc1f:	44                   	rex.R
ffff80000010cc20:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841fc4a <_end+0x3830cc22>
ffff80000010cc27:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cc28:	78 2c                	js     ffff80000010cc56 <.LC5+0xe>
ffff80000010cc2a:	52                   	push   rdx
ffff80000010cc2b:	53                   	push   rbx
ffff80000010cc2c:	50                   	push   rax
ffff80000010cc2d:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fc56 <_end+0x3830cc2e>
ffff80000010cc33:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cc34:	78 2c                	js     ffff80000010cc62 <.LC5+0x1a>
ffff80000010cc36:	52                   	push   rdx
ffff80000010cc37:	49 50                	rex.WB push r8
ffff80000010cc39:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fc62 <_end+0x3830cc3a>
ffff80000010cc3f:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cc40:	78 0a                	js     ffff80000010cc4c <.LC5+0x4>
ffff80000010cc42:	00 00                	add    BYTE PTR [rax],al
ffff80000010cc44:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010cc48 <.LC5>:
ffff80000010cc48:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cc4a:	5f                   	pop    rdi
ffff80000010cc4b:	62                   	(bad)  
ffff80000010cc4c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cc4d:	75 6e                	jne    ffff80000010ccbd <.LC6+0x35>
ffff80000010cc4f:	64 73 28             	fs jae ffff80000010cc7a <.LC5+0x32>
ffff80000010cc52:	35 29 2c 45 52       	xor    eax,0x52452c29
ffff80000010cc57:	52                   	push   rdx
ffff80000010cc58:	4f 52                	rex.WRXB push r10
ffff80000010cc5a:	5f                   	pop    rdi
ffff80000010cc5b:	43                   	rex.XB
ffff80000010cc5c:	4f                   	rex.WRXB
ffff80000010cc5d:	44                   	rex.R
ffff80000010cc5e:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841fc88 <_end+0x3830cc60>
ffff80000010cc65:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cc66:	78 2c                	js     ffff80000010cc94 <.LC6+0xc>
ffff80000010cc68:	52                   	push   rdx
ffff80000010cc69:	53                   	push   rbx
ffff80000010cc6a:	50                   	push   rax
ffff80000010cc6b:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fc94 <_end+0x3830cc6c>
ffff80000010cc71:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cc72:	78 2c                	js     ffff80000010cca0 <.LC6+0x18>
ffff80000010cc74:	52                   	push   rdx
ffff80000010cc75:	49 50                	rex.WB push r8
ffff80000010cc77:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fca0 <_end+0x3830cc78>
ffff80000010cc7d:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cc7e:	78 0a                	js     ffff80000010cc8a <.LC6+0x2>
	...

ffff80000010cc88 <.LC6>:
ffff80000010cc88:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cc8a:	5f                   	pop    rdi
ffff80000010cc8b:	75 6e                	jne    ffff80000010ccfb <.LC7+0x2b>
ffff80000010cc8d:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f64
ffff80000010cc94:	5f 
ffff80000010cc95:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cc96:	70 63                	jo     ffff80000010ccfb <.LC7+0x2b>
ffff80000010cc98:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cc99:	64 65 28 36          	fs sub BYTE PTR gs:[rsi],dh
ffff80000010cc9d:	29 2c 45 52 52 4f 52 	sub    DWORD PTR [rax*2+0x524f5252],ebp
ffff80000010cca4:	5f                   	pop    rdi
ffff80000010cca5:	43                   	rex.XB
ffff80000010cca6:	4f                   	rex.WRXB
ffff80000010cca7:	44                   	rex.R
ffff80000010cca8:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841fcd2 <_end+0x3830ccaa>
ffff80000010ccaf:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010ccb0:	78 2c                	js     ffff80000010ccde <.LC7+0xe>
ffff80000010ccb2:	52                   	push   rdx
ffff80000010ccb3:	53                   	push   rbx
ffff80000010ccb4:	50                   	push   rax
ffff80000010ccb5:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fcde <_end+0x3830ccb6>
ffff80000010ccbb:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010ccbc:	78 2c                	js     ffff80000010ccea <.LC7+0x1a>
ffff80000010ccbe:	52                   	push   rdx
ffff80000010ccbf:	49 50                	rex.WB push r8
ffff80000010ccc1:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fcea <_end+0x3830ccc2>
ffff80000010ccc7:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010ccc8:	78 0a                	js     ffff80000010ccd4 <.LC7+0x4>
ffff80000010ccca:	00 00                	add    BYTE PTR [rax],al
ffff80000010cccc:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010ccd0 <.LC7>:
ffff80000010ccd0:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010ccd2:	5f                   	pop    rdi
ffff80000010ccd3:	64 65 76 5f          	fs gs jbe ffff80000010cd36 <.LC8+0x1e>
ffff80000010ccd7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010ccd8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010ccd9:	74 5f                	je     ffff80000010cd3a <.LC8+0x22>
ffff80000010ccdb:	61                   	(bad)  
ffff80000010ccdc:	76 61                	jbe    ffff80000010cd3f <.LC8+0x27>
ffff80000010ccde:	69 6c 61 62 6c 65 28 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x3728656c
ffff80000010cce5:	37 
ffff80000010cce6:	29 2c 45 52 52 4f 52 	sub    DWORD PTR [rax*2+0x524f5252],ebp
ffff80000010cced:	5f                   	pop    rdi
ffff80000010ccee:	43                   	rex.XB
ffff80000010ccef:	4f                   	rex.WRXB
ffff80000010ccf0:	44                   	rex.R
ffff80000010ccf1:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841fd1b <_end+0x3830ccf3>
ffff80000010ccf8:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010ccf9:	78 2c                	js     ffff80000010cd27 <.LC8+0xf>
ffff80000010ccfb:	52                   	push   rdx
ffff80000010ccfc:	53                   	push   rbx
ffff80000010ccfd:	50                   	push   rax
ffff80000010ccfe:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fd27 <_end+0x3830ccff>
ffff80000010cd04:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cd05:	78 2c                	js     ffff80000010cd33 <.LC8+0x1b>
ffff80000010cd07:	52                   	push   rdx
ffff80000010cd08:	49 50                	rex.WB push r8
ffff80000010cd0a:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fd33 <_end+0x3830cd0b>
ffff80000010cd10:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cd11:	78 0a                	js     ffff80000010cd1d <.LC8+0x5>
ffff80000010cd13:	00 00                	add    BYTE PTR [rax],al
ffff80000010cd15:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010cd18 <.LC8>:
ffff80000010cd18:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cd1a:	5f                   	pop    rdi
ffff80000010cd1b:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cd1d:	75 62                	jne    ffff80000010cd81 <.LC9+0x29>
ffff80000010cd1f:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cd20:	65 5f                	gs pop rdi
ffff80000010cd22:	66 61                	data16 (bad) 
ffff80000010cd24:	75 6c                	jne    ffff80000010cd92 <.LC9+0x3a>
ffff80000010cd26:	74 28                	je     ffff80000010cd50 <.LC8+0x38>
ffff80000010cd28:	38 29                	cmp    BYTE PTR [rcx],ch
ffff80000010cd2a:	2c 45                	sub    al,0x45
ffff80000010cd2c:	52                   	push   rdx
ffff80000010cd2d:	52                   	push   rdx
ffff80000010cd2e:	4f 52                	rex.WRXB push r10
ffff80000010cd30:	5f                   	pop    rdi
ffff80000010cd31:	43                   	rex.XB
ffff80000010cd32:	4f                   	rex.WRXB
ffff80000010cd33:	44                   	rex.R
ffff80000010cd34:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841fd5e <_end+0x3830cd36>
ffff80000010cd3b:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cd3c:	78 2c                	js     ffff80000010cd6a <.LC9+0x12>
ffff80000010cd3e:	52                   	push   rdx
ffff80000010cd3f:	53                   	push   rbx
ffff80000010cd40:	50                   	push   rax
ffff80000010cd41:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fd6a <_end+0x3830cd42>
ffff80000010cd47:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cd48:	78 2c                	js     ffff80000010cd76 <.LC9+0x1e>
ffff80000010cd4a:	52                   	push   rdx
ffff80000010cd4b:	49 50                	rex.WB push r8
ffff80000010cd4d:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fd76 <_end+0x3830cd4e>
ffff80000010cd53:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cd54:	78 0a                	js     ffff80000010cd60 <.LC9+0x8>
	...

ffff80000010cd58 <.LC9>:
ffff80000010cd58:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cd5a:	5f                   	pop    rdi
ffff80000010cd5b:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
ffff80000010cd5e:	72 6f                	jb     ffff80000010cdcf <.LC10+0x27>
ffff80000010cd60:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
ffff80000010cd63:	73 6f                	jae    ffff80000010cdd4 <.LC10+0x2c>
ffff80000010cd65:	72 5f                	jb     ffff80000010cdc6 <.LC10+0x1e>
ffff80000010cd67:	73 65                	jae    ffff80000010cdce <.LC10+0x26>
ffff80000010cd69:	67 6d                	ins    DWORD PTR es:[edi],dx
ffff80000010cd6b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
ffff80000010cd6d:	74 5f                	je     ffff80000010cdce <.LC10+0x26>
ffff80000010cd6f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cd70:	76 65                	jbe    ffff80000010cdd7 <.LC10+0x2f>
ffff80000010cd72:	72 72                	jb     ffff80000010cde6 <.LC10+0x3e>
ffff80000010cd74:	75 6e                	jne    ffff80000010cde4 <.LC10+0x3c>
ffff80000010cd76:	28 39                	sub    BYTE PTR [rcx],bh
ffff80000010cd78:	29 2c 45 52 52 4f 52 	sub    DWORD PTR [rax*2+0x524f5252],ebp
ffff80000010cd7f:	5f                   	pop    rdi
ffff80000010cd80:	43                   	rex.XB
ffff80000010cd81:	4f                   	rex.WRXB
ffff80000010cd82:	44                   	rex.R
ffff80000010cd83:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841fdad <_end+0x3830cd85>
ffff80000010cd8a:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cd8b:	78 2c                	js     ffff80000010cdb9 <.LC10+0x11>
ffff80000010cd8d:	52                   	push   rdx
ffff80000010cd8e:	53                   	push   rbx
ffff80000010cd8f:	50                   	push   rax
ffff80000010cd90:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fdb9 <_end+0x3830cd91>
ffff80000010cd96:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cd97:	78 2c                	js     ffff80000010cdc5 <.LC10+0x1d>
ffff80000010cd99:	52                   	push   rdx
ffff80000010cd9a:	49 50                	rex.WB push r8
ffff80000010cd9c:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fdc5 <_end+0x3830cd9d>
ffff80000010cda2:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cda3:	78 0a                	js     ffff80000010cdaf <.LC10+0x7>
ffff80000010cda5:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010cda8 <.LC10>:
ffff80000010cda8:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cdaa:	5f                   	pop    rdi
ffff80000010cdab:	69 6e 76 61 6c 69 64 	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
ffff80000010cdb2:	5f                   	pop    rdi
ffff80000010cdb3:	54                   	push   rsp
ffff80000010cdb4:	53                   	push   rbx
ffff80000010cdb5:	53                   	push   rbx
ffff80000010cdb6:	28 31                	sub    BYTE PTR [rcx],dh
ffff80000010cdb8:	30 29                	xor    BYTE PTR [rcx],ch
ffff80000010cdba:	2c 45                	sub    al,0x45
ffff80000010cdbc:	52                   	push   rdx
ffff80000010cdbd:	52                   	push   rdx
ffff80000010cdbe:	4f 52                	rex.WRXB push r10
ffff80000010cdc0:	5f                   	pop    rdi
ffff80000010cdc1:	43                   	rex.XB
ffff80000010cdc2:	4f                   	rex.WRXB
ffff80000010cdc3:	44                   	rex.R
ffff80000010cdc4:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841fdee <_end+0x3830cdc6>
ffff80000010cdcb:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cdcc:	78 2c                	js     ffff80000010cdfa <.LC11+0x12>
ffff80000010cdce:	52                   	push   rdx
ffff80000010cdcf:	53                   	push   rbx
ffff80000010cdd0:	50                   	push   rax
ffff80000010cdd1:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fdfa <_end+0x3830cdd2>
ffff80000010cdd7:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cdd8:	78 2c                	js     ffff80000010ce06 <.LC11+0x1e>
ffff80000010cdda:	52                   	push   rdx
ffff80000010cddb:	49 50                	rex.WB push r8
ffff80000010cddd:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fe06 <_end+0x3830cdde>
ffff80000010cde3:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cde4:	78 0a                	js     ffff80000010cdf0 <.LC11+0x8>
	...

ffff80000010cde8 <.LC11>:
ffff80000010cde8:	54                   	push   rsp
ffff80000010cde9:	68 65 20 65 78       	push   0x78652065
ffff80000010cdee:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
ffff80000010cdf1:	74 69                	je     ffff80000010ce5c <.LC11+0x74>
ffff80000010cdf3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cdf4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010cdf5:	20 6f 63             	and    BYTE PTR [rdi+0x63],ch
ffff80000010cdf8:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
ffff80000010cdfb:	72 65                	jb     ffff80000010ce62 <.LC11+0x7a>
ffff80000010cdfd:	64 20 64 75 72       	and    BYTE PTR fs:[rbp+rsi*2+0x72],ah
ffff80000010ce02:	69 6e 67 20 64 65 6c 	imul   ebp,DWORD PTR [rsi+0x67],0x6c656420
ffff80000010ce09:	69 76 65 72 79 20 6f 	imul   esi,DWORD PTR [rsi+0x65],0x6f207972
ffff80000010ce10:	66 20 61 6e          	data16 and BYTE PTR [rcx+0x6e],ah
ffff80000010ce14:	20 65 76             	and    BYTE PTR [rbp+0x76],ah
ffff80000010ce17:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
ffff80000010ce19:	74 20                	je     ffff80000010ce3b <.LC11+0x53>
ffff80000010ce1b:	65 78 74             	gs js  ffff80000010ce92 <.LC12+0x2a>
ffff80000010ce1e:	65 72 6e             	gs jb  ffff80000010ce8f <.LC12+0x27>
ffff80000010ce21:	61                   	(bad)  
ffff80000010ce22:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010ce23:	20 74 6f 20          	and    BYTE PTR [rdi+rbp*2+0x20],dh
ffff80000010ce27:	74 68                	je     ffff80000010ce91 <.LC12+0x29>
ffff80000010ce29:	65 20 70 72          	and    BYTE PTR gs:[rax+0x72],dh
ffff80000010ce2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010ce2e:	67 72 61             	addr32 jb ffff80000010ce92 <.LC12+0x2a>
ffff80000010ce31:	6d                   	ins    DWORD PTR es:[rdi],dx
ffff80000010ce32:	2c 73                	sub    al,0x73
ffff80000010ce34:	75 63                	jne    ffff80000010ce99 <.LC13+0x1>
ffff80000010ce36:	68 20 61 73 20       	push   0x20736120
ffff80000010ce3b:	61                   	(bad)  
ffff80000010ce3c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010ce3d:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
ffff80000010ce40:	74 65                	je     ffff80000010cea7 <.LC13+0xf>
ffff80000010ce42:	72 72                	jb     ffff80000010ceb6 <.LC13+0x1e>
ffff80000010ce44:	75 70                	jne    ffff80000010ceb6 <.LC13+0x1e>
ffff80000010ce46:	74 20                	je     ffff80000010ce68 <.LC12>
ffff80000010ce48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010ce49:	72 20                	jb     ffff80000010ce6b <.LC12+0x3>
ffff80000010ce4b:	61                   	(bad)  
ffff80000010ce4c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010ce4d:	20 65 61             	and    BYTE PTR [rbp+0x61],ah
ffff80000010ce50:	72 6c                	jb     ffff80000010cebe <.LC13+0x26>
ffff80000010ce52:	69 65 72 20 65 78 63 	imul   esp,DWORD PTR [rbp+0x72],0x63786520
ffff80000010ce59:	65 70 74             	gs jo  ffff80000010ced0 <.LC14>
ffff80000010ce5c:	69 6f 6e 2e 0a 00 00 	imul   ebp,DWORD PTR [rdi+0x6e],0xa2e
ffff80000010ce63:	00 00                	add    BYTE PTR [rax],al
ffff80000010ce65:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010ce68 <.LC12>:
ffff80000010ce68:	52                   	push   rdx
ffff80000010ce69:	65 66 65 72 73       	gs data16 gs jb ffff80000010cee1 <.LC14+0x11>
ffff80000010ce6e:	20 74 6f 20          	and    BYTE PTR [rdi+rbp*2+0x20],dh
ffff80000010ce72:	61                   	(bad)  
ffff80000010ce73:	20 67 61             	and    BYTE PTR [rdi+0x61],ah
ffff80000010ce76:	74 65                	je     ffff80000010cedd <.LC14+0xd>
ffff80000010ce78:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
ffff80000010ce7c:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
ffff80000010ce7f:	70 74                	jo     ffff80000010cef5 <.LC14+0x25>
ffff80000010ce81:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010ce82:	72 20                	jb     ffff80000010cea4 <.LC13+0xc>
ffff80000010ce84:	69 6e 20 74 68 65 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
ffff80000010ce8b:	49                   	rex.WB
ffff80000010ce8c:	44 54                	rex.R push rsp
ffff80000010ce8e:	3b 0a                	cmp    ecx,DWORD PTR [rdx]
	...

ffff80000010ce98 <.LC13>:
ffff80000010ce98:	52                   	push   rdx
ffff80000010ce99:	65 66 65 72 73       	gs data16 gs jb ffff80000010cf11 <.LC15+0x9>
ffff80000010ce9e:	20 74 6f 20          	and    BYTE PTR [rdi+rbp*2+0x20],dh
ffff80000010cea2:	61                   	(bad)  
ffff80000010cea3:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
ffff80000010cea7:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
ffff80000010ceaa:	70 74                	jo     ffff80000010cf20 <.LC15+0x18>
ffff80000010ceac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cead:	72 20                	jb     ffff80000010cecf <.LC13+0x37>
ffff80000010ceaf:	69 6e 20 74 68 65 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
ffff80000010ceb6:	47                   	rex.RXB
ffff80000010ceb7:	44 54                	rex.R push rsp
ffff80000010ceb9:	20 6f 72             	and    BYTE PTR [rdi+0x72],ch
ffff80000010cebc:	20 74 68 65          	and    BYTE PTR [rax+rbp*2+0x65],dh
ffff80000010cec0:	20 63 75             	and    BYTE PTR [rbx+0x75],ah
ffff80000010cec3:	72 72                	jb     ffff80000010cf37 <.LC15+0x2f>
ffff80000010cec5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
ffff80000010cec7:	74 20                	je     ffff80000010cee9 <.LC14+0x19>
ffff80000010cec9:	4c                   	rex.WR
ffff80000010ceca:	44 54                	rex.R push rsp
ffff80000010cecc:	3b 0a                	cmp    ecx,DWORD PTR [rdx]
	...

ffff80000010ced0 <.LC14>:
ffff80000010ced0:	52                   	push   rdx
ffff80000010ced1:	65 66 65 72 73       	gs data16 gs jb ffff80000010cf49 <.LC16+0x11>
ffff80000010ced6:	20 74 6f 20          	and    BYTE PTR [rdi+rbp*2+0x20],dh
ffff80000010ceda:	61                   	(bad)  
ffff80000010cedb:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
ffff80000010cede:	67 6d                	ins    DWORD PTR es:[edi],dx
ffff80000010cee0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
ffff80000010cee2:	74 20                	je     ffff80000010cf04 <.LC14+0x34>
ffff80000010cee4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cee5:	72 20                	jb     ffff80000010cf07 <.LC14+0x37>
ffff80000010cee7:	67 61                	addr32 (bad) 
ffff80000010cee9:	74 65                	je     ffff80000010cf50 <.LC16+0x18>
ffff80000010ceeb:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
ffff80000010ceef:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
ffff80000010cef2:	70 74                	jo     ffff80000010cf68 <.LC17+0x10>
ffff80000010cef4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cef5:	72 20                	jb     ffff80000010cf17 <.LC15+0xf>
ffff80000010cef7:	69 6e 20 74 68 65 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
ffff80000010cefe:	4c                   	rex.WR
ffff80000010ceff:	44 54                	rex.R push rsp
ffff80000010cf01:	3b 0a                	cmp    ecx,DWORD PTR [rdx]
ffff80000010cf03:	00 00                	add    BYTE PTR [rax],al
ffff80000010cf05:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010cf08 <.LC15>:
ffff80000010cf08:	52                   	push   rdx
ffff80000010cf09:	65 66 65 72 73       	gs data16 gs jb ffff80000010cf81 <.LC17+0x29>
ffff80000010cf0e:	20 74 6f 20          	and    BYTE PTR [rdi+rbp*2+0x20],dh
ffff80000010cf12:	61                   	(bad)  
ffff80000010cf13:	20 64 65 73          	and    BYTE PTR [rbp+riz*2+0x73],ah
ffff80000010cf17:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
ffff80000010cf1a:	70 74                	jo     ffff80000010cf90 <.LC17+0x38>
ffff80000010cf1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cf1d:	72 20                	jb     ffff80000010cf3f <.LC16+0x7>
ffff80000010cf1f:	69 6e 20 74 68 65 20 	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
ffff80000010cf26:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
ffff80000010cf29:	72 65                	jb     ffff80000010cf90 <.LC17+0x38>
ffff80000010cf2b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010cf2c:	74 20                	je     ffff80000010cf4e <.LC16+0x16>
ffff80000010cf2e:	47                   	rex.RXB
ffff80000010cf2f:	44 54                	rex.R push rsp
ffff80000010cf31:	3b 0a                	cmp    ecx,DWORD PTR [rdx]
ffff80000010cf33:	00 00                	add    BYTE PTR [rax],al
ffff80000010cf35:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010cf38 <.LC16>:
ffff80000010cf38:	53                   	push   rbx
ffff80000010cf39:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
ffff80000010cf3c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
ffff80000010cf3e:	74 20                	je     ffff80000010cf60 <.LC17+0x8>
ffff80000010cf40:	53                   	push   rbx
ffff80000010cf41:	65 6c                	gs ins BYTE PTR es:[rdi],dx
ffff80000010cf43:	65 63 74 6f 72       	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
ffff80000010cf48:	20 49 6e             	and    BYTE PTR [rcx+0x6e],cl
ffff80000010cf4b:	64 65 78 3a          	fs gs js ffff80000010cf89 <.LC17+0x31>
ffff80000010cf4f:	25 23 30 31 30       	and    eax,0x30313023
ffff80000010cf54:	78 0a                	js     ffff80000010cf60 <.LC17+0x8>
	...

ffff80000010cf58 <.LC17>:
ffff80000010cf58:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cf5a:	5f                   	pop    rdi
ffff80000010cf5b:	73 65                	jae    ffff80000010cfc2 <.LC18+0x22>
ffff80000010cf5d:	67 6d                	ins    DWORD PTR es:[edi],dx
ffff80000010cf5f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
ffff80000010cf61:	74 5f                	je     ffff80000010cfc2 <.LC18+0x22>
ffff80000010cf63:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010cf64:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cf65:	74 5f                	je     ffff80000010cfc6 <.LC18+0x26>
ffff80000010cf67:	70 72                	jo     ffff80000010cfdb <.LC18+0x3b>
ffff80000010cf69:	65 73 65             	gs jae ffff80000010cfd1 <.LC18+0x31>
ffff80000010cf6c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010cf6d:	74 28                	je     ffff80000010cf97 <.LC17+0x3f>
ffff80000010cf6f:	31 31                	xor    DWORD PTR [rcx],esi
ffff80000010cf71:	29 2c 45 52 52 4f 52 	sub    DWORD PTR [rax*2+0x524f5252],ebp
ffff80000010cf78:	5f                   	pop    rdi
ffff80000010cf79:	43                   	rex.XB
ffff80000010cf7a:	4f                   	rex.WRXB
ffff80000010cf7b:	44                   	rex.R
ffff80000010cf7c:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841ffa6 <_end+0x3830cf7e>
ffff80000010cf83:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cf84:	78 2c                	js     ffff80000010cfb2 <.LC18+0x12>
ffff80000010cf86:	52                   	push   rdx
ffff80000010cf87:	53                   	push   rbx
ffff80000010cf88:	50                   	push   rax
ffff80000010cf89:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841ffb2 <_end+0x3830cf8a>
ffff80000010cf8f:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cf90:	78 2c                	js     ffff80000010cfbe <.LC18+0x1e>
ffff80000010cf92:	52                   	push   rdx
ffff80000010cf93:	49 50                	rex.WB push r8
ffff80000010cf95:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841ffbe <_end+0x3830cf96>
ffff80000010cf9b:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cf9c:	78 0a                	js     ffff80000010cfa8 <.LC18+0x8>
	...

ffff80000010cfa0 <.LC18>:
ffff80000010cfa0:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cfa2:	5f                   	pop    rdi
ffff80000010cfa3:	73 74                	jae    ffff80000010d019 <.LC19+0x31>
ffff80000010cfa5:	61                   	(bad)  
ffff80000010cfa6:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
ffff80000010cfa9:	73 65                	jae    ffff80000010d010 <.LC19+0x28>
ffff80000010cfab:	67 6d                	ins    DWORD PTR es:[edi],dx
ffff80000010cfad:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
ffff80000010cfaf:	74 5f                	je     ffff80000010d010 <.LC19+0x28>
ffff80000010cfb1:	66 61                	data16 (bad) 
ffff80000010cfb3:	75 6c                	jne    ffff80000010d021 <.LC19+0x39>
ffff80000010cfb5:	74 28                	je     ffff80000010cfdf <.LC18+0x3f>
ffff80000010cfb7:	31 32                	xor    DWORD PTR [rdx],esi
ffff80000010cfb9:	29 2c 45 52 52 4f 52 	sub    DWORD PTR [rax*2+0x524f5252],ebp
ffff80000010cfc0:	5f                   	pop    rdi
ffff80000010cfc1:	43                   	rex.XB
ffff80000010cfc2:	4f                   	rex.WRXB
ffff80000010cfc3:	44                   	rex.R
ffff80000010cfc4:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003841ffee <_end+0x3830cfc6>
ffff80000010cfcb:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cfcc:	78 2c                	js     ffff80000010cffa <.LC19+0x12>
ffff80000010cfce:	52                   	push   rdx
ffff80000010cfcf:	53                   	push   rbx
ffff80000010cfd0:	50                   	push   rax
ffff80000010cfd1:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003841fffa <_end+0x3830cfd2>
ffff80000010cfd7:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cfd8:	78 2c                	js     ffff80000010d006 <.LC19+0x1e>
ffff80000010cfda:	52                   	push   rdx
ffff80000010cfdb:	49 50                	rex.WB push r8
ffff80000010cfdd:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff800038420006 <_end+0x3830cfde>
ffff80000010cfe3:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cfe4:	78 0a                	js     ffff80000010cff0 <.LC19+0x8>
	...

ffff80000010cfe8 <.LC19>:
ffff80000010cfe8:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010cfea:	5f                   	pop    rdi
ffff80000010cfeb:	67 65 6e             	outs   dx,BYTE PTR gs:[esi]
ffff80000010cfee:	65 72 61             	gs jb  ffff80000010d052 <.LC20+0x22>
ffff80000010cff1:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010cff2:	5f                   	pop    rdi
ffff80000010cff3:	70 72                	jo     ffff80000010d067 <.LC20+0x37>
ffff80000010cff5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010cff6:	74 65                	je     ffff80000010d05d <.LC20+0x2d>
ffff80000010cff8:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
ffff80000010cffc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010cffd:	28 31                	sub    BYTE PTR [rcx],dh
ffff80000010cfff:	33 29                	xor    ebp,DWORD PTR [rcx]
ffff80000010d001:	2c 45                	sub    al,0x45
ffff80000010d003:	52                   	push   rdx
ffff80000010d004:	52                   	push   rdx
ffff80000010d005:	4f 52                	rex.WRXB push r10
ffff80000010d007:	5f                   	pop    rdi
ffff80000010d008:	43                   	rex.XB
ffff80000010d009:	4f                   	rex.WRXB
ffff80000010d00a:	44                   	rex.R
ffff80000010d00b:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff800038420035 <_end+0x3830d00d>
ffff80000010d012:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d013:	78 2c                	js     ffff80000010d041 <.LC20+0x11>
ffff80000010d015:	52                   	push   rdx
ffff80000010d016:	53                   	push   rbx
ffff80000010d017:	50                   	push   rax
ffff80000010d018:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff800038420041 <_end+0x3830d019>
ffff80000010d01e:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d01f:	78 2c                	js     ffff80000010d04d <.LC20+0x1d>
ffff80000010d021:	52                   	push   rdx
ffff80000010d022:	49 50                	rex.WB push r8
ffff80000010d024:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003842004d <_end+0x3830d025>
ffff80000010d02a:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d02b:	78 0a                	js     ffff80000010d037 <.LC20+0x7>
ffff80000010d02d:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010d030 <.LC20>:
ffff80000010d030:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010d032:	5f                   	pop    rdi
ffff80000010d033:	70 61                	jo     ffff80000010d096 <.LC23+0x1>
ffff80000010d035:	67 65 5f             	addr32 gs pop rdi
ffff80000010d038:	66 61                	data16 (bad) 
ffff80000010d03a:	75 6c                	jne    ffff80000010d0a8 <.LC24>
ffff80000010d03c:	74 28                	je     ffff80000010d066 <.LC20+0x36>
ffff80000010d03e:	31 34 29             	xor    DWORD PTR [rcx+rbp*1],esi
ffff80000010d041:	2c 45                	sub    al,0x45
ffff80000010d043:	52                   	push   rdx
ffff80000010d044:	52                   	push   rdx
ffff80000010d045:	4f 52                	rex.WRXB push r10
ffff80000010d047:	5f                   	pop    rdi
ffff80000010d048:	43                   	rex.XB
ffff80000010d049:	4f                   	rex.WRXB
ffff80000010d04a:	44                   	rex.R
ffff80000010d04b:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff800038420075 <_end+0x3830d04d>
ffff80000010d052:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d053:	78 2c                	js     ffff80000010d081 <.LC22>
ffff80000010d055:	52                   	push   rdx
ffff80000010d056:	53                   	push   rbx
ffff80000010d057:	50                   	push   rax
ffff80000010d058:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff800038420081 <_end+0x3830d059>
ffff80000010d05e:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d05f:	78 2c                	js     ffff80000010d08d <.LC22+0xc>
ffff80000010d061:	52                   	push   rdx
ffff80000010d062:	49 50                	rex.WB push r8
ffff80000010d064:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003842008d <_end+0x3830d065>
ffff80000010d06a:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d06b:	78 0a                	js     ffff80000010d077 <.LC21+0x9>
	...

ffff80000010d06e <.LC21>:
ffff80000010d06e:	50                   	push   rax
ffff80000010d06f:	61                   	(bad)  
ffff80000010d070:	67 65 20 4e 6f       	and    BYTE PTR gs:[esi+0x6f],cl
ffff80000010d075:	74 2d                	je     ffff80000010d0a4 <.LC23+0xf>
ffff80000010d077:	50                   	push   rax
ffff80000010d078:	72 65                	jb     ffff80000010d0df <.LC26+0x9>
ffff80000010d07a:	73 65                	jae    ffff80000010d0e1 <.LC26+0xb>
ffff80000010d07c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010d07d:	74 2c                	je     ffff80000010d0ab <.LC24+0x3>
ffff80000010d07f:	09 00                	or     DWORD PTR [rax],eax

ffff80000010d081 <.LC22>:
ffff80000010d081:	57                   	push   rdi
ffff80000010d082:	72 69                	jb     ffff80000010d0ed <.LC26+0x17>
ffff80000010d084:	74 65                	je     ffff80000010d0eb <.LC26+0x15>
ffff80000010d086:	20 43 61             	and    BYTE PTR [rbx+0x61],al
ffff80000010d089:	75 73                	jne    ffff80000010d0fe <.LC27+0x6>
ffff80000010d08b:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
ffff80000010d08f:	75 6c                	jne    ffff80000010d0fd <.LC27+0x5>
ffff80000010d091:	74 2c                	je     ffff80000010d0bf <.LC25+0x5>
ffff80000010d093:	09 00                	or     DWORD PTR [rax],eax

ffff80000010d095 <.LC23>:
ffff80000010d095:	52                   	push   rdx
ffff80000010d096:	65 61                	gs (bad) 
ffff80000010d098:	64 20 43 61          	and    BYTE PTR fs:[rbx+0x61],al
ffff80000010d09c:	75 73                	jne    ffff80000010d111 <.LC27+0x19>
ffff80000010d09e:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
ffff80000010d0a2:	75 6c                	jne    ffff80000010d110 <.LC27+0x18>
ffff80000010d0a4:	74 2c                	je     ffff80000010d0d2 <.LC25+0x18>
ffff80000010d0a6:	09 00                	or     DWORD PTR [rax],eax

ffff80000010d0a8 <.LC24>:
ffff80000010d0a8:	46 61                	rex.RX (bad) 
ffff80000010d0aa:	75 6c                	jne    ffff80000010d118 <.LC28+0x1>
ffff80000010d0ac:	74 20                	je     ffff80000010d0ce <.LC25+0x14>
ffff80000010d0ae:	69 6e 20 75 73 65 72 	imul   ebp,DWORD PTR [rsi+0x20],0x72657375
ffff80000010d0b5:	28 33                	sub    BYTE PTR [rbx],dh
ffff80000010d0b7:	29 09                	sub    DWORD PTR [rcx],ecx
	...

ffff80000010d0ba <.LC25>:
ffff80000010d0ba:	46 61                	rex.RX (bad) 
ffff80000010d0bc:	75 6c                	jne    ffff80000010d12a <.LC30+0x2>
ffff80000010d0be:	74 20                	je     ffff80000010d0e0 <.LC26+0xa>
ffff80000010d0c0:	69 6e 20 73 75 70 65 	imul   ebp,DWORD PTR [rsi+0x20],0x65707573
ffff80000010d0c7:	72 76                	jb     ffff80000010d13f <.LC30+0x17>
ffff80000010d0c9:	69 73 6f 72 28 30 2c 	imul   esi,DWORD PTR [rbx+0x6f],0x2c302872
ffff80000010d0d0:	31 2c 32             	xor    DWORD PTR [rdx+rsi*1],ebp
ffff80000010d0d3:	29 09                	sub    DWORD PTR [rcx],ecx
	...

ffff80000010d0d6 <.LC26>:
ffff80000010d0d6:	2c 52                	sub    al,0x52
ffff80000010d0d8:	65 73 65             	gs jae ffff80000010d140 <.LC30+0x18>
ffff80000010d0db:	72 76                	jb     ffff80000010d153 <.LC30+0x2b>
ffff80000010d0dd:	65 64 20 42 69       	gs and BYTE PTR fs:[rdx+0x69],al
ffff80000010d0e2:	74 20                	je     ffff80000010d104 <.LC27+0xc>
ffff80000010d0e4:	43 61                	rex.XB (bad) 
ffff80000010d0e6:	75 73                	jne    ffff80000010d15b <.LC30+0x33>
ffff80000010d0e8:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
ffff80000010d0ec:	75 6c                	jne    ffff80000010d15a <.LC30+0x32>
ffff80000010d0ee:	74 09                	je     ffff80000010d0f9 <.LC27+0x1>
	...

ffff80000010d0f8 <.LC27>:
ffff80000010d0f8:	2c 49                	sub    al,0x49
ffff80000010d0fa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010d0fb:	73 74                	jae    ffff80000010d171 <.LC31+0x1>
ffff80000010d0fd:	72 75                	jb     ffff80000010d174 <.LC31+0x4>
ffff80000010d0ff:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
ffff80000010d103:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010d104:	20 66 65             	and    BYTE PTR [rsi+0x65],ah
ffff80000010d107:	74 63                	je     ffff80000010d16c <.LC30+0x44>
ffff80000010d109:	68 20 43 61 75       	push   0x75614320
ffff80000010d10e:	73 65                	jae    ffff80000010d175 <.LC31+0x5>
ffff80000010d110:	20 46 61             	and    BYTE PTR [rsi+0x61],al
ffff80000010d113:	75 6c                	jne    ffff80000010d181 <.LC31+0x11>
ffff80000010d115:	74 00                	je     ffff80000010d117 <.LC28>

ffff80000010d117 <.LC28>:
ffff80000010d117:	0a 00                	or     al,BYTE PTR [rax]

ffff80000010d119 <.LC29>:
ffff80000010d119:	43 52                	rex.XB push r10
ffff80000010d11b:	32 3a                	xor    bh,BYTE PTR [rdx]
ffff80000010d11d:	25 23 30 31 38       	and    eax,0x38313023
ffff80000010d122:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d123:	78 0a                	js     ffff80000010d12f <.LC30+0x7>
ffff80000010d125:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010d128 <.LC30>:
ffff80000010d128:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010d12a:	5f                   	pop    rdi
ffff80000010d12b:	78 38                	js     ffff80000010d165 <.LC30+0x3d>
ffff80000010d12d:	37                   	(bad)  
ffff80000010d12e:	5f                   	pop    rdi
ffff80000010d12f:	46 50                	rex.RX push rax
ffff80000010d131:	55                   	push   rbp
ffff80000010d132:	5f                   	pop    rdi
ffff80000010d133:	65 72 72             	gs jb  ffff80000010d1a8 <.LC31+0x38>
ffff80000010d136:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010d137:	72 28                	jb     ffff80000010d161 <.LC30+0x39>
ffff80000010d139:	31 36                	xor    DWORD PTR [rsi],esi
ffff80000010d13b:	29 2c 45 52 52 4f 52 	sub    DWORD PTR [rax*2+0x524f5252],ebp
ffff80000010d142:	5f                   	pop    rdi
ffff80000010d143:	43                   	rex.XB
ffff80000010d144:	4f                   	rex.WRXB
ffff80000010d145:	44                   	rex.R
ffff80000010d146:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff800038420170 <_end+0x3830d148>
ffff80000010d14d:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d14e:	78 2c                	js     ffff80000010d17c <.LC31+0xc>
ffff80000010d150:	52                   	push   rdx
ffff80000010d151:	53                   	push   rbx
ffff80000010d152:	50                   	push   rax
ffff80000010d153:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003842017c <_end+0x3830d154>
ffff80000010d159:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d15a:	78 2c                	js     ffff80000010d188 <.LC31+0x18>
ffff80000010d15c:	52                   	push   rdx
ffff80000010d15d:	49 50                	rex.WB push r8
ffff80000010d15f:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff800038420188 <_end+0x3830d160>
ffff80000010d165:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d166:	78 0a                	js     ffff80000010d172 <.LC31+0x2>
	...

ffff80000010d170 <.LC31>:
ffff80000010d170:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010d172:	5f                   	pop    rdi
ffff80000010d173:	61                   	(bad)  
ffff80000010d174:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d175:	69 67 6e 6d 65 6e 74 	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
ffff80000010d17c:	5f                   	pop    rdi
ffff80000010d17d:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
ffff80000010d180:	63 6b 28             	movsxd ebp,DWORD PTR [rbx+0x28]
ffff80000010d183:	31 37                	xor    DWORD PTR [rdi],esi
ffff80000010d185:	29 2c 45 52 52 4f 52 	sub    DWORD PTR [rax*2+0x524f5252],ebp
ffff80000010d18c:	5f                   	pop    rdi
ffff80000010d18d:	43                   	rex.XB
ffff80000010d18e:	4f                   	rex.WRXB
ffff80000010d18f:	44                   	rex.R
ffff80000010d190:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff8000384201ba <_end+0x3830d192>
ffff80000010d197:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d198:	78 2c                	js     ffff80000010d1c6 <.LC32+0xe>
ffff80000010d19a:	52                   	push   rdx
ffff80000010d19b:	53                   	push   rbx
ffff80000010d19c:	50                   	push   rax
ffff80000010d19d:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff8000384201c6 <_end+0x3830d19e>
ffff80000010d1a3:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d1a4:	78 2c                	js     ffff80000010d1d2 <.LC32+0x1a>
ffff80000010d1a6:	52                   	push   rdx
ffff80000010d1a7:	49 50                	rex.WB push r8
ffff80000010d1a9:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff8000384201d2 <_end+0x3830d1aa>
ffff80000010d1af:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d1b0:	78 0a                	js     ffff80000010d1bc <.LC32+0x4>
ffff80000010d1b2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d1b4:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010d1b8 <.LC32>:
ffff80000010d1b8:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010d1ba:	5f                   	pop    rdi
ffff80000010d1bb:	6d                   	ins    DWORD PTR es:[rdi],dx
ffff80000010d1bc:	61                   	(bad)  
ffff80000010d1bd:	63 68 69             	movsxd ebp,DWORD PTR [rax+0x69]
ffff80000010d1c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010d1c1:	65 5f                	gs pop rdi
ffff80000010d1c3:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
ffff80000010d1c6:	63 6b 28             	movsxd ebp,DWORD PTR [rbx+0x28]
ffff80000010d1c9:	31 38                	xor    DWORD PTR [rax],edi
ffff80000010d1cb:	29 2c 45 52 52 4f 52 	sub    DWORD PTR [rax*2+0x524f5252],ebp
ffff80000010d1d2:	5f                   	pop    rdi
ffff80000010d1d3:	43                   	rex.XB
ffff80000010d1d4:	4f                   	rex.WRXB
ffff80000010d1d5:	44                   	rex.R
ffff80000010d1d6:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff800038420200 <_end+0x3830d1d8>
ffff80000010d1dd:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d1de:	78 2c                	js     ffff80000010d20c <.LC33+0xc>
ffff80000010d1e0:	52                   	push   rdx
ffff80000010d1e1:	53                   	push   rbx
ffff80000010d1e2:	50                   	push   rax
ffff80000010d1e3:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff80003842020c <_end+0x3830d1e4>
ffff80000010d1e9:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d1ea:	78 2c                	js     ffff80000010d218 <.LC33+0x18>
ffff80000010d1ec:	52                   	push   rdx
ffff80000010d1ed:	49 50                	rex.WB push r8
ffff80000010d1ef:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff800038420218 <_end+0x3830d1f0>
ffff80000010d1f5:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d1f6:	78 0a                	js     ffff80000010d202 <.LC33+0x2>
	...

ffff80000010d200 <.LC33>:
ffff80000010d200:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010d202:	5f                   	pop    rdi
ffff80000010d203:	53                   	push   rbx
ffff80000010d204:	49                   	rex.WB
ffff80000010d205:	4d                   	rex.WRB
ffff80000010d206:	44 5f                	rex.R pop rdi
ffff80000010d208:	65 78 63             	gs js  ffff80000010d26e <.LC34+0x26>
ffff80000010d20b:	65 70 74             	gs jo  ffff80000010d282 <.LC34+0x3a>
ffff80000010d20e:	69 6f 6e 28 31 39 29 	imul   ebp,DWORD PTR [rdi+0x6e],0x29393128
ffff80000010d215:	2c 45                	sub    al,0x45
ffff80000010d217:	52                   	push   rdx
ffff80000010d218:	52                   	push   rdx
ffff80000010d219:	4f 52                	rex.WRXB push r10
ffff80000010d21b:	5f                   	pop    rdi
ffff80000010d21c:	43                   	rex.XB
ffff80000010d21d:	4f                   	rex.WRXB
ffff80000010d21e:	44                   	rex.R
ffff80000010d21f:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff800038420249 <_end+0x3830d221>
ffff80000010d226:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d227:	78 2c                	js     ffff80000010d255 <.LC34+0xd>
ffff80000010d229:	52                   	push   rdx
ffff80000010d22a:	53                   	push   rbx
ffff80000010d22b:	50                   	push   rax
ffff80000010d22c:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff800038420255 <_end+0x3830d22d>
ffff80000010d232:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d233:	78 2c                	js     ffff80000010d261 <.LC34+0x19>
ffff80000010d235:	52                   	push   rdx
ffff80000010d236:	49 50                	rex.WB push r8
ffff80000010d238:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff800038420261 <_end+0x3830d239>
ffff80000010d23e:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d23f:	78 0a                	js     ffff80000010d24b <.LC34+0x3>
ffff80000010d241:	00 00                	add    BYTE PTR [rax],al
ffff80000010d243:	00 00                	add    BYTE PTR [rax],al
ffff80000010d245:	00 00                	add    BYTE PTR [rax],al
	...

ffff80000010d248 <.LC34>:
ffff80000010d248:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
ffff80000010d24a:	5f                   	pop    rdi
ffff80000010d24b:	76 69                	jbe    ffff80000010d2b6 <_erodata+0x22>
ffff80000010d24d:	72 74                	jb     ffff80000010d2c3 <_erodata+0x2f>
ffff80000010d24f:	75 61                	jne    ffff80000010d2b2 <_erodata+0x1e>
ffff80000010d251:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d252:	69 7a 61 74 69 6f 6e 	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
ffff80000010d259:	5f                   	pop    rdi
ffff80000010d25a:	65 78 63             	gs js  ffff80000010d2c0 <_erodata+0x2c>
ffff80000010d25d:	65 70 74             	gs jo  ffff80000010d2d4 <_erodata+0x40>
ffff80000010d260:	69 6f 6e 28 32 30 29 	imul   ebp,DWORD PTR [rdi+0x6e],0x29303228
ffff80000010d267:	2c 45                	sub    al,0x45
ffff80000010d269:	52                   	push   rdx
ffff80000010d26a:	52                   	push   rdx
ffff80000010d26b:	4f 52                	rex.WRXB push r10
ffff80000010d26d:	5f                   	pop    rdi
ffff80000010d26e:	43                   	rex.XB
ffff80000010d26f:	4f                   	rex.WRXB
ffff80000010d270:	44                   	rex.R
ffff80000010d271:	45 3a 25 23 30 31 38 	cmp    r12b,BYTE PTR [rip+0x38313023]        # ffff80003842029b <_end+0x3830d273>
ffff80000010d278:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d279:	78 2c                	js     ffff80000010d2a7 <_erodata+0x13>
ffff80000010d27b:	52                   	push   rdx
ffff80000010d27c:	53                   	push   rbx
ffff80000010d27d:	50                   	push   rax
ffff80000010d27e:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff8000384202a7 <_end+0x3830d27f>
ffff80000010d284:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d285:	78 2c                	js     ffff80000010d2b3 <_erodata+0x1f>
ffff80000010d287:	52                   	push   rdx
ffff80000010d288:	49 50                	rex.WB push r8
ffff80000010d28a:	3a 25 23 30 31 38    	cmp    ah,BYTE PTR [rip+0x38313023]        # ffff8000384202b3 <_end+0x3830d28b>
ffff80000010d290:	6c                   	ins    BYTE PTR es:[rdi],dx
ffff80000010d291:	78 0a                	js     ffff80000010d29d <_erodata+0x9>
	...

Disassembly of section .eh_frame:

ffff80000010d298 <.eh_frame>:
ffff80000010d298:	14 00                	adc    al,0x0
ffff80000010d29a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d29c:	00 00                	add    BYTE PTR [rax],al
ffff80000010d29e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d2a0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
ffff80000010d2a3:	00 01                	add    BYTE PTR [rcx],al
ffff80000010d2a5:	78 10                	js     ffff80000010d2b7 <_erodata+0x23>
ffff80000010d2a7:	01 1b                	add    DWORD PTR [rbx],ebx
ffff80000010d2a9:	0c 07                	or     al,0x7
ffff80000010d2ab:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
ffff80000010d2b1:	00 00                	add    BYTE PTR [rax],al
ffff80000010d2b3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d2b6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d2b8:	48 6d                	rex.W ins DWORD PTR es:[rdi],dx
ffff80000010d2ba:	ff                   	(bad)  
ffff80000010d2bb:	ff b5 00 00 00 00    	push   QWORD PTR [rbp+0x0]
ffff80000010d2c1:	45 0e                	rex.RB (bad) 
ffff80000010d2c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d2c9:	02 ac 0c 07 08 00 00 	add    ch,BYTE PTR [rsp+rcx*1+0x807]
ffff80000010d2d0:	1c 00                	sbb    al,0x0
ffff80000010d2d2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d2d4:	3c 00                	cmp    al,0x0
ffff80000010d2d6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d2d8:	dd 6d ff             	(bad)  [rbp-0x1]
ffff80000010d2db:	ff b5 00 00 00 00    	push   QWORD PTR [rbp+0x0]
ffff80000010d2e1:	45 0e                	rex.RB (bad) 
ffff80000010d2e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d2e9:	02 ac 0c 07 08 00 00 	add    ch,BYTE PTR [rsp+rcx*1+0x807]
ffff80000010d2f0:	1c 00                	sbb    al,0x0
ffff80000010d2f2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d2f4:	5c                   	pop    rsp
ffff80000010d2f5:	00 00                	add    BYTE PTR [rax],al
ffff80000010d2f7:	00 72 6e             	add    BYTE PTR [rdx+0x6e],dh
ffff80000010d2fa:	ff                   	(bad)  
ffff80000010d2fb:	ff b5 00 00 00 00    	push   QWORD PTR [rbp+0x0]
ffff80000010d301:	45 0e                	rex.RB (bad) 
ffff80000010d303:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d309:	02 ac 0c 07 08 00 00 	add    ch,BYTE PTR [rsp+rcx*1+0x807]
ffff80000010d310:	1c 00                	sbb    al,0x0
ffff80000010d312:	00 00                	add    BYTE PTR [rax],al
ffff80000010d314:	7c 00                	jl     ffff80000010d316 <_erodata+0x82>
ffff80000010d316:	00 00                	add    BYTE PTR [rax],al
ffff80000010d318:	07                   	(bad)  
ffff80000010d319:	6f                   	outs   dx,DWORD PTR ds:[rsi]
ffff80000010d31a:	ff                   	(bad)  
ffff80000010d31b:	ff b5 00 00 00 00    	push   QWORD PTR [rbp+0x0]
ffff80000010d321:	45 0e                	rex.RB (bad) 
ffff80000010d323:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d329:	02 ac 0c 07 08 00 00 	add    ch,BYTE PTR [rsp+rcx*1+0x807]
ffff80000010d330:	1c 00                	sbb    al,0x0
ffff80000010d332:	00 00                	add    BYTE PTR [rax],al
ffff80000010d334:	9c                   	pushf  
ffff80000010d335:	00 00                	add    BYTE PTR [rax],al
ffff80000010d337:	00 9c 6f ff ff 35 01 	add    BYTE PTR [rdi+rbp*2+0x135ffff],bl
ffff80000010d33e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d340:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d343:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d349:	03 2c 01             	add    ebp,DWORD PTR [rcx+rax*1]
ffff80000010d34c:	0c 07                	or     al,0x7
ffff80000010d34e:	08 00                	or     BYTE PTR [rax],al
ffff80000010d350:	1c 00                	sbb    al,0x0
ffff80000010d352:	00 00                	add    BYTE PTR [rax],al
ffff80000010d354:	bc 00 00 00 b1       	mov    esp,0xb1000000
ffff80000010d359:	70 ff                	jo     ffff80000010d35a <_erodata+0xc6>
ffff80000010d35b:	ff                   	(bad)  
ffff80000010d35c:	f9                   	stc    
ffff80000010d35d:	02 00                	add    al,BYTE PTR [rax]
ffff80000010d35f:	00 00                	add    BYTE PTR [rax],al
ffff80000010d361:	45 0e                	rex.RB (bad) 
ffff80000010d363:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d369:	47 8f 03             	rex.RXB pop QWORD PTR [r11]
ffff80000010d36c:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
ffff80000010d370:	1c 00                	sbb    al,0x0
ffff80000010d372:	00 00                	add    BYTE PTR [rax],al
ffff80000010d374:	dc 00                	fadd   QWORD PTR [rax]
ffff80000010d376:	00 00                	add    BYTE PTR [rax],al
ffff80000010d378:	8a 73 ff             	mov    dh,BYTE PTR [rbx-0x1]
ffff80000010d37b:	ff                   	(bad)  
ffff80000010d37c:	3e 00 00             	add    BYTE PTR ds:[rax],al
ffff80000010d37f:	00 00                	add    BYTE PTR [rax],al
ffff80000010d381:	45 0e                	rex.RB (bad) 
ffff80000010d383:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d389:	75 0c                	jne    ffff80000010d397 <_erodata+0x103>
ffff80000010d38b:	07                   	(bad)  
ffff80000010d38c:	08 00                	or     BYTE PTR [rax],al
ffff80000010d38e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d390:	1c 00                	sbb    al,0x0
ffff80000010d392:	00 00                	add    BYTE PTR [rax],al
ffff80000010d394:	fc                   	cld    
ffff80000010d395:	00 00                	add    BYTE PTR [rax],al
ffff80000010d397:	00 a8 73 ff ff 61    	add    BYTE PTR [rax+0x61ffff73],ch
ffff80000010d39d:	00 00                	add    BYTE PTR [rax],al
ffff80000010d39f:	00 00                	add    BYTE PTR [rax],al
ffff80000010d3a1:	45 0e                	rex.RB (bad) 
ffff80000010d3a3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d3a9:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
ffff80000010d3ac:	07                   	(bad)  
ffff80000010d3ad:	08 00                	or     BYTE PTR [rax],al
ffff80000010d3af:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d3b2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d3b4:	1c 01                	sbb    al,0x1
ffff80000010d3b6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d3b8:	e9 73 ff ff 5f       	jmp    ffff80006010d330 <_end+0x5fffa308>
ffff80000010d3bd:	00 00                	add    BYTE PTR [rax],al
ffff80000010d3bf:	00 00                	add    BYTE PTR [rax],al
ffff80000010d3c1:	45 0e                	rex.RB (bad) 
ffff80000010d3c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d3c9:	02 56 0c             	add    dl,BYTE PTR [rsi+0xc]
ffff80000010d3cc:	07                   	(bad)  
ffff80000010d3cd:	08 00                	or     BYTE PTR [rax],al
ffff80000010d3cf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d3d2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d3d4:	3c 01                	cmp    al,0x1
ffff80000010d3d6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d3d8:	28 74 ff ff          	sub    BYTE PTR [rdi+rdi*8-0x1],dh
ffff80000010d3dc:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
ffff80000010d3df:	00 00                	add    BYTE PTR [rax],al
ffff80000010d3e1:	45 0e                	rex.RB (bad) 
ffff80000010d3e3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d3e9:	02 43 0c             	add    al,BYTE PTR [rbx+0xc]
ffff80000010d3ec:	07                   	(bad)  
ffff80000010d3ed:	08 00                	or     BYTE PTR [rax],al
ffff80000010d3ef:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d3f2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d3f4:	5c                   	pop    rsp
ffff80000010d3f5:	01 00                	add    DWORD PTR [rax],eax
ffff80000010d3f7:	00 54 74 ff          	add    BYTE PTR [rsp+rsi*2-0x1],dl
ffff80000010d3fb:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
ffff80000010d3fe:	00 00                	add    BYTE PTR [rax],al
ffff80000010d400:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d403:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d409:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
ffff80000010d40d:	08 00                	or     BYTE PTR [rax],al
ffff80000010d40f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d412:	00 00                	add    BYTE PTR [rax],al
ffff80000010d414:	7c 01                	jl     ffff80000010d417 <_erodata+0x183>
ffff80000010d416:	00 00                	add    BYTE PTR [rax],al
ffff80000010d418:	81 74 ff ff 40 00 00 	xor    DWORD PTR [rdi+rdi*8-0x1],0x40
ffff80000010d41f:	00 
ffff80000010d420:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d423:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d429:	77 0c                	ja     ffff80000010d437 <_erodata+0x1a3>
ffff80000010d42b:	07                   	(bad)  
ffff80000010d42c:	08 00                	or     BYTE PTR [rax],al
ffff80000010d42e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d430:	1c 00                	sbb    al,0x0
ffff80000010d432:	00 00                	add    BYTE PTR [rax],al
ffff80000010d434:	9c                   	pushf  
ffff80000010d435:	01 00                	add    DWORD PTR [rax],eax
ffff80000010d437:	00 a1 74 ff ff 42    	add    BYTE PTR [rcx+0x42ffff74],ah
ffff80000010d43d:	00 00                	add    BYTE PTR [rax],al
ffff80000010d43f:	00 00                	add    BYTE PTR [rax],al
ffff80000010d441:	45 0e                	rex.RB (bad) 
ffff80000010d443:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d449:	79 0c                	jns    ffff80000010d457 <_erodata+0x1c3>
ffff80000010d44b:	07                   	(bad)  
ffff80000010d44c:	08 00                	or     BYTE PTR [rax],al
ffff80000010d44e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d450:	1c 00                	sbb    al,0x0
ffff80000010d452:	00 00                	add    BYTE PTR [rax],al
ffff80000010d454:	bc 01 00 00 c3       	mov    esp,0xc3000001
ffff80000010d459:	74 ff                	je     ffff80000010d45a <_erodata+0x1c6>
ffff80000010d45b:	ff 76 00             	push   QWORD PTR [rsi+0x0]
ffff80000010d45e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d460:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d463:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d469:	02 6d 0c             	add    ch,BYTE PTR [rbp+0xc]
ffff80000010d46c:	07                   	(bad)  
ffff80000010d46d:	08 00                	or     BYTE PTR [rax],al
ffff80000010d46f:	00 20                	add    BYTE PTR [rax],ah
ffff80000010d471:	00 00                	add    BYTE PTR [rax],al
ffff80000010d473:	00 dc                	add    ah,bl
ffff80000010d475:	01 00                	add    DWORD PTR [rax],eax
ffff80000010d477:	00 19                	add    BYTE PTR [rcx],bl
ffff80000010d479:	75 ff                	jne    ffff80000010d47a <_erodata+0x1e6>
ffff80000010d47b:	ff 56 00             	call   QWORD PTR [rsi+0x0]
ffff80000010d47e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d480:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d483:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d489:	41 83 03 02          	add    DWORD PTR [r11],0x2
ffff80000010d48d:	4c 0c 07             	rex.WR or al,0x7
ffff80000010d490:	08 00                	or     BYTE PTR [rax],al
ffff80000010d492:	00 00                	add    BYTE PTR [rax],al
ffff80000010d494:	1c 00                	sbb    al,0x0
ffff80000010d496:	00 00                	add    BYTE PTR [rax],al
ffff80000010d498:	00 02                	add    BYTE PTR [rdx],al
ffff80000010d49a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d49c:	4b 75 ff             	rex.WXB jne ffff80000010d49e <_erodata+0x20a>
ffff80000010d49f:	ff 92 00 00 00 00    	call   QWORD PTR [rdx+0x0]
ffff80000010d4a5:	45 0e                	rex.RB (bad) 
ffff80000010d4a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d4ad:	02 89 0c 07 08 00    	add    cl,BYTE PTR [rcx+0x8070c]
ffff80000010d4b3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d4b6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d4b8:	20 02                	and    BYTE PTR [rdx],al
ffff80000010d4ba:	00 00                	add    BYTE PTR [rax],al
ffff80000010d4bc:	bd 75 ff ff 43       	mov    ebp,0x43ffff75
ffff80000010d4c1:	00 00                	add    BYTE PTR [rax],al
ffff80000010d4c3:	00 00                	add    BYTE PTR [rax],al
ffff80000010d4c5:	45 0e                	rex.RB (bad) 
ffff80000010d4c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d4cd:	7a 0c                	jp     ffff80000010d4db <_erodata+0x247>
ffff80000010d4cf:	07                   	(bad)  
ffff80000010d4d0:	08 00                	or     BYTE PTR [rax],al
ffff80000010d4d2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d4d4:	1c 00                	sbb    al,0x0
ffff80000010d4d6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d4d8:	40 02 00             	add    al,BYTE PTR [rax]
ffff80000010d4db:	00 e0                	add    al,ah
ffff80000010d4dd:	75 ff                	jne    ffff80000010d4de <_erodata+0x24a>
ffff80000010d4df:	ff 52 00             	call   QWORD PTR [rdx+0x0]
ffff80000010d4e2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d4e4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d4e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d4ed:	02 49 0c             	add    cl,BYTE PTR [rcx+0xc]
ffff80000010d4f0:	07                   	(bad)  
ffff80000010d4f1:	08 00                	or     BYTE PTR [rax],al
ffff80000010d4f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d4f6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d4f8:	60                   	(bad)  
ffff80000010d4f9:	02 00                	add    al,BYTE PTR [rax]
ffff80000010d4fb:	00 12                	add    BYTE PTR [rdx],dl
ffff80000010d4fd:	76 ff                	jbe    ffff80000010d4fe <_erodata+0x26a>
ffff80000010d4ff:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
ffff80000010d502:	00 00                	add    BYTE PTR [rax],al
ffff80000010d504:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d507:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d50d:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
ffff80000010d510:	07                   	(bad)  
ffff80000010d511:	08 00                	or     BYTE PTR [rax],al
ffff80000010d513:	00 20                	add    BYTE PTR [rax],ah
ffff80000010d515:	00 00                	add    BYTE PTR [rax],al
ffff80000010d517:	00 80 02 00 00 41    	add    BYTE PTR [rax+0x41000002],al
ffff80000010d51d:	76 ff                	jbe    ffff80000010d51e <_erodata+0x28a>
ffff80000010d51f:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
ffff80000010d523:	00 00                	add    BYTE PTR [rax],al
ffff80000010d525:	45 0e                	rex.RB (bad) 
ffff80000010d527:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d52d:	41 83 03 02          	add    DWORD PTR [r11],0x2
ffff80000010d531:	4a 0c 07             	rex.WX or al,0x7
ffff80000010d534:	08 00                	or     BYTE PTR [rax],al
ffff80000010d536:	00 00                	add    BYTE PTR [rax],al
ffff80000010d538:	20 00                	and    BYTE PTR [rax],al
ffff80000010d53a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d53c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
ffff80000010d53d:	02 00                	add    al,BYTE PTR [rax]
ffff80000010d53f:	00 71 76             	add    BYTE PTR [rcx+0x76],dh
ffff80000010d542:	ff                   	(bad)  
ffff80000010d543:	ff 61 00             	jmp    QWORD PTR [rcx+0x0]
ffff80000010d546:	00 00                	add    BYTE PTR [rax],al
ffff80000010d548:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d54b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d551:	41 83 03 02          	add    DWORD PTR [r11],0x2
ffff80000010d555:	57                   	push   rdi
ffff80000010d556:	0c 07                	or     al,0x7
ffff80000010d558:	08 00                	or     BYTE PTR [rax],al
ffff80000010d55a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d55c:	1c 00                	sbb    al,0x0
ffff80000010d55e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d560:	c8 02 00 00          	enter  0x2,0x0
ffff80000010d564:	ae                   	scas   al,BYTE PTR es:[rdi]
ffff80000010d565:	76 ff                	jbe    ffff80000010d566 <_erodata+0x2d2>
ffff80000010d567:	ff 48 00             	dec    DWORD PTR [rax+0x0]
ffff80000010d56a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d56c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d56f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d575:	41 83 03 7e          	add    DWORD PTR [r11],0x7e
ffff80000010d579:	0c 07                	or     al,0x7
ffff80000010d57b:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
ffff80000010d57e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d580:	e8 02 00 00 d6       	call   ffff7fffd610d587 <OLDSS+0xffff7fffd610d4cf>
ffff80000010d585:	76 ff                	jbe    ffff80000010d586 <_erodata+0x2f2>
ffff80000010d587:	ff 45 00             	inc    DWORD PTR [rbp+0x0]
ffff80000010d58a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d58c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d58f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d595:	7c 0c                	jl     ffff80000010d5a3 <_erodata+0x30f>
ffff80000010d597:	07                   	(bad)  
ffff80000010d598:	08 00                	or     BYTE PTR [rax],al
ffff80000010d59a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d59c:	1c 00                	sbb    al,0x0
ffff80000010d59e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d5a0:	08 03                	or     BYTE PTR [rbx],al
ffff80000010d5a2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d5a4:	fb                   	sti    
ffff80000010d5a5:	76 ff                	jbe    ffff80000010d5a6 <_erodata+0x312>
ffff80000010d5a7:	ff 45 00             	inc    DWORD PTR [rbp+0x0]
ffff80000010d5aa:	00 00                	add    BYTE PTR [rax],al
ffff80000010d5ac:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d5af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d5b5:	7c 0c                	jl     ffff80000010d5c3 <_erodata+0x32f>
ffff80000010d5b7:	07                   	(bad)  
ffff80000010d5b8:	08 00                	or     BYTE PTR [rax],al
ffff80000010d5ba:	00 00                	add    BYTE PTR [rax],al
ffff80000010d5bc:	1c 00                	sbb    al,0x0
ffff80000010d5be:	00 00                	add    BYTE PTR [rax],al
ffff80000010d5c0:	28 03                	sub    BYTE PTR [rbx],al
ffff80000010d5c2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d5c4:	20 77 ff             	and    BYTE PTR [rdi-0x1],dh
ffff80000010d5c7:	ff 48 00             	dec    DWORD PTR [rax+0x0]
ffff80000010d5ca:	00 00                	add    BYTE PTR [rax],al
ffff80000010d5cc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d5cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d5d5:	7f 0c                	jg     ffff80000010d5e3 <_erodata+0x34f>
ffff80000010d5d7:	07                   	(bad)  
ffff80000010d5d8:	08 00                	or     BYTE PTR [rax],al
ffff80000010d5da:	00 00                	add    BYTE PTR [rax],al
ffff80000010d5dc:	1c 00                	sbb    al,0x0
ffff80000010d5de:	00 00                	add    BYTE PTR [rax],al
ffff80000010d5e0:	48 03 00             	add    rax,QWORD PTR [rax]
ffff80000010d5e3:	00 48 77             	add    BYTE PTR [rax+0x77],cl
ffff80000010d5e6:	ff                   	(bad)  
ffff80000010d5e7:	ff                   	(bad)  
ffff80000010d5e8:	3d 00 00 00 00       	cmp    eax,0x0
ffff80000010d5ed:	45 0e                	rex.RB (bad) 
ffff80000010d5ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d5f5:	74 0c                	je     ffff80000010d603 <_erodata+0x36f>
ffff80000010d5f7:	07                   	(bad)  
ffff80000010d5f8:	08 00                	or     BYTE PTR [rax],al
ffff80000010d5fa:	00 00                	add    BYTE PTR [rax],al
ffff80000010d5fc:	1c 00                	sbb    al,0x0
ffff80000010d5fe:	00 00                	add    BYTE PTR [rax],al
ffff80000010d600:	68 03 00 00 65       	push   0x65000003
ffff80000010d605:	77 ff                	ja     ffff80000010d606 <_erodata+0x372>
ffff80000010d607:	ff                   	(bad)  
ffff80000010d608:	3f                   	(bad)  
ffff80000010d609:	00 00                	add    BYTE PTR [rax],al
ffff80000010d60b:	00 00                	add    BYTE PTR [rax],al
ffff80000010d60d:	45 0e                	rex.RB (bad) 
ffff80000010d60f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d615:	76 0c                	jbe    ffff80000010d623 <_erodata+0x38f>
ffff80000010d617:	07                   	(bad)  
ffff80000010d618:	08 00                	or     BYTE PTR [rax],al
ffff80000010d61a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d61c:	1c 00                	sbb    al,0x0
ffff80000010d61e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d620:	88 03                	mov    BYTE PTR [rbx],al
ffff80000010d622:	00 00                	add    BYTE PTR [rax],al
ffff80000010d624:	84 77 ff             	test   BYTE PTR [rdi-0x1],dh
ffff80000010d627:	ff                   	(bad)  
ffff80000010d628:	3c 00                	cmp    al,0x0
ffff80000010d62a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d62c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d62f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d635:	73 0c                	jae    ffff80000010d643 <_erodata+0x3af>
ffff80000010d637:	07                   	(bad)  
ffff80000010d638:	08 00                	or     BYTE PTR [rax],al
ffff80000010d63a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d63c:	1c 00                	sbb    al,0x0
ffff80000010d63e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d640:	a8 03                	test   al,0x3
ffff80000010d642:	00 00                	add    BYTE PTR [rax],al
ffff80000010d644:	a0 77 ff ff 37 00 00 	movabs al,ds:0x37ffff77
ffff80000010d64b:	00 00 
ffff80000010d64d:	45 0e                	rex.RB (bad) 
ffff80000010d64f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d655:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010d656:	0c 07                	or     al,0x7
ffff80000010d658:	08 00                	or     BYTE PTR [rax],al
ffff80000010d65a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d65c:	1c 00                	sbb    al,0x0
ffff80000010d65e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d660:	c8 03 00 00          	enter  0x3,0x0
ffff80000010d664:	b7 77                	mov    bh,0x77
ffff80000010d666:	ff                   	(bad)  
ffff80000010d667:	ff 53 00             	call   QWORD PTR [rbx+0x0]
ffff80000010d66a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d66c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d66f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d675:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
ffff80000010d678:	07                   	(bad)  
ffff80000010d679:	08 00                	or     BYTE PTR [rax],al
ffff80000010d67b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d67e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d680:	e8 03 00 00 ea       	call   ffff7fffea10d688 <OLDSS+0xffff7fffea10d5d0>
ffff80000010d685:	77 ff                	ja     ffff80000010d686 <_erodata+0x3f2>
ffff80000010d687:	ff 42 00             	inc    DWORD PTR [rdx+0x0]
ffff80000010d68a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d68c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d68f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d695:	79 0c                	jns    ffff80000010d6a3 <_erodata+0x40f>
ffff80000010d697:	07                   	(bad)  
ffff80000010d698:	08 00                	or     BYTE PTR [rax],al
ffff80000010d69a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d69c:	1c 00                	sbb    al,0x0
ffff80000010d69e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d6a0:	08 04 00             	or     BYTE PTR [rax+rax*1],al
ffff80000010d6a3:	00 0c 78             	add    BYTE PTR [rax+rdi*2],cl
ffff80000010d6a6:	ff                   	(bad)  
ffff80000010d6a7:	ff 10                	call   QWORD PTR [rax]
ffff80000010d6a9:	01 00                	add    DWORD PTR [rax],eax
ffff80000010d6ab:	00 00                	add    BYTE PTR [rax],al
ffff80000010d6ad:	45 0e                	rex.RB (bad) 
ffff80000010d6af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d6b5:	03 07                	add    eax,DWORD PTR [rdi]
ffff80000010d6b7:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
ffff80000010d6ba:	08 00                	or     BYTE PTR [rax],al
ffff80000010d6bc:	1c 00                	sbb    al,0x0
ffff80000010d6be:	00 00                	add    BYTE PTR [rax],al
ffff80000010d6c0:	28 04 00             	sub    BYTE PTR [rax+rax*1],al
ffff80000010d6c3:	00 fc                	add    ah,bh
ffff80000010d6c5:	78 ff                	js     ffff80000010d6c6 <_erodata+0x432>
ffff80000010d6c7:	ff                   	(bad)  
ffff80000010d6c8:	7c 00                	jl     ffff80000010d6ca <_erodata+0x436>
ffff80000010d6ca:	00 00                	add    BYTE PTR [rax],al
ffff80000010d6cc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d6cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d6d5:	02 73 0c             	add    dh,BYTE PTR [rbx+0xc]
ffff80000010d6d8:	07                   	(bad)  
ffff80000010d6d9:	08 00                	or     BYTE PTR [rax],al
ffff80000010d6db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d6de:	00 00                	add    BYTE PTR [rax],al
ffff80000010d6e0:	48 04 00             	rex.W add al,0x0
ffff80000010d6e3:	00 58 79             	add    BYTE PTR [rax+0x79],bl
ffff80000010d6e6:	ff                   	(bad)  
ffff80000010d6e7:	ff 9a 02 00 00 00    	call   FWORD PTR [rdx+0x2]
ffff80000010d6ed:	45 0e                	rex.RB (bad) 
ffff80000010d6ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d6f5:	03 91 02 0c 07 08    	add    edx,DWORD PTR [rcx+0x8070c02]
ffff80000010d6fb:	00 20                	add    BYTE PTR [rax],ah
ffff80000010d6fd:	00 00                	add    BYTE PTR [rax],al
ffff80000010d6ff:	00 68 04             	add    BYTE PTR [rax+0x4],ch
ffff80000010d702:	00 00                	add    BYTE PTR [rax],al
ffff80000010d704:	d2 7b ff             	sar    BYTE PTR [rbx-0x1],cl
ffff80000010d707:	ff 5b 09             	call   FWORD PTR [rbx+0x9]
ffff80000010d70a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d70c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d70f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d715:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
ffff80000010d719:	4d 09 0c 07          	or     QWORD PTR [r15+rax*1],r9
ffff80000010d71d:	08 00                	or     BYTE PTR [rax],al
ffff80000010d71f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
ffff80000010d722:	00 00                	add    BYTE PTR [rax],al
ffff80000010d724:	8c 04 00             	mov    WORD PTR [rax+rax*1],es
ffff80000010d727:	00 09                	add    BYTE PTR [rcx],cl
ffff80000010d729:	85 ff                	test   edi,edi
ffff80000010d72b:	ff a8 05 00 00 00    	jmp    FWORD PTR [rax+0x5]
ffff80000010d731:	45 0e                	rex.RB (bad) 
ffff80000010d733:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d739:	48 83 03 03          	add    QWORD PTR [rbx],0x3
ffff80000010d73d:	97                   	xchg   edi,eax
ffff80000010d73e:	05 0c 07 08 00       	add    eax,0x8070c
ffff80000010d743:	00 00                	add    BYTE PTR [rax],al
ffff80000010d745:	00 00                	add    BYTE PTR [rax],al
ffff80000010d747:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d74a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d74c:	b4 04                	mov    ah,0x4
ffff80000010d74e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d750:	89 8a ff ff b5 00    	mov    DWORD PTR [rdx+0xb5ffff],ecx
ffff80000010d756:	00 00                	add    BYTE PTR [rax],al
ffff80000010d758:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d75b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d761:	02 ac 0c 07 08 00 00 	add    ch,BYTE PTR [rsp+rcx*1+0x807]
ffff80000010d768:	1c 00                	sbb    al,0x0
ffff80000010d76a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d76c:	d4                   	(bad)  
ffff80000010d76d:	04 00                	add    al,0x0
ffff80000010d76f:	00 1e                	add    BYTE PTR [rsi],bl
ffff80000010d771:	8b ff                	mov    edi,edi
ffff80000010d773:	ff b5 00 00 00 00    	push   QWORD PTR [rbp+0x0]
ffff80000010d779:	45 0e                	rex.RB (bad) 
ffff80000010d77b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d781:	02 ac 0c 07 08 00 00 	add    ch,BYTE PTR [rsp+rcx*1+0x807]
ffff80000010d788:	1c 00                	sbb    al,0x0
ffff80000010d78a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d78c:	f4                   	hlt    
ffff80000010d78d:	04 00                	add    al,0x0
ffff80000010d78f:	00 b3 8b ff ff b5    	add    BYTE PTR [rbx-0x4a000075],dh
ffff80000010d795:	00 00                	add    BYTE PTR [rax],al
ffff80000010d797:	00 00                	add    BYTE PTR [rax],al
ffff80000010d799:	45 0e                	rex.RB (bad) 
ffff80000010d79b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d7a1:	02 ac 0c 07 08 00 00 	add    ch,BYTE PTR [rsp+rcx*1+0x807]
ffff80000010d7a8:	1c 00                	sbb    al,0x0
ffff80000010d7aa:	00 00                	add    BYTE PTR [rax],al
ffff80000010d7ac:	14 05                	adc    al,0x5
ffff80000010d7ae:	00 00                	add    BYTE PTR [rax],al
ffff80000010d7b0:	48 8c ff             	mov    rdi,?
ffff80000010d7b3:	ff b5 00 00 00 00    	push   QWORD PTR [rbp+0x0]
ffff80000010d7b9:	45 0e                	rex.RB (bad) 
ffff80000010d7bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d7c1:	02 ac 0c 07 08 00 00 	add    ch,BYTE PTR [rsp+rcx*1+0x807]
ffff80000010d7c8:	1c 00                	sbb    al,0x0
ffff80000010d7ca:	00 00                	add    BYTE PTR [rax],al
ffff80000010d7cc:	34 05                	xor    al,0x5
ffff80000010d7ce:	00 00                	add    BYTE PTR [rax],al
ffff80000010d7d0:	dd 8c ff ff 35 01 00 	fisttp QWORD PTR [rdi+rdi*8+0x135ff]
ffff80000010d7d7:	00 00                	add    BYTE PTR [rax],al
ffff80000010d7d9:	45 0e                	rex.RB (bad) 
ffff80000010d7db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d7e1:	03 2c 01             	add    ebp,DWORD PTR [rcx+rax*1]
ffff80000010d7e4:	0c 07                	or     al,0x7
ffff80000010d7e6:	08 00                	or     BYTE PTR [rax],al
ffff80000010d7e8:	1c 00                	sbb    al,0x0
ffff80000010d7ea:	00 00                	add    BYTE PTR [rax],al
ffff80000010d7ec:	54                   	push   rsp
ffff80000010d7ed:	05 00 00 f2 8d       	add    eax,0x8df20000
ffff80000010d7f2:	ff                   	(bad)  
ffff80000010d7f3:	ff                   	(bad)  
ffff80000010d7f4:	3e 00 00             	add    BYTE PTR ds:[rax],al
ffff80000010d7f7:	00 00                	add    BYTE PTR [rax],al
ffff80000010d7f9:	45 0e                	rex.RB (bad) 
ffff80000010d7fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d801:	75 0c                	jne    ffff80000010d80f <_erodata+0x57b>
ffff80000010d803:	07                   	(bad)  
ffff80000010d804:	08 00                	or     BYTE PTR [rax],al
ffff80000010d806:	00 00                	add    BYTE PTR [rax],al
ffff80000010d808:	1c 00                	sbb    al,0x0
ffff80000010d80a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d80c:	74 05                	je     ffff80000010d813 <_erodata+0x57f>
ffff80000010d80e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d810:	10 8e ff ff 61 00    	adc    BYTE PTR [rsi+0x61ffff],cl
ffff80000010d816:	00 00                	add    BYTE PTR [rax],al
ffff80000010d818:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d81b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d821:	02 58 0c             	add    bl,BYTE PTR [rax+0xc]
ffff80000010d824:	07                   	(bad)  
ffff80000010d825:	08 00                	or     BYTE PTR [rax],al
ffff80000010d827:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d82a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d82c:	94                   	xchg   esp,eax
ffff80000010d82d:	05 00 00 51 8e       	add    eax,0x8e510000
ffff80000010d832:	ff                   	(bad)  
ffff80000010d833:	ff 5f 00             	call   FWORD PTR [rdi+0x0]
ffff80000010d836:	00 00                	add    BYTE PTR [rax],al
ffff80000010d838:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d83b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d841:	02 56 0c             	add    dl,BYTE PTR [rsi+0xc]
ffff80000010d844:	07                   	(bad)  
ffff80000010d845:	08 00                	or     BYTE PTR [rax],al
ffff80000010d847:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d84a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d84c:	b4 05                	mov    ah,0x5
ffff80000010d84e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d850:	90                   	nop
ffff80000010d851:	8e ff                	mov    ?,edi
ffff80000010d853:	ff 4c 00 00          	dec    DWORD PTR [rax+rax*1+0x0]
ffff80000010d857:	00 00                	add    BYTE PTR [rax],al
ffff80000010d859:	45 0e                	rex.RB (bad) 
ffff80000010d85b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d861:	02 43 0c             	add    al,BYTE PTR [rbx+0xc]
ffff80000010d864:	07                   	(bad)  
ffff80000010d865:	08 00                	or     BYTE PTR [rax],al
ffff80000010d867:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d86a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d86c:	d4                   	(bad)  
ffff80000010d86d:	05 00 00 bc 8e       	add    eax,0x8ebc0000
ffff80000010d872:	ff                   	(bad)  
ffff80000010d873:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
ffff80000010d876:	00 00                	add    BYTE PTR [rax],al
ffff80000010d878:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d87b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d881:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
ffff80000010d885:	08 00                	or     BYTE PTR [rax],al
ffff80000010d887:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d88a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d88c:	f4                   	hlt    
ffff80000010d88d:	05 00 00 e9 8e       	add    eax,0x8ee90000
ffff80000010d892:	ff                   	(bad)  
ffff80000010d893:	ff 40 00             	inc    DWORD PTR [rax+0x0]
ffff80000010d896:	00 00                	add    BYTE PTR [rax],al
ffff80000010d898:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d89b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d8a1:	77 0c                	ja     ffff80000010d8af <_erodata+0x61b>
ffff80000010d8a3:	07                   	(bad)  
ffff80000010d8a4:	08 00                	or     BYTE PTR [rax],al
ffff80000010d8a6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d8a8:	1c 00                	sbb    al,0x0
ffff80000010d8aa:	00 00                	add    BYTE PTR [rax],al
ffff80000010d8ac:	14 06                	adc    al,0x6
ffff80000010d8ae:	00 00                	add    BYTE PTR [rax],al
ffff80000010d8b0:	09 8f ff ff 42 00    	or     DWORD PTR [rdi+0x42ffff],ecx
ffff80000010d8b6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d8b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d8bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d8c1:	79 0c                	jns    ffff80000010d8cf <_erodata+0x63b>
ffff80000010d8c3:	07                   	(bad)  
ffff80000010d8c4:	08 00                	or     BYTE PTR [rax],al
ffff80000010d8c6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d8c8:	1c 00                	sbb    al,0x0
ffff80000010d8ca:	00 00                	add    BYTE PTR [rax],al
ffff80000010d8cc:	34 06                	xor    al,0x6
ffff80000010d8ce:	00 00                	add    BYTE PTR [rax],al
ffff80000010d8d0:	2b 8f ff ff 76 00    	sub    ecx,DWORD PTR [rdi+0x76ffff]
ffff80000010d8d6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d8d8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d8db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d8e1:	02 6d 0c             	add    ch,BYTE PTR [rbp+0xc]
ffff80000010d8e4:	07                   	(bad)  
ffff80000010d8e5:	08 00                	or     BYTE PTR [rax],al
ffff80000010d8e7:	00 20                	add    BYTE PTR [rax],ah
ffff80000010d8e9:	00 00                	add    BYTE PTR [rax],al
ffff80000010d8eb:	00 54 06 00          	add    BYTE PTR [rsi+rax*1+0x0],dl
ffff80000010d8ef:	00 81 8f ff ff 56    	add    BYTE PTR [rcx+0x56ffff8f],al
ffff80000010d8f5:	00 00                	add    BYTE PTR [rax],al
ffff80000010d8f7:	00 00                	add    BYTE PTR [rax],al
ffff80000010d8f9:	45 0e                	rex.RB (bad) 
ffff80000010d8fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d901:	41 83 03 02          	add    DWORD PTR [r11],0x2
ffff80000010d905:	4c 0c 07             	rex.WR or al,0x7
ffff80000010d908:	08 00                	or     BYTE PTR [rax],al
ffff80000010d90a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d90c:	1c 00                	sbb    al,0x0
ffff80000010d90e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d910:	78 06                	js     ffff80000010d918 <_erodata+0x684>
ffff80000010d912:	00 00                	add    BYTE PTR [rax],al
ffff80000010d914:	b3 8f                	mov    bl,0x8f
ffff80000010d916:	ff                   	(bad)  
ffff80000010d917:	ff 92 00 00 00 00    	call   QWORD PTR [rdx+0x0]
ffff80000010d91d:	45 0e                	rex.RB (bad) 
ffff80000010d91f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d925:	02 89 0c 07 08 00    	add    cl,BYTE PTR [rcx+0x8070c]
ffff80000010d92b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d92e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d930:	98                   	cwde   
ffff80000010d931:	06                   	(bad)  
ffff80000010d932:	00 00                	add    BYTE PTR [rax],al
ffff80000010d934:	25 90 ff ff 43       	and    eax,0x43ffff90
ffff80000010d939:	00 00                	add    BYTE PTR [rax],al
ffff80000010d93b:	00 00                	add    BYTE PTR [rax],al
ffff80000010d93d:	45 0e                	rex.RB (bad) 
ffff80000010d93f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d945:	7a 0c                	jp     ffff80000010d953 <_erodata+0x6bf>
ffff80000010d947:	07                   	(bad)  
ffff80000010d948:	08 00                	or     BYTE PTR [rax],al
ffff80000010d94a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d94c:	1c 00                	sbb    al,0x0
ffff80000010d94e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d950:	b8 06 00 00 48       	mov    eax,0x48000006
ffff80000010d955:	90                   	nop
ffff80000010d956:	ff                   	(bad)  
ffff80000010d957:	ff 52 00             	call   QWORD PTR [rdx+0x0]
ffff80000010d95a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d95c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d95f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d965:	02 49 0c             	add    cl,BYTE PTR [rcx+0xc]
ffff80000010d968:	07                   	(bad)  
ffff80000010d969:	08 00                	or     BYTE PTR [rax],al
ffff80000010d96b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010d96e:	00 00                	add    BYTE PTR [rax],al
ffff80000010d970:	d8 06                	fadd   DWORD PTR [rsi]
ffff80000010d972:	00 00                	add    BYTE PTR [rax],al
ffff80000010d974:	7a 90                	jp     ffff80000010d906 <_erodata+0x672>
ffff80000010d976:	ff                   	(bad)  
ffff80000010d977:	ff 4f 00             	dec    DWORD PTR [rdi+0x0]
ffff80000010d97a:	00 00                	add    BYTE PTR [rax],al
ffff80000010d97c:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d97f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d985:	02 46 0c             	add    al,BYTE PTR [rsi+0xc]
ffff80000010d988:	07                   	(bad)  
ffff80000010d989:	08 00                	or     BYTE PTR [rax],al
ffff80000010d98b:	00 20                	add    BYTE PTR [rax],ah
ffff80000010d98d:	00 00                	add    BYTE PTR [rax],al
ffff80000010d98f:	00 f8                	add    al,bh
ffff80000010d991:	06                   	(bad)  
ffff80000010d992:	00 00                	add    BYTE PTR [rax],al
ffff80000010d994:	a9 90 ff ff 54       	test   eax,0x54ffff90
ffff80000010d999:	00 00                	add    BYTE PTR [rax],al
ffff80000010d99b:	00 00                	add    BYTE PTR [rax],al
ffff80000010d99d:	45 0e                	rex.RB (bad) 
ffff80000010d99f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d9a5:	41 83 03 02          	add    DWORD PTR [r11],0x2
ffff80000010d9a9:	4a 0c 07             	rex.WX or al,0x7
ffff80000010d9ac:	08 00                	or     BYTE PTR [rax],al
ffff80000010d9ae:	00 00                	add    BYTE PTR [rax],al
ffff80000010d9b0:	20 00                	and    BYTE PTR [rax],al
ffff80000010d9b2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d9b4:	1c 07                	sbb    al,0x7
ffff80000010d9b6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d9b8:	d9 90 ff ff 61 00    	fst    DWORD PTR [rax+0x61ffff]
ffff80000010d9be:	00 00                	add    BYTE PTR [rax],al
ffff80000010d9c0:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d9c3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d9c9:	41 83 03 02          	add    DWORD PTR [r11],0x2
ffff80000010d9cd:	57                   	push   rdi
ffff80000010d9ce:	0c 07                	or     al,0x7
ffff80000010d9d0:	08 00                	or     BYTE PTR [rax],al
ffff80000010d9d2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d9d4:	1c 00                	sbb    al,0x0
ffff80000010d9d6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d9d8:	40 07                	rex (bad) 
ffff80000010d9da:	00 00                	add    BYTE PTR [rax],al
ffff80000010d9dc:	16                   	(bad)  
ffff80000010d9dd:	91                   	xchg   ecx,eax
ffff80000010d9de:	ff                   	(bad)  
ffff80000010d9df:	ff 48 00             	dec    DWORD PTR [rax+0x0]
ffff80000010d9e2:	00 00                	add    BYTE PTR [rax],al
ffff80000010d9e4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010d9e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010d9ed:	41 83 03 7e          	add    DWORD PTR [r11],0x7e
ffff80000010d9f1:	0c 07                	or     al,0x7
ffff80000010d9f3:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
ffff80000010d9f6:	00 00                	add    BYTE PTR [rax],al
ffff80000010d9f8:	60                   	(bad)  
ffff80000010d9f9:	07                   	(bad)  
ffff80000010d9fa:	00 00                	add    BYTE PTR [rax],al
ffff80000010d9fc:	3e 91                	ds xchg ecx,eax
ffff80000010d9fe:	ff                   	(bad)  
ffff80000010d9ff:	ff 45 00             	inc    DWORD PTR [rbp+0x0]
ffff80000010da02:	00 00                	add    BYTE PTR [rax],al
ffff80000010da04:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010da07:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010da0d:	7c 0c                	jl     ffff80000010da1b <_erodata+0x787>
ffff80000010da0f:	07                   	(bad)  
ffff80000010da10:	08 00                	or     BYTE PTR [rax],al
ffff80000010da12:	00 00                	add    BYTE PTR [rax],al
ffff80000010da14:	1c 00                	sbb    al,0x0
ffff80000010da16:	00 00                	add    BYTE PTR [rax],al
ffff80000010da18:	80 07 00             	add    BYTE PTR [rdi],0x0
ffff80000010da1b:	00 63 91             	add    BYTE PTR [rbx-0x6f],ah
ffff80000010da1e:	ff                   	(bad)  
ffff80000010da1f:	ff 45 00             	inc    DWORD PTR [rbp+0x0]
ffff80000010da22:	00 00                	add    BYTE PTR [rax],al
ffff80000010da24:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010da27:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010da2d:	7c 0c                	jl     ffff80000010da3b <_erodata+0x7a7>
ffff80000010da2f:	07                   	(bad)  
ffff80000010da30:	08 00                	or     BYTE PTR [rax],al
ffff80000010da32:	00 00                	add    BYTE PTR [rax],al
ffff80000010da34:	1c 00                	sbb    al,0x0
ffff80000010da36:	00 00                	add    BYTE PTR [rax],al
ffff80000010da38:	a0 07 00 00 88 91 ff 	movabs al,ds:0x48ffff9188000007
ffff80000010da3f:	ff 48 
ffff80000010da41:	00 00                	add    BYTE PTR [rax],al
ffff80000010da43:	00 00                	add    BYTE PTR [rax],al
ffff80000010da45:	45 0e                	rex.RB (bad) 
ffff80000010da47:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010da4d:	7f 0c                	jg     ffff80000010da5b <_erodata+0x7c7>
ffff80000010da4f:	07                   	(bad)  
ffff80000010da50:	08 00                	or     BYTE PTR [rax],al
ffff80000010da52:	00 00                	add    BYTE PTR [rax],al
ffff80000010da54:	1c 00                	sbb    al,0x0
ffff80000010da56:	00 00                	add    BYTE PTR [rax],al
ffff80000010da58:	c0 07 00             	rol    BYTE PTR [rdi],0x0
ffff80000010da5b:	00 b0 91 ff ff 3d    	add    BYTE PTR [rax+0x3dffff91],dh
ffff80000010da61:	00 00                	add    BYTE PTR [rax],al
ffff80000010da63:	00 00                	add    BYTE PTR [rax],al
ffff80000010da65:	45 0e                	rex.RB (bad) 
ffff80000010da67:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010da6d:	74 0c                	je     ffff80000010da7b <_erodata+0x7e7>
ffff80000010da6f:	07                   	(bad)  
ffff80000010da70:	08 00                	or     BYTE PTR [rax],al
ffff80000010da72:	00 00                	add    BYTE PTR [rax],al
ffff80000010da74:	1c 00                	sbb    al,0x0
ffff80000010da76:	00 00                	add    BYTE PTR [rax],al
ffff80000010da78:	e0 07                	loopne ffff80000010da81 <_erodata+0x7ed>
ffff80000010da7a:	00 00                	add    BYTE PTR [rax],al
ffff80000010da7c:	cd 91                	int    0x91
ffff80000010da7e:	ff                   	(bad)  
ffff80000010da7f:	ff                   	(bad)  
ffff80000010da80:	3f                   	(bad)  
ffff80000010da81:	00 00                	add    BYTE PTR [rax],al
ffff80000010da83:	00 00                	add    BYTE PTR [rax],al
ffff80000010da85:	45 0e                	rex.RB (bad) 
ffff80000010da87:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010da8d:	76 0c                	jbe    ffff80000010da9b <_erodata+0x807>
ffff80000010da8f:	07                   	(bad)  
ffff80000010da90:	08 00                	or     BYTE PTR [rax],al
ffff80000010da92:	00 00                	add    BYTE PTR [rax],al
ffff80000010da94:	1c 00                	sbb    al,0x0
ffff80000010da96:	00 00                	add    BYTE PTR [rax],al
ffff80000010da98:	00 08                	add    BYTE PTR [rax],cl
ffff80000010da9a:	00 00                	add    BYTE PTR [rax],al
ffff80000010da9c:	ec                   	in     al,dx
ffff80000010da9d:	91                   	xchg   ecx,eax
ffff80000010da9e:	ff                   	(bad)  
ffff80000010da9f:	ff                   	(bad)  
ffff80000010daa0:	3c 00                	cmp    al,0x0
ffff80000010daa2:	00 00                	add    BYTE PTR [rax],al
ffff80000010daa4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010daa7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010daad:	73 0c                	jae    ffff80000010dabb <_erodata+0x827>
ffff80000010daaf:	07                   	(bad)  
ffff80000010dab0:	08 00                	or     BYTE PTR [rax],al
ffff80000010dab2:	00 00                	add    BYTE PTR [rax],al
ffff80000010dab4:	1c 00                	sbb    al,0x0
ffff80000010dab6:	00 00                	add    BYTE PTR [rax],al
ffff80000010dab8:	20 08                	and    BYTE PTR [rax],cl
ffff80000010daba:	00 00                	add    BYTE PTR [rax],al
ffff80000010dabc:	08 92 ff ff 37 00    	or     BYTE PTR [rdx+0x37ffff],dl
ffff80000010dac2:	00 00                	add    BYTE PTR [rax],al
ffff80000010dac4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010dac7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dacd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
ffff80000010dace:	0c 07                	or     al,0x7
ffff80000010dad0:	08 00                	or     BYTE PTR [rax],al
ffff80000010dad2:	00 00                	add    BYTE PTR [rax],al
ffff80000010dad4:	1c 00                	sbb    al,0x0
ffff80000010dad6:	00 00                	add    BYTE PTR [rax],al
ffff80000010dad8:	40 08 00             	or     BYTE PTR [rax],al
ffff80000010dadb:	00 1f                	add    BYTE PTR [rdi],bl
ffff80000010dadd:	92                   	xchg   edx,eax
ffff80000010dade:	ff                   	(bad)  
ffff80000010dadf:	ff 53 00             	call   QWORD PTR [rbx+0x0]
ffff80000010dae2:	00 00                	add    BYTE PTR [rax],al
ffff80000010dae4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010dae7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010daed:	02 4a 0c             	add    cl,BYTE PTR [rdx+0xc]
ffff80000010daf0:	07                   	(bad)  
ffff80000010daf1:	08 00                	or     BYTE PTR [rax],al
ffff80000010daf3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
ffff80000010daf6:	00 00                	add    BYTE PTR [rax],al
ffff80000010daf8:	60                   	(bad)  
ffff80000010daf9:	08 00                	or     BYTE PTR [rax],al
ffff80000010dafb:	00 52 92             	add    BYTE PTR [rdx-0x6e],dl
ffff80000010dafe:	ff                   	(bad)  
ffff80000010daff:	ff 42 00             	inc    DWORD PTR [rdx+0x0]
ffff80000010db02:	00 00                	add    BYTE PTR [rax],al
ffff80000010db04:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010db07:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010db0d:	79 0c                	jns    ffff80000010db1b <_erodata+0x887>
ffff80000010db0f:	07                   	(bad)  
ffff80000010db10:	08 00                	or     BYTE PTR [rax],al
ffff80000010db12:	00 00                	add    BYTE PTR [rax],al
ffff80000010db14:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010db16:	00 00                	add    BYTE PTR [rax],al
ffff80000010db18:	80 08 00             	or     BYTE PTR [rax],0x0
ffff80000010db1b:	00 74 92 ff          	add    BYTE PTR [rdx+rdx*4-0x1],dh
ffff80000010db1f:	ff 8e 00 00 00 00    	dec    DWORD PTR [rsi+0x0]
ffff80000010db25:	45 0e                	rex.RB (bad) 
ffff80000010db27:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010db2d:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010db30:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010db32:	00 00                	add    BYTE PTR [rax],al
ffff80000010db34:	9c                   	pushf  
ffff80000010db35:	08 00                	or     BYTE PTR [rax],al
ffff80000010db37:	00 e6                	add    dh,ah
ffff80000010db39:	92                   	xchg   edx,eax
ffff80000010db3a:	ff                   	(bad)  
ffff80000010db3b:	ff 8e 00 00 00 00    	dec    DWORD PTR [rsi+0x0]
ffff80000010db41:	45 0e                	rex.RB (bad) 
ffff80000010db43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010db49:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010db4c:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010db4e:	00 00                	add    BYTE PTR [rax],al
ffff80000010db50:	b8 08 00 00 58       	mov    eax,0x58000008
ffff80000010db55:	93                   	xchg   ebx,eax
ffff80000010db56:	ff                   	(bad)  
ffff80000010db57:	ff 8e 00 00 00 00    	dec    DWORD PTR [rsi+0x0]
ffff80000010db5d:	45 0e                	rex.RB (bad) 
ffff80000010db5f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010db65:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010db68:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010db6a:	00 00                	add    BYTE PTR [rax],al
ffff80000010db6c:	d4                   	(bad)  
ffff80000010db6d:	08 00                	or     BYTE PTR [rax],al
ffff80000010db6f:	00 ca                	add    dl,cl
ffff80000010db71:	93                   	xchg   ebx,eax
ffff80000010db72:	ff                   	(bad)  
ffff80000010db73:	ff 8e 00 00 00 00    	dec    DWORD PTR [rsi+0x0]
ffff80000010db79:	45 0e                	rex.RB (bad) 
ffff80000010db7b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010db81:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010db84:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010db86:	00 00                	add    BYTE PTR [rax],al
ffff80000010db88:	f0 08 00             	lock or BYTE PTR [rax],al
ffff80000010db8b:	00 3c 94             	add    BYTE PTR [rsp+rdx*4],bh
ffff80000010db8e:	ff                   	(bad)  
ffff80000010db8f:	ff 8e 00 00 00 00    	dec    DWORD PTR [rsi+0x0]
ffff80000010db95:	45 0e                	rex.RB (bad) 
ffff80000010db97:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010db9d:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010dba0:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010dba2:	00 00                	add    BYTE PTR [rax],al
ffff80000010dba4:	0c 09                	or     al,0x9
ffff80000010dba6:	00 00                	add    BYTE PTR [rax],al
ffff80000010dba8:	ae                   	scas   al,BYTE PTR es:[rdi]
ffff80000010dba9:	94                   	xchg   esp,eax
ffff80000010dbaa:	ff                   	(bad)  
ffff80000010dbab:	ff 8e 00 00 00 00    	dec    DWORD PTR [rsi+0x0]
ffff80000010dbb1:	45 0e                	rex.RB (bad) 
ffff80000010dbb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dbb9:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010dbbc:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010dbbe:	00 00                	add    BYTE PTR [rax],al
ffff80000010dbc0:	28 09                	sub    BYTE PTR [rcx],cl
ffff80000010dbc2:	00 00                	add    BYTE PTR [rax],al
ffff80000010dbc4:	20 95 ff ff 8e 00    	and    BYTE PTR [rbp+0x8effff],dl
ffff80000010dbca:	00 00                	add    BYTE PTR [rax],al
ffff80000010dbcc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010dbcf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dbd5:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010dbd8:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010dbda:	00 00                	add    BYTE PTR [rax],al
ffff80000010dbdc:	44 09 00             	or     DWORD PTR [rax],r8d
ffff80000010dbdf:	00 92 95 ff ff 8e    	add    BYTE PTR [rdx-0x7100006b],dl
ffff80000010dbe5:	00 00                	add    BYTE PTR [rax],al
ffff80000010dbe7:	00 00                	add    BYTE PTR [rax],al
ffff80000010dbe9:	45 0e                	rex.RB (bad) 
ffff80000010dbeb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dbf1:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010dbf4:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010dbf6:	00 00                	add    BYTE PTR [rax],al
ffff80000010dbf8:	60                   	(bad)  
ffff80000010dbf9:	09 00                	or     DWORD PTR [rax],eax
ffff80000010dbfb:	00 04 96             	add    BYTE PTR [rsi+rdx*4],al
ffff80000010dbfe:	ff                   	(bad)  
ffff80000010dbff:	ff 8e 00 00 00 00    	dec    DWORD PTR [rsi+0x0]
ffff80000010dc05:	45 0e                	rex.RB (bad) 
ffff80000010dc07:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dc0d:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010dc10:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010dc12:	00 00                	add    BYTE PTR [rax],al
ffff80000010dc14:	7c 09                	jl     ffff80000010dc1f <_erodata+0x98b>
ffff80000010dc16:	00 00                	add    BYTE PTR [rax],al
ffff80000010dc18:	76 96                	jbe    ffff80000010dbb0 <_erodata+0x91c>
ffff80000010dc1a:	ff                   	(bad)  
ffff80000010dc1b:	ff 8e 00 00 00 00    	dec    DWORD PTR [rsi+0x0]
ffff80000010dc21:	45 0e                	rex.RB (bad) 
ffff80000010dc23:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dc29:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010dc2c:	1c 00                	sbb    al,0x0
ffff80000010dc2e:	00 00                	add    BYTE PTR [rax],al
ffff80000010dc30:	98                   	cwde   
ffff80000010dc31:	09 00                	or     DWORD PTR [rax],eax
ffff80000010dc33:	00 e8                	add    al,ch
ffff80000010dc35:	96                   	xchg   esi,eax
ffff80000010dc36:	ff                   	(bad)  
ffff80000010dc37:	ff                   	(bad)  
ffff80000010dc38:	ea                   	(bad)  
ffff80000010dc39:	01 00                	add    DWORD PTR [rax],eax
ffff80000010dc3b:	00 00                	add    BYTE PTR [rax],al
ffff80000010dc3d:	45 0e                	rex.RB (bad) 
ffff80000010dc3f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dc45:	47 8f 03             	rex.RXB pop QWORD PTR [r11]
ffff80000010dc48:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
ffff80000010dc4c:	1c 00                	sbb    al,0x0
ffff80000010dc4e:	00 00                	add    BYTE PTR [rax],al
ffff80000010dc50:	b8 09 00 00 b2       	mov    eax,0xb2000009
ffff80000010dc55:	98                   	cwde   
ffff80000010dc56:	ff                   	(bad)  
ffff80000010dc57:	ff                   	(bad)  
ffff80000010dc58:	ea                   	(bad)  
ffff80000010dc59:	01 00                	add    DWORD PTR [rax],eax
ffff80000010dc5b:	00 00                	add    BYTE PTR [rax],al
ffff80000010dc5d:	45 0e                	rex.RB (bad) 
ffff80000010dc5f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dc65:	47 8f 03             	rex.RXB pop QWORD PTR [r11]
ffff80000010dc68:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
ffff80000010dc6c:	1c 00                	sbb    al,0x0
ffff80000010dc6e:	00 00                	add    BYTE PTR [rax],al
ffff80000010dc70:	d8 09                	fmul   DWORD PTR [rcx]
ffff80000010dc72:	00 00                	add    BYTE PTR [rax],al
ffff80000010dc74:	7c 9a                	jl     ffff80000010dc10 <_erodata+0x97c>
ffff80000010dc76:	ff                   	(bad)  
ffff80000010dc77:	ff                   	(bad)  
ffff80000010dc78:	ea                   	(bad)  
ffff80000010dc79:	01 00                	add    DWORD PTR [rax],eax
ffff80000010dc7b:	00 00                	add    BYTE PTR [rax],al
ffff80000010dc7d:	45 0e                	rex.RB (bad) 
ffff80000010dc7f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dc85:	47 8f 03             	rex.RXB pop QWORD PTR [r11]
ffff80000010dc88:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
ffff80000010dc8c:	1c 00                	sbb    al,0x0
ffff80000010dc8e:	00 00                	add    BYTE PTR [rax],al
ffff80000010dc90:	f8                   	clc    
ffff80000010dc91:	09 00                	or     DWORD PTR [rax],eax
ffff80000010dc93:	00 46 9c             	add    BYTE PTR [rsi-0x64],al
ffff80000010dc96:	ff                   	(bad)  
ffff80000010dc97:	ff                   	(bad)  
ffff80000010dc98:	ea                   	(bad)  
ffff80000010dc99:	01 00                	add    DWORD PTR [rax],eax
ffff80000010dc9b:	00 00                	add    BYTE PTR [rax],al
ffff80000010dc9d:	45 0e                	rex.RB (bad) 
ffff80000010dc9f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dca5:	47 8f 03             	rex.RXB pop QWORD PTR [r11]
ffff80000010dca8:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
ffff80000010dcac:	1c 00                	sbb    al,0x0
ffff80000010dcae:	00 00                	add    BYTE PTR [rax],al
ffff80000010dcb0:	18 0a                	sbb    BYTE PTR [rdx],cl
ffff80000010dcb2:	00 00                	add    BYTE PTR [rax],al
ffff80000010dcb4:	10 9e ff ff 8d 02    	adc    BYTE PTR [rsi+0x28dffff],bl
ffff80000010dcba:	00 00                	add    BYTE PTR [rax],al
ffff80000010dcbc:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010dcbf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dcc5:	47 8f 03             	rex.RXB pop QWORD PTR [r11]
ffff80000010dcc8:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
ffff80000010dccc:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010dcce:	00 00                	add    BYTE PTR [rax],al
ffff80000010dcd0:	38 0a                	cmp    BYTE PTR [rdx],cl
ffff80000010dcd2:	00 00                	add    BYTE PTR [rax],al
ffff80000010dcd4:	7d a0                	jge    ffff80000010dc76 <_erodata+0x9e2>
ffff80000010dcd6:	ff                   	(bad)  
ffff80000010dcd7:	ff 8e 00 00 00 00    	dec    DWORD PTR [rsi+0x0]
ffff80000010dcdd:	45 0e                	rex.RB (bad) 
ffff80000010dcdf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dce5:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010dce8:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010dcea:	00 00                	add    BYTE PTR [rax],al
ffff80000010dcec:	54                   	push   rsp
ffff80000010dced:	0a 00                	or     al,BYTE PTR [rax]
ffff80000010dcef:	00 ef                	add    bh,ch
ffff80000010dcf1:	a0 ff ff 8e 00 00 00 	movabs al,ds:0x45000000008effff
ffff80000010dcf8:	00 45 
ffff80000010dcfa:	0e                   	(bad)  
ffff80000010dcfb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dd01:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010dd04:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010dd06:	00 00                	add    BYTE PTR [rax],al
ffff80000010dd08:	70 0a                	jo     ffff80000010dd14 <_erodata+0xa80>
ffff80000010dd0a:	00 00                	add    BYTE PTR [rax],al
ffff80000010dd0c:	61                   	(bad)  
ffff80000010dd0d:	a1 ff ff 8e 00 00 00 	movabs eax,ds:0x45000000008effff
ffff80000010dd14:	00 45 
ffff80000010dd16:	0e                   	(bad)  
ffff80000010dd17:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dd1d:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010dd20:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010dd22:	00 00                	add    BYTE PTR [rax],al
ffff80000010dd24:	8c 0a                	mov    WORD PTR [rdx],cs
ffff80000010dd26:	00 00                	add    BYTE PTR [rax],al
ffff80000010dd28:	d3 a1 ff ff 8e 00    	shl    DWORD PTR [rcx+0x8effff],cl
ffff80000010dd2e:	00 00                	add    BYTE PTR [rax],al
ffff80000010dd30:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
ffff80000010dd33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dd39:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010dd3c:	18 00                	sbb    BYTE PTR [rax],al
ffff80000010dd3e:	00 00                	add    BYTE PTR [rax],al
ffff80000010dd40:	a8 0a                	test   al,0xa
ffff80000010dd42:	00 00                	add    BYTE PTR [rax],al
ffff80000010dd44:	45 a2 ff ff 8e 00 00 	rex.RB movabs ds:0x45000000008effff,al
ffff80000010dd4b:	00 00 45 
ffff80000010dd4e:	0e                   	(bad)  
ffff80000010dd4f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dd55:	46 8f 03             	rex.RX pop QWORD PTR [rbx]
ffff80000010dd58:	20 00                	and    BYTE PTR [rax],al
ffff80000010dd5a:	00 00                	add    BYTE PTR [rax],al
ffff80000010dd5c:	c4                   	(bad)  
ffff80000010dd5d:	0a 00                	or     al,BYTE PTR [rax]
ffff80000010dd5f:	00 b7 a2 ff ff 81    	add    BYTE PTR [rdi-0x7e00005e],dh
ffff80000010dd65:	03 00                	add    eax,DWORD PTR [rax]
ffff80000010dd67:	00 00                	add    BYTE PTR [rax],al
ffff80000010dd69:	45 0e                	rex.RB (bad) 
ffff80000010dd6b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
ffff80000010dd71:	41 83 03 03          	add    DWORD PTR [r11],0x3
ffff80000010dd75:	77 03                	ja     ffff80000010dd7a <_erodata+0xae6>
ffff80000010dd77:	0c 07                	or     al,0x7
ffff80000010dd79:	08 00                	or     BYTE PTR [rax],al
	...

Disassembly of section .bss:

ffff800000110000 <buf>:
	...

ffff800000113000 <Pos>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <ES>
   a:	74 75                	je     81 <RAX+0x1>
   c:	20 39                	and    BYTE PTR [rcx],bh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  11:	30 2d 31 37 75 62    	xor    BYTE PTR [rip+0x62753731],ch        # 62753748 <OLDSS+0x62753690>
  17:	75 6e                	jne    87 <RAX+0x7>
  19:	74 75                	je     90 <ERRCODE>
  1b:	31 7e 32             	xor    DWORD PTR [rsi+0x32],edi
  1e:	30 2e                	xor    BYTE PTR [rsi],ch
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 39                	and    BYTE PTR [rcx],bh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[rsi]
  28:	30 00                	xor    BYTE PTR [rax],al
